from sympy.external import import_module
matchpy = import_module("matchpy")
from sympy.utilities.decorator import doctest_depends_on

if matchpy:
    from matchpy import Pattern, ReplacementRule, CustomConstraint
    from sympy.integrals.rubi.utility_function import (Int, Set, With, Module, Scan, MapAnd, FalseQ, ZeroQ, NegativeQ, NonzeroQ, FreeQ, NFreeQ, List, Log, PositiveQ, PositiveIntegerQ, NegativeIntegerQ, IntegerQ, IntegersQ, ComplexNumberQ, PureComplexNumberQ, RealNumericQ, PositiveOrZeroQ, NegativeOrZeroQ, FractionOrNegativeQ, NegQ, Equal, Unequal, IntPart, FracPart, RationalQ, ProductQ, SumQ, NonsumQ, Subst, First, Rest, SqrtNumberQ, SqrtNumberSumQ, LinearQ, Sqrt, ArcCosh, Coefficient, Denominator, Hypergeometric2F1, Not, Simplify, FractionalPart, IntegerPart, AppellF1, EllipticPi, EllipticE, EllipticF, ArcTan, ArcCot, ArcCoth, ArcTanh, ArcSin, ArcSinh, ArcCos, ArcCsc, ArcSec, ArcCsch, ArcSech, Sinh, Tanh, Cosh, Sech, Csch, Coth, LessEqual, Less, Greater, GreaterEqual, FractionQ, IntLinearcQ, Expand, IndependentQ, PowerQ, IntegerPowerQ, PositiveIntegerPowerQ, FractionalPowerQ, AtomQ, ExpQ, LogQ, Head, MemberQ, TrigQ, SinQ, CosQ, TanQ, CotQ, SecQ, CscQ, Sin, Cos, Tan, Cot, Sec, Csc, HyperbolicQ, SinhQ, CoshQ, TanhQ, CothQ, SechQ, CschQ, InverseTrigQ, SinCosQ, SinhCoshQ, LeafCount, Numerator, NumberQ, NumericQ, Length, ListQ, Im, Re, InverseHyperbolicQ, InverseFunctionQ, TrigHyperbolicFreeQ, InverseFunctionFreeQ, RealQ, EqQ, FractionalPowerFreeQ, ComplexFreeQ, PolynomialQ, FactorSquareFree, PowerOfLinearQ, Exponent, QuadraticQ, LinearPairQ, BinomialParts, TrinomialParts, PolyQ, EvenQ, OddQ, PerfectSquareQ, NiceSqrtAuxQ, NiceSqrtQ, Together, PosAux, PosQ, CoefficientList, ReplaceAll, ExpandLinearProduct, GCD, ContentFactor, NumericFactor, NonnumericFactors, MakeAssocList, GensymSubst, KernelSubst, ExpandExpression, Apart, SmartApart, MatchQ, PolynomialQuotientRemainder, FreeFactors, NonfreeFactors, RemoveContentAux, RemoveContent, FreeTerms, NonfreeTerms, ExpandAlgebraicFunction, CollectReciprocals, ExpandCleanup, AlgebraicFunctionQ, Coeff, LeadTerm, RemainingTerms, LeadFactor, RemainingFactors, LeadBase, LeadDegree, Numer, Denom, hypergeom, Expon, MergeMonomials, PolynomialDivide, BinomialQ, TrinomialQ, GeneralizedBinomialQ, GeneralizedTrinomialQ, FactorSquareFreeList, PerfectPowerTest, SquareFreeFactorTest, RationalFunctionQ, RationalFunctionFactors, NonrationalFunctionFactors, Reverse, RationalFunctionExponents, RationalFunctionExpand, ExpandIntegrand, SimplerQ, SimplerSqrtQ, SumSimplerQ, BinomialDegree, TrinomialDegree, CancelCommonFactors, SimplerIntegrandQ, GeneralizedBinomialDegree, GeneralizedBinomialParts, GeneralizedTrinomialDegree, GeneralizedTrinomialParts, MonomialQ, MonomialSumQ, MinimumMonomialExponent, MonomialExponent, LinearMatchQ, PowerOfLinearMatchQ, QuadraticMatchQ, CubicMatchQ, BinomialMatchQ, TrinomialMatchQ, GeneralizedBinomialMatchQ, GeneralizedTrinomialMatchQ, QuotientOfLinearsMatchQ, PolynomialTermQ, PolynomialTerms, NonpolynomialTerms, PseudoBinomialParts, NormalizePseudoBinomial, PseudoBinomialPairQ, PseudoBinomialQ, PolynomialGCD, PolyGCD, AlgebraicFunctionFactors, NonalgebraicFunctionFactors, QuotientOfLinearsP, QuotientOfLinearsParts, QuotientOfLinearsQ, Flatten, Sort, AbsurdNumberQ, AbsurdNumberFactors, NonabsurdNumberFactors, SumSimplerAuxQ, Prepend, Drop, CombineExponents, FactorInteger, FactorAbsurdNumber, SubstForInverseFunction, SubstForFractionalPower, SubstForFractionalPowerOfQuotientOfLinears, FractionalPowerOfQuotientOfLinears, SubstForFractionalPowerQ, SubstForFractionalPowerAuxQ, FractionalPowerOfSquareQ, FractionalPowerSubexpressionQ, Apply, FactorNumericGcd, MergeableFactorQ, MergeFactor, MergeFactors, TrigSimplifyQ, TrigSimplify, TrigSimplifyRecur, Order, FactorOrder, Smallest, OrderedQ, MinimumDegree, PositiveFactors, Sign, NonpositiveFactors, PolynomialInAuxQ, PolynomialInQ, ExponentInAux, ExponentIn, PolynomialInSubstAux, PolynomialInSubst, Distrib, DistributeDegree, FunctionOfPower, DivideDegreesOfFactors, MonomialFactor, FullSimplify, FunctionOfLinearSubst, FunctionOfLinear, NormalizeIntegrand, NormalizeIntegrandAux, NormalizeIntegrandFactor, NormalizeIntegrandFactorBase, NormalizeTogether, NormalizeLeadTermSigns, AbsorbMinusSign, NormalizeSumFactors, SignOfFactor, NormalizePowerOfLinear, SimplifyIntegrand, SimplifyTerm, TogetherSimplify, SmartSimplify, SubstForExpn, ExpandToSum, UnifySum, UnifyTerms, UnifyTerm, CalculusQ, FunctionOfInverseLinear, PureFunctionOfSinhQ, PureFunctionOfTanhQ, PureFunctionOfCoshQ, IntegerQuotientQ, OddQuotientQ, EvenQuotientQ, FindTrigFactor, FunctionOfSinhQ, FunctionOfCoshQ, OddHyperbolicPowerQ, FunctionOfTanhQ, FunctionOfTanhWeight, FunctionOfHyperbolicQ, SmartNumerator, SmartDenominator, SubstForAux, ActivateTrig, ExpandTrig, TrigExpand, SubstForTrig, SubstForHyperbolic, InertTrigFreeQ, LCM, SubstForFractionalPowerOfLinear, FractionalPowerOfLinear, InverseFunctionOfLinear, InertTrigQ, InertReciprocalQ, DeactivateTrig, FixInertTrigFunction, DeactivateTrigAux, PowerOfInertTrigSumQ, PiecewiseLinearQ, KnownTrigIntegrandQ, KnownSineIntegrandQ, KnownTangentIntegrandQ, KnownCotangentIntegrandQ, KnownSecantIntegrandQ, TryPureTanSubst, TryTanhSubst, TryPureTanhSubst, AbsurdNumberGCD, AbsurdNumberGCDList, ExpandTrigExpand, ExpandTrigReduce, ExpandTrigReduceAux, NormalizeTrig, TrigToExp, ExpandTrigToExp, TrigReduce, FunctionOfTrig, AlgebraicTrigFunctionQ, FunctionOfHyperbolic, FunctionOfQ, FunctionOfExpnQ, PureFunctionOfSinQ, PureFunctionOfCosQ, PureFunctionOfTanQ, PureFunctionOfCotQ, FunctionOfCosQ, FunctionOfSinQ, OddTrigPowerQ, FunctionOfTanQ, FunctionOfTanWeight, FunctionOfTrigQ, FunctionOfDensePolynomialsQ, FunctionOfLog, PowerVariableExpn, PowerVariableDegree, PowerVariableSubst, EulerIntegrandQ, FunctionOfSquareRootOfQuadratic, SquareRootOfQuadraticSubst, Divides, EasyDQ, ProductOfLinearPowersQ, Rt, NthRoot, AtomBaseQ, SumBaseQ, NegSumBaseQ, AllNegTermQ, SomeNegTermQ, TrigSquareQ, RtAux, TrigSquare, IntSum, IntTerm, Map2, ConstantFactor, SameQ, ReplacePart, CommonFactors, MostMainFactorPosition, FunctionOfExponentialQ, FunctionOfExponential, FunctionOfExponentialFunction, FunctionOfExponentialFunctionAux, FunctionOfExponentialTest, FunctionOfExponentialTestAux, stdev, rubi_test, If, IntQuadraticQ, IntBinomialQ, RectifyTangent, RectifyCotangent, Inequality, Condition, Simp, SimpHelp, SplitProduct, SplitSum, SubstFor, SubstForAux, FresnelS, FresnelC, Erfc, Erfi, Gamma, FunctionOfTrigOfLinearQ, ElementaryFunctionQ, Complex, UnsameQ, _SimpFixFactor, SimpFixFactor, _FixSimplify, FixSimplify, _SimplifyAntiderivativeSum, SimplifyAntiderivativeSum, _SimplifyAntiderivative, SimplifyAntiderivative, _TrigSimplifyAux, TrigSimplifyAux, Cancel, Part, PolyLog, D, Dist)
    from sympy import Integral, S, sqrt
    from sympy.integrals.rubi.symbol import WC
    from sympy.core.symbol import symbols, Symbol
    from sympy.functions import (log, sin, cos, tan, cot, csc, sec, sqrt, erf, exp, log)
    from sympy.functions.elementary.hyperbolic import (acosh, asinh, atanh, acoth, acsch, asech, cosh, sinh, tanh, coth, sech, csch)
    from sympy.functions.elementary.trigonometric import (atan, acsc, asin, acot, acos, asec)

    A_, B_, C_, F_, G_, H_, a_, b_, c_, d_, e_, f_, g_, h_, i_, j_, k_, l_, m_, n_, p_, q_, r_, t_, u_, v_, s_, w_, x_, y_, z_ = [WC(i) for i in 'ABCFGHabcdefghijklmnpqrtuvswxyz']
    a1_, a2_, b1_, b2_, c1_, c2_, d1_, d2_, n1_, n2_, e1_, e2_, f1_, f2_, g1_, g2_, n1_, n2_, n3_, Pq_, Pm_, Px_, Qm_, Qr_, Qx_, jn_, mn_, non2_, RFx_, RGx_ = [WC(i) for i in ['a1', 'a2', 'b1', 'b2', 'c1', 'c2', 'd1', 'd2', 'n1', 'n2', 'e1', 'e2', 'f1', 'f2', 'g1', 'g2', 'n1', 'n2', 'n3', 'Pq', 'Pm', 'Px', 'Qm', 'Qr', 'Qx', 'jn', 'mn', 'non2', 'RFx', 'RGx']]

    _UseGamma = False

def trinomial_products(rubi):

    pattern1 = Pattern(Integral(1/sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule1 = ReplacementRule(pattern1, lambda c, x, b, a : (b/S(2) + c*x)*Int(1/(b/S(2) + c*x), x)/sqrt(a + b*x + c*x**S(2)))
    rubi.add(rule1)

    pattern2 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: NonzeroQ(S(2)*p + S(1))))
    rule2 = ReplacementRule(pattern2, lambda c, x, p, b, a : (b + S(2)*c*x)*(a + b*x + c*x**S(2))**p/(S(2)*c*(S(2)*p + S(1))))
    rubi.add(rule2)

    pattern3 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda c, b, a: PerfectSquareQ(-S(4)*a*c + b**S(2))), )
    def With3(c, x, p, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return c**(-p)*Int(Simp(b/S(2) + c*x - q/S(2), x)**p*Simp(b/S(2) + c*x + q/S(2), x)**p, x)
    rule3 = ReplacementRule(pattern3, lambda c, x, p, b, a : With3(c, x, p, b, a))
    rubi.add(rule3)

    pattern4 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda c, b, a: Not(PerfectSquareQ(-S(4)*a*c + b**S(2)))))
    rule4 = ReplacementRule(pattern4, lambda c, x, p, b, a : Int(ExpandIntegrand((a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule4)

    pattern5 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda p: IntegerQ(S(4)*p)))
    rule5 = ReplacementRule(pattern5, lambda c, x, p, b, a : -p*(-S(4)*a*c + b**S(2))*Int((a + b*x + c*x**S(2))**(p + S(-1)), x)/(S(2)*c*(S(2)*p + S(1))) + (b + S(2)*c*x)*(a + b*x + c*x**S(2))**p/(S(2)*c*(S(2)*p + S(1))))
    rubi.add(rule5)

    pattern6 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(-3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule6 = ReplacementRule(pattern6, lambda c, x, b, a : -S(2)*(b + S(2)*c*x)/((-S(4)*a*c + b**S(2))*sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule6)

    pattern7 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: Unequal(p, S(-3)/2)), CustomConstraint(lambda p: IntegerQ(S(4)*p)))
    rule7 = ReplacementRule(pattern7, lambda c, x, p, b, a : -S(2)*c*(S(2)*p + S(3))*Int((a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))) + (b + S(2)*c*x)*(a + b*x + c*x**S(2))**(p + S(1))/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule7)

    pattern8 = Pattern(Integral(1/(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, a: PosQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, a: PerfectSquareQ(-S(4)*a*c + b**S(2))), )
    def With8(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return c*Int(1/Simp(b/S(2) + c*x - q/S(2), x), x)/q - c*Int(1/Simp(b/S(2) + c*x + q/S(2), x), x)/q
    rule8 = ReplacementRule(pattern8, lambda c, x, b, a : With8(c, x, b, a))
    rubi.add(rule8)

    pattern9 = Pattern(Integral(1/(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, q, x, a: RationalQ(q) & (EqQ(q**S(2), S(1)) | Not(RationalQ(-S(4)*a*c + b**S(2))))))
    def With9(c, x, b, a):
        q = -S(4)*a*c/b**S(2) + S(1)
        return -S(2)*Subst(Int(1/(q - x**S(2)), x), x, S(1) + S(2)*c*x/b)/b
    rule9 = ReplacementRule(pattern9, lambda c, x, b, a : With9(c, x, b, a))
    rubi.add(rule9)

    pattern10 = Pattern(Integral(1/(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule10 = ReplacementRule(pattern10, lambda c, x, b, a : -S(2)*Subst(Int(1/Simp(-S(4)*a*c + b**S(2) - x**S(2), x), x), x, b + S(2)*c*x))
    rubi.add(rule10)

    pattern11 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: PositiveQ(S(4)*a - b**S(2)/c)))
    rule11 = ReplacementRule(pattern11, lambda c, x, p, b, a : (-S(4)*c/(-S(4)*a*c + b**S(2)))**(-p)*Subst(Int(Simp(-x**S(2)/(-S(4)*a*c + b**S(2)) + S(1), x)**p, x), x, b + S(2)*c*x)/(S(2)*c))
    rubi.add(rule11)

    pattern12 = Pattern(Integral(1/sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)))
    rule12 = ReplacementRule(pattern12, lambda c, x, b : S(2)*Subst(Int(1/(-c*x**S(2) + S(1)), x), x, x/sqrt(b*x + c*x**S(2))))
    rubi.add(rule12)

    pattern13 = Pattern(Integral(1/sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule13 = ReplacementRule(pattern13, lambda c, x, b, a : S(2)*Subst(Int(1/(S(4)*c - x**S(2)), x), x, (b + S(2)*c*x)/sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule13)

    pattern14 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: LessEqual(S(3), Denominator(p), S(4))))
    rule14 = ReplacementRule(pattern14, lambda c, x, b, p : (-c*(b*x + c*x**S(2))/b**S(2))**(-p)*(b*x + c*x**S(2))**p*Int((-c*x/b - c**S(2)*x**S(2)/b**S(2))**p, x))
    rubi.add(rule14)

    pattern15 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda c, b, p, x, d, a: LessEqual(S(3), d, S(4))))
    def With15(c, x, p, b, a):
        d = Denominator(p)
        return d*sqrt((b + S(2)*c*x)**S(2))*Subst(Int(x**(d*(p + S(1)) + S(-1))/sqrt(-S(4)*a*c + b**S(2) + S(4)*c*x**d), x), x, (a + b*x + c*x**S(2))**(1/d))/(b + S(2)*c*x)
    rule15 = ReplacementRule(pattern15, lambda c, x, p, b, a : With15(c, x, p, b, a))
    rubi.add(rule15)

    pattern16 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(S(4)*p))), )
    def With16(c, x, p, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -((-b - S(2)*c*x + q)/(S(2)*q))**(-p + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Hypergeometric2F1(-p, p + S(1), p + S(2), (b + S(2)*c*x + q)/(S(2)*q))/(q*(p + S(1)))
    rule16 = ReplacementRule(pattern16, lambda c, x, p, b, a : With16(c, x, p, b, a))
    rubi.add(rule16)

    pattern17 = Pattern(Integral((u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule17 = ReplacementRule(pattern17, lambda c, x, p, b, u, a : Subst(Int((a + b*x + c*x**S(2))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule17)

    pattern18 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(1)/2)))
    rule18 = ReplacementRule(pattern18, lambda e, d, c, x, m, p, b, a : c**(-m/S(2) + S(-1)/2)*e**m*(a + b*x + c*x**S(2))**(m/S(2) + p + S(1)/2)/(m + S(2)*p + S(1)))
    rubi.add(rule18)

    pattern19 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(1))))
    rule19 = ReplacementRule(pattern19, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*log(RemoveContent(d + e*x, x))/e)
    rubi.add(rule19)

    pattern20 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))))
    rule20 = ReplacementRule(pattern20, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(2)*p + S(1))))
    rubi.add(rule20)

    pattern21 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2))), CustomConstraint(lambda m: NonzeroQ(m + S(1))))
    rule21 = ReplacementRule(pattern21, lambda e, d, c, x, m, p, b, a : -(b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/((m + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule21)

    pattern22 = Pattern(Integral(sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))/(x_*WC('e', S(1)) + WC('d', S(0)))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule22 = ReplacementRule(pattern22, lambda e, d, c, x, b, a : sqrt(a + b*x + c*x**S(2))*Int((b + S(2)*c*x)/(d + e*x)**S(2), x)/(b + S(2)*c*x))
    rubi.add(rule22)

    pattern23 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: NonzeroQ(m + S(2))))
    rule23 = ReplacementRule(pattern23, lambda e, d, c, x, m, b, a : (d + e*x)**(m + S(1))*sqrt(a + b*x + c*x**S(2))/(e*(m + S(2))) - (-b*e + S(2)*c*d)*sqrt(a + b*x + c*x**S(2))*Int((d + e*x)**m, x)/(e*(b + S(2)*c*x)*(m + S(2))))
    rubi.add(rule23)

    pattern24 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))**S(2)*sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule24 = ReplacementRule(pattern24, lambda e, d, c, x, b, a : -S(4)*c*e*sqrt(a + b*x + c*x**S(2))/((d + e*x)*(-b*e + S(2)*c*d)**S(2)) + S(2)*c*Int(S(1)/((d + e*x)*sqrt(a + b*x + c*x**S(2))), x)/(-b*e + S(2)*c*d))
    rubi.add(rule24)

    pattern25 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: NonzeroQ(m + S(2))))
    rule25 = ReplacementRule(pattern25, lambda e, d, c, x, m, p, b, a : -S(2)*c*e*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/((-b*e + S(2)*c*d)**S(2)*(m*p + S(-1))) - (b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/((m + S(2))*(-b*e + S(2)*c*d)))
    rubi.add(rule25)

    pattern26 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: NonzeroQ(p + S(3)/2)))
    rule26 = ReplacementRule(pattern26, lambda e, d, c, x, p, b, a : e*(a + b*x + c*x**S(2))**(p + S(1))/(S(2)*c*(p + S(1))) + (-b*e + S(2)*c*d)*Int((a + b*x + c*x**S(2))**p, x)/(S(2)*c))
    rubi.add(rule26)

    pattern27 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda m: Inequality(S(-2), LessEqual, m, Less, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule27 = ReplacementRule(pattern27, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(1))) - p*(b + S(2)*c*x)*(d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1))/(e**S(2)*(m + S(1))*(m + S(2)*p + S(1))) + p*(S(2)*p + S(-1))*(-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e**S(2)*(m + S(1))*(m + S(2)*p + S(1))))
    rubi.add(rule27)

    pattern28 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda m: Less(m, S(-2))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(3)) & Greater(m + S(3)*p + S(3), S(0)))))
    rule28 = ReplacementRule(pattern28, lambda e, d, c, x, m, p, b, a : S(2)*c*p*(S(2)*p + S(-1))*Int((d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e**S(2)*(m + S(1))*(m + S(2))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(1))) - p*(b + S(2)*c*x)*(d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1))/(e**S(2)*(m + S(1))*(m + S(2))))
    rubi.add(rule28)

    pattern29 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(3)) & Greater(m + S(3)*p + S(3), S(0)))), CustomConstraint(lambda m: Not(RationalQ(m) & Less(m, S(-2)))), CustomConstraint(lambda m, p: Not(IntegerQ(m) & Less(S(0), m, S(2)*p))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule29 = ReplacementRule(pattern29, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(2)*p + S(1))) - p*(b + S(2)*c*x)*(d + e*x)**(m + S(1))*(-b*e + S(2)*c*d)*(a + b*x + c*x**S(2))**(p + S(-1))/(S(2)*c*e**S(2)*(m + S(2)*p)*(m + S(2)*p + S(1))) + p*(S(2)*p + S(-1))*(-b*e + S(2)*c*d)**S(2)*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(S(2)*c*e**S(2)*(m + S(2)*p)*(m + S(2)*p + S(1))))
    rubi.add(rule29)

    pattern30 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Inequality(S(0), Less, m, LessEqual, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule30 = ReplacementRule(pattern30, lambda e, d, c, x, m, p, b, a : e**S(2)*m*(m + S(2)*p + S(2))*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(S(2)*p + S(1))*(-b*e + S(2)*c*d)) - e*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*(m + S(2)*p + S(2))/((p + S(1))*(S(2)*p + S(1))*(-b*e + S(2)*c*d)) + (b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/((S(2)*p + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule30)

    pattern31 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule31 = ReplacementRule(pattern31, lambda e, d, c, x, m, p, b, a : e**S(2)*m*(m + S(-1))*Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(S(2)*c*(p + S(1))*(S(2)*p + S(1))) - e*m*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(S(2)*c*(p + S(1))*(S(2)*p + S(1))) + (b + S(2)*c*x)*(d + e*x)**m*(a + b*x + c*x**S(2))**p/(S(2)*c*(S(2)*p + S(1))))
    rubi.add(rule31)

    pattern32 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule32 = ReplacementRule(pattern32, lambda e, d, c, x, m, p, b, a : S(2)*c*e**S(2)*(m + S(2)*p + S(2))*(m + S(2)*p + S(3))*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(S(2)*p + S(1))*(-b*e + S(2)*c*d)**S(2)) - S(2)*c*e*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(m + S(2)*p + S(2))/((p + S(1))*(S(2)*p + S(1))*(-b*e + S(2)*c*d)**S(2)) + (b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/((S(2)*p + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule32)

    pattern33 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m, p: Not(RationalQ(p)) | Inequality(S(-1), LessEqual, p, Less, S(0)) | (Equal(m, S(1)/2) & Less(p, S(0))) | (IntegerQ(m) & Less(S(0), m, S(2)*p))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(S(2)*p)))
    rule33 = ReplacementRule(pattern33, lambda e, d, c, x, m, p, b, a : m*(-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**p, x)/(S(2)*c*(m + S(2)*p + S(1))) + (b + S(2)*c*x)*(d + e*x)**m*(a + b*x + c*x**S(2))**p/(S(2)*c*(m + S(2)*p + S(1))))
    rubi.add(rule33)

    pattern34 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule34 = ReplacementRule(pattern34, lambda e, d, c, x, m, p, b, a : S(2)*c*(m + S(2)*p + S(2))*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/((m + S(1))*(-b*e + S(2)*c*d)) - (b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/((m + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule34)

    pattern35 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule35 = ReplacementRule(pattern35, lambda e, d, c, x, m, p, b, a : c**(-IntPart(p))*(b/S(2) + c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b/S(2) + c*x)**(S(2)*p)*(d + e*x)**m, x))
    rubi.add(rule35)

    pattern36 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule36 = ReplacementRule(pattern36, lambda e, d, c, x, m, p, b, a : Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule36)

    pattern37 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, a, m, p: IntegerQ(p) | (PositiveQ(a) & PositiveQ(d) & IntegerQ(m + p))))
    rule37 = ReplacementRule(pattern37, lambda e, d, c, x, m, p, a : Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule37)

    pattern38 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)))
    rule38 = ReplacementRule(pattern38, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(p + S(1))))
    rubi.add(rule38)

    pattern39 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)))
    rule39 = ReplacementRule(pattern39, lambda e, d, c, x, m, p, a : e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))/(c*(p + S(1))))
    rubi.add(rule39)

    pattern40 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2))))
    rule40 = ReplacementRule(pattern40, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/((p + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule40)

    pattern41 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2))))
    rule41 = ReplacementRule(pattern41, lambda e, d, c, x, m, p, a : e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(S(2)*c*d*(p + S(1))))
    rubi.add(rule41)

    pattern42 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**S(2)*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule42 = ReplacementRule(pattern42, lambda e, d, c, x, p, b, a : -e**S(2)*(p + S(2))*Int((a + b*x + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))) + e*(d + e*x)*(a + b*x + c*x**S(2))**(p + S(1))/(c*(p + S(1))))
    rubi.add(rule42)

    pattern43 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule43 = ReplacementRule(pattern43, lambda e, d, c, x, p, a : -e**S(2)*(p + S(2))*Int((a + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)/(c*(p + S(1))))
    rubi.add(rule43)

    pattern44 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda m, p: Less(S(0), -m, p) | Less(p, -m, S(0))), CustomConstraint(lambda m: Unequal(m, S(2))), CustomConstraint(lambda m: Unequal(m, S(-1))))
    rule44 = ReplacementRule(pattern44, lambda e, d, c, x, m, p, b, a : Int((a/d + c*x/e)**(-m)*(a + b*x + c*x**S(2))**(m + p), x))
    rubi.add(rule44)

    pattern45 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda m, p: Less(S(0), -m, p) | Less(p, -m, S(0))), CustomConstraint(lambda m: Unequal(m, S(2))), CustomConstraint(lambda m: Unequal(m, S(-1))))
    rule45 = ReplacementRule(pattern45, lambda e, d, c, x, m, p, a : a**(-m)*d**(S(2)*m)*Int((a + c*x**S(2))**(m + p)*(d - e*x)**(-m), x))
    rubi.add(rule45)

    pattern46 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: PositiveIntegerQ(m + p)))
    rule46 = ReplacementRule(pattern46, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(1))) + (m + p)*(-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**p, x)/(c*(m + S(2)*p + S(1))))
    rubi.add(rule46)

    pattern47 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: PositiveIntegerQ(m + p)))
    rule47 = ReplacementRule(pattern47, lambda e, d, c, x, m, p, a : S(2)*d*(m + p)*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(-1)), x)/(m + S(2)*p + S(1)) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))/(c*(m + S(2)*p + S(1))))
    rubi.add(rule47)

    pattern48 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: NegativeIntegerQ(m + S(2)*p + S(2))))
    rule48 = ReplacementRule(pattern48, lambda e, d, c, x, m, p, b, a : c*(m + S(2)*p + S(2))*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/((-b*e + S(2)*c*d)*(m + p + S(1))) - e*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/((-b*e + S(2)*c*d)*(m + p + S(1))))
    rubi.add(rule48)

    pattern49 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: NegativeIntegerQ(m + S(2)*p + S(2))))
    rule49 = ReplacementRule(pattern49, lambda e, d, c, x, m, p, a : (m + S(2)*p + S(2))*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1)), x)/(S(2)*d*(m + p + S(1))) - e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(S(2)*c*d*(m + p + S(1))))
    rubi.add(rule49)

    pattern50 = Pattern(Integral(S(1)/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule50 = ReplacementRule(pattern50, lambda e, d, c, x, b, a : S(2)*e*Subst(Int(1/(-b*e + S(2)*c*d + e**S(2)*x**S(2)), x), x, sqrt(a + b*x + c*x**S(2))/sqrt(d + e*x)))
    rubi.add(rule50)

    pattern51 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(2)*WC('c', S(1)))*sqrt(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))))
    rule51 = ReplacementRule(pattern51, lambda e, d, c, x, a : S(2)*e*Subst(Int(1/(S(2)*c*d + e**S(2)*x**S(2)), x), x, sqrt(a + c*x**S(2))/sqrt(d + e*x)))
    rubi.add(rule51)

    pattern52 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: Less(m, S(-2)) | ZeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule52 = ReplacementRule(pattern52, lambda e, d, c, x, m, p, b, a : -c*p*Int((d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e**S(2)*(m + p + S(1))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + p + S(1))))
    rubi.add(rule52)

    pattern53 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: Less(m, S(-2)) | ZeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule53 = ReplacementRule(pattern53, lambda e, d, c, x, m, p, a : -c*p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(2)), x)/(e**S(2)*(m + p + S(1))) + (a + c*x**S(2))**p*(d + e*x)**(m + S(1))/(e*(m + p + S(1))))
    rubi.add(rule53)

    pattern54 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: Equal(m + p + S(1), S(0)) | Inequality(S(-2), LessEqual, m, Less, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule54 = ReplacementRule(pattern54, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(2)*p + S(1))) - p*(-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e**S(2)*(m + S(2)*p + S(1))))
    rubi.add(rule54)

    pattern55 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: Equal(m + p + S(1), S(0)) | Inequality(S(-2), LessEqual, m, Less, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule55 = ReplacementRule(pattern55, lambda e, d, c, x, m, p, a : -S(2)*c*d*p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(1)), x)/(e**S(2)*(m + S(2)*p + S(1))) + (a + c*x**S(2))**p*(d + e*x)**(m + S(1))/(e*(m + S(2)*p + S(1))))
    rubi.add(rule55)

    pattern56 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Inequality(S(0), Less, m, LessEqual, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule56 = ReplacementRule(pattern56, lambda e, d, c, x, m, p, b, a : -(-b*e + S(2)*c*d)*(m + S(2)*p + S(2))*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))) + (d + e*x)**m*(-b*e + S(2)*c*d)*(a + b*x + c*x**S(2))**(p + S(1))/(e*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule56)

    pattern57 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Inequality(S(0), Less, m, LessEqual, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule57 = ReplacementRule(pattern57, lambda e, d, c, x, m, p, a : d*(m + S(2)*p + S(2))*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1)), x)/(S(2)*a*(p + S(1))) - d*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(S(2)*a*e*(p + S(1))))
    rubi.add(rule57)

    pattern58 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule58 = ReplacementRule(pattern58, lambda e, d, c, x, m, p, b, a : -e**S(2)*(m + p)*Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))) + e*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(p + S(1))))
    rubi.add(rule58)

    pattern59 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule59 = ReplacementRule(pattern59, lambda e, d, c, x, m, p, a : -e**S(2)*(m + p)*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2)), x)/(c*(p + S(1))) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))/(c*(p + S(1))))
    rubi.add(rule59)

    pattern60 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: GreaterEqual(m, S(1))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule60 = ReplacementRule(pattern60, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(1))) + (m + p)*(-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**p, x)/(c*(m + S(2)*p + S(1))))
    rubi.add(rule60)

    pattern61 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: GreaterEqual(m, S(1))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule61 = ReplacementRule(pattern61, lambda e, d, c, x, m, p, a : S(2)*d*(m + p)*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(-1)), x)/(m + S(2)*p + S(1)) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))/(c*(m + S(2)*p + S(1))))
    rubi.add(rule61)

    pattern62 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule62 = ReplacementRule(pattern62, lambda e, d, c, x, m, p, b, a : c*(m + S(2)*p + S(2))*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/((-b*e + S(2)*c*d)*(m + p + S(1))) - e*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/((-b*e + S(2)*c*d)*(m + p + S(1))))
    rubi.add(rule62)

    pattern63 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule63 = ReplacementRule(pattern63, lambda e, d, c, x, m, p, a : (m + S(2)*p + S(2))*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1)), x)/(S(2)*d*(m + p + S(1))) - e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(S(2)*c*d*(m + p + S(1))))
    rubi.add(rule63)

    pattern64 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule64 = ReplacementRule(pattern64, lambda e, c, x, m, p, b : x**(-m - p)*(e*x)**m*(b + c*x)**(-p)*(b*x + c*x**S(2))**p*Int(x**(m + p)*(b + c*x)**p, x))
    rubi.add(rule64)

    pattern65 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule65 = ReplacementRule(pattern65, lambda e, d, c, x, m, p, a : Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule65)

    pattern66 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule66 = ReplacementRule(pattern66, lambda e, d, c, x, m, p, b, a : (d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule66)

    pattern67 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule67 = ReplacementRule(pattern67, lambda e, d, c, x, m, p, a : (a + c*x**S(2))**FracPart(p)*(d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule67)

    pattern68 = Pattern(Integral(S(1)/((d_ + x_*WC('e', S(1)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)))
    rule68 = ReplacementRule(pattern68, lambda e, d, c, x, b, a : b**S(2)*Int((d + e*x)/(a + b*x + c*x**S(2)), x)/(d**S(2)*(-S(4)*a*c + b**S(2))) - S(4)*b*c*Int(1/(b + S(2)*c*x), x)/(d*(-S(4)*a*c + b**S(2))))
    rubi.add(rule68)

    pattern69 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: NonzeroQ(p + S(1))))
    rule69 = ReplacementRule(pattern69, lambda e, d, c, x, m, p, b, a : S(2)*c*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(e*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule69)

    pattern70 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda m, p: Not(Unequal(p, S(1)) & ZeroQ(m + S(-3)))))
    rule70 = ReplacementRule(pattern70, lambda e, d, c, x, m, p, b, a : Int(ExpandIntegrand((d + e*x)**m*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule70)

    pattern71 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m, p: Not(EvenQ(m) & Less(m + S(2)*p + S(3), S(0)))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule71 = ReplacementRule(pattern71, lambda e, d, c, x, m, p, b, a : -b*p*Int((d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(d*e*(m + S(1))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(1))))
    rubi.add(rule71)

    pattern72 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Not(RationalQ(m) & Less(m, S(-1)))), CustomConstraint(lambda m, p: Not(PositiveIntegerQ(m/S(2) + S(-1)/2) & (Not(IntegerQ(p)) | Less(m, S(2)*p)))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule72 = ReplacementRule(pattern72, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(2)*p + S(1))) - d*p*(-S(4)*a*c + b**S(2))*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(b*e*(m + S(2)*p + S(1))))
    rubi.add(rule72)

    pattern73 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule73 = ReplacementRule(pattern73, lambda e, d, c, x, m, p, b, a : -d*e*(m + S(-1))*Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(b*(p + S(1))) + d*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(b*(p + S(1))))
    rubi.add(rule73)

    pattern74 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Not(RationalQ(m) & Greater(m, S(1)))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule74 = ReplacementRule(pattern74, lambda e, d, c, x, m, p, b, a : -S(2)*c*(m + S(2)*p + S(3))*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))) + S(2)*c*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(e*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule74)

    pattern75 = Pattern(Integral(S(1)/((d_ + x_*WC('e', S(1)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)))
    rule75 = ReplacementRule(pattern75, lambda e, d, c, x, b, a : S(4)*c*Subst(Int(1/(-S(4)*a*c*e + b**S(2)*e + S(4)*c*e*x**S(2)), x), x, sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule75)

    pattern76 = Pattern(Integral(S(1)/(sqrt(d_ + x_*WC('e', S(1)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda c, b, a: NegativeQ(c/(-S(4)*a*c + b**S(2)))))
    rule76 = ReplacementRule(pattern76, lambda e, d, c, x, b, a : S(4)*sqrt(-c/(-S(4)*a*c + b**S(2)))*Subst(Int(1/sqrt(Simp(-b**S(2)*x**S(4)/(d**S(2)*(-S(4)*a*c + b**S(2))) + S(1), x)), x), x, sqrt(d + e*x))/e)
    rubi.add(rule76)

    pattern77 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda c, b, a: NegativeQ(c/(-S(4)*a*c + b**S(2)))))
    rule77 = ReplacementRule(pattern77, lambda e, d, c, x, b, a : S(4)*sqrt(-c/(-S(4)*a*c + b**S(2)))*Subst(Int(x**S(2)/sqrt(Simp(-b**S(2)*x**S(4)/(d**S(2)*(-S(4)*a*c + b**S(2))) + S(1), x)), x), x, sqrt(d + e*x))/e)
    rubi.add(rule77)

    pattern78 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: EqQ(m**S(2), S(1)/4)))
    rule78 = ReplacementRule(pattern78, lambda e, d, c, x, m, b, a : sqrt(-c*(a + b*x + c*x**S(2))/(-S(4)*a*c + b**S(2)))*Int((d + e*x)**m/sqrt(-a*c/(-S(4)*a*c + b**S(2)) - b*c*x/(-S(4)*a*c + b**S(2)) - c**S(2)*x**S(2)/(-S(4)*a*c + b**S(2))), x)/sqrt(a + b*x + c*x**S(2)))
    rubi.add(rule78)

    pattern79 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m, p: OddQ(m) | IntegerQ(S(2)*p) | (IntegerQ(m) & RationalQ(p))))
    rule79 = ReplacementRule(pattern79, lambda e, d, c, x, m, p, b, a : S(2)*d*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(b*(m + S(2)*p + S(1))) + d**S(2)*(m + S(-1))*(-S(4)*a*c + b**S(2))*Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**p, x)/(b**S(2)*(m + S(2)*p + S(1))))
    rubi.add(rule79)

    pattern80 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m, p: IntegerQ(S(2)*p) | (IntegerQ(m) & RationalQ(p)) | IntegerQ(m/S(2) + p + S(3)/2)))
    rule80 = ReplacementRule(pattern80, lambda e, d, c, x, m, p, b, a : b**S(2)*(m + S(2)*p + S(3))*Int((d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**p, x)/(d**S(2)*(m + S(1))*(-S(4)*a*c + b**S(2))) - S(2)*b*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(d*(m + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule80)

    pattern81 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + S(2)*c*d)))
    rule81 = ReplacementRule(pattern81, lambda e, d, c, x, m, p, b, a : Subst(Int(x**m*(a - b**S(2)/(S(4)*c) + c*x**S(2)/e**S(2))**p, x), x, d + e*x)/e)
    rubi.add(rule81)

    pattern82 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule82 = ReplacementRule(pattern82, lambda e, d, c, x, m, p, b, a : Int(ExpandIntegrand((d + e*x)**m*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule82)

    pattern83 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda m, p: Not(Greater(p, S(1)) & ZeroQ(m + S(-1)))))
    rule83 = ReplacementRule(pattern83, lambda e, d, c, x, m, p, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(d + e*x)**m, x), x))
    rubi.add(rule83)

    pattern84 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))/(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda c, b, a: NiceSqrtQ(-S(4)*a*c + b**S(2))), )
    def With84(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (c*d - e*(b/S(2) - q/S(2)))*Int(1/(b/S(2) + c*x - q/S(2)), x)/q - (c*d - e*(b/S(2) + q/S(2)))*Int(1/(b/S(2) + c*x + q/S(2)), x)/q
    rule84 = ReplacementRule(pattern84, lambda e, d, c, x, b, a : With84(e, d, c, x, b, a))
    rubi.add(rule84)

    pattern85 = Pattern(Integral((d_ + x_*WC('e', S(1)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: NiceSqrtQ(-a*c)), )
    def With85(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return (-c*d/(S(2)*q) + e/S(2))*Int(1/(c*x + q), x) + (c*d/(S(2)*q) + e/S(2))*Int(1/(c*x - q), x)
    rule85 = ReplacementRule(pattern85, lambda e, d, c, x, a : With85(e, d, c, x, a))
    rubi.add(rule85)

    pattern86 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))/(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda c, b, a: Not(NiceSqrtQ(-S(4)*a*c + b**S(2)))))
    rule86 = ReplacementRule(pattern86, lambda e, d, c, x, b, a : e*Int((b + S(2)*c*x)/(a + b*x + c*x**S(2)), x)/(S(2)*c) + (-b*e + S(2)*c*d)*Int(1/(a + b*x + c*x**S(2)), x)/(S(2)*c))
    rubi.add(rule86)

    pattern87 = Pattern(Integral((d_ + x_*WC('e', S(1)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: Not(NiceSqrtQ(-a*c))))
    rule87 = ReplacementRule(pattern87, lambda e, d, c, x, a : d*Int(1/(a + c*x**S(2)), x) + e*Int(x/(a + c*x**S(2)), x))
    rubi.add(rule87)

    pattern88 = Pattern(Integral(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule88 = ReplacementRule(pattern88, lambda e, d, c, x, b, a : S(2)*e*Subst(Int(x**S(2)/(a*e**S(2) - b*d*e + c*d**S(2) + c*x**S(4) - x**S(2)*(-b*e + S(2)*c*d)), x), x, sqrt(d + e*x)))
    rubi.add(rule88)

    pattern89 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule89 = ReplacementRule(pattern89, lambda e, d, c, x, a : S(2)*e*Subst(Int(x**S(2)/(a*e**S(2) + c*d**S(2) - S(2)*c*d*x**S(2) + c*x**S(4)), x), x, sqrt(d + e*x)))
    rubi.add(rule89)

    pattern90 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda d, m: NonzeroQ(d) | Greater(m, S(2))))
    rule90 = ReplacementRule(pattern90, lambda e, d, c, x, m, b, a : Int(PolynomialDivide((d + e*x)**m, a + b*x + c*x**S(2), x), x))
    rubi.add(rule90)

    pattern91 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda d, m: NonzeroQ(d) | Greater(m, S(2))))
    rule91 = ReplacementRule(pattern91, lambda e, d, c, x, m, a : Int(PolynomialDivide((d + e*x)**m, a + c*x**S(2), x), x))
    rubi.add(rule91)

    pattern92 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))))
    rule92 = ReplacementRule(pattern92, lambda e, d, c, x, m, b, a : e*(d + e*x)**(m + S(-1))/(c*(m + S(-1))) + Int((d + e*x)**(m + S(-2))*Simp(-a*e**S(2) + c*d**S(2) + e*x*(-b*e + S(2)*c*d), x)/(a + b*x + c*x**S(2)), x)/c)
    rubi.add(rule92)

    pattern93 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))))
    rule93 = ReplacementRule(pattern93, lambda e, d, c, x, m, a : e*(d + e*x)**(m + S(-1))/(c*(m + S(-1))) + Int((d + e*x)**(m + S(-2))*Simp(-a*e**S(2) + c*d**S(2) + S(2)*c*d*e*x, x)/(a + c*x**S(2)), x)/c)
    rubi.add(rule93)

    pattern94 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule94 = ReplacementRule(pattern94, lambda e, d, c, x, b, a : e**S(2)*Int(1/(d + e*x), x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int((-b*e + c*d - c*e*x)/(a + b*x + c*x**S(2)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule94)

    pattern95 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)))*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule95 = ReplacementRule(pattern95, lambda e, d, c, x, a : e**S(2)*Int(1/(d + e*x), x)/(a*e**S(2) + c*d**S(2)) + Int((c*d - c*e*x)/(a + c*x**S(2)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule95)

    pattern96 = Pattern(Integral(S(1)/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule96 = ReplacementRule(pattern96, lambda e, d, c, x, b, a : S(2)*e*Subst(Int(1/(a*e**S(2) - b*d*e + c*d**S(2) + c*x**S(4) - x**S(2)*(-b*e + S(2)*c*d)), x), x, sqrt(d + e*x)))
    rubi.add(rule96)

    pattern97 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule97 = ReplacementRule(pattern97, lambda e, d, c, x, a : S(2)*e*Subst(Int(1/(a*e**S(2) + c*d**S(2) - S(2)*c*d*x**S(2) + c*x**S(4)), x), x, sqrt(d + e*x)))
    rubi.add(rule97)

    pattern98 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule98 = ReplacementRule(pattern98, lambda e, d, c, x, m, b, a : e*(d + e*x)**(m + S(1))/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**(m + S(1))*Simp(-b*e + c*d - c*e*x, x)/(a + b*x + c*x**S(2)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule98)

    pattern99 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule99 = ReplacementRule(pattern99, lambda e, d, c, x, m, a : c*Int((d - e*x)*(d + e*x)**(m + S(1))/(a + c*x**S(2)), x)/(a*e**S(2) + c*d**S(2)) + e*(d + e*x)**(m + S(1))/((m + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule99)

    pattern100 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule100 = ReplacementRule(pattern100, lambda e, d, c, x, m, b, a : Int(ExpandIntegrand((d + e*x)**m, 1/(a + b*x + c*x**S(2)), x), x))
    rubi.add(rule100)

    pattern101 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule101 = ReplacementRule(pattern101, lambda e, d, c, x, m, a : Int(ExpandIntegrand((d + e*x)**m, 1/(a + c*x**S(2)), x), x))
    rubi.add(rule101)

    pattern102 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule102 = ReplacementRule(pattern102, lambda e, d, c, x, b, a : -S(2)*(-S(2)*a*e + b*d + x*(-b*e + S(2)*c*d))/((-S(4)*a*c + b**S(2))*sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule102)

    pattern103 = Pattern(Integral((d_ + x_*WC('e', S(1)))/(a_ + x_**S(2)*WC('c', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule103 = ReplacementRule(pattern103, lambda e, d, c, x, a : (-a*e + c*d*x)/(a*c*sqrt(a + c*x**S(2))))
    rubi.add(rule103)

    pattern104 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: Unequal(p, S(-3)/2)))
    rule104 = ReplacementRule(pattern104, lambda e, d, c, x, p, b, a : -(S(2)*p + S(3))*(-b*e + S(2)*c*d)*Int((a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))) + (a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*e + b*d + x*(-b*e + S(2)*c*d))/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule104)

    pattern105 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: Unequal(p, S(-3)/2)))
    rule105 = ReplacementRule(pattern105, lambda e, d, c, x, p, a : d*(S(2)*p + S(3))*Int((a + c*x**S(2))**(p + S(1)), x)/(S(2)*a*(p + S(1))) + (a + c*x**S(2))**(p + S(1))*(a*e - c*d*x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule105)

    pattern106 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: Not(RationalQ(p) & LessEqual(p, S(-1)))))
    rule106 = ReplacementRule(pattern106, lambda e, d, c, x, p, b, a : e*(a + b*x + c*x**S(2))**(p + S(1))/(S(2)*c*(p + S(1))) + (-b*e + S(2)*c*d)*Int((a + b*x + c*x**S(2))**p, x)/(S(2)*c))
    rubi.add(rule106)

    pattern107 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(RationalQ(p) & LessEqual(p, S(-1)))))
    rule107 = ReplacementRule(pattern107, lambda e, d, c, x, p, a : d*Int((a + c*x**S(2))**p, x) + e*(a + c*x**S(2))**(p + S(1))/(S(2)*c*(p + S(1))))
    rubi.add(rule107)

    pattern108 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, e, b, a: ZeroQ(a*e + b*d)), CustomConstraint(lambda d, c, e, b: ZeroQ(b*e + c*d)), CustomConstraint(lambda m, p: PositiveIntegerQ(m - p + S(1))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule108 = ReplacementRule(pattern108, lambda e, d, c, x, m, p, b, a : (d + e*x)**FracPart(p)*(a*d + c*e*x**S(3))**(-FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((d + e*x)**(m - p)*(a*d + c*e*x**S(3))**p, x))
    rubi.add(rule108)

    pattern109 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + c*d)), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Equal(m**S(2), S(1)/4)), CustomConstraint(lambda c: NegativeQ(c)), CustomConstraint(lambda b: RationalQ(b)))
    rule109 = ReplacementRule(pattern109, lambda e, d, c, x, m, b : Int((d + e*x)**m/(sqrt(b*x)*sqrt(S(1) + c*x/b)), x))
    rubi.add(rule109)

    pattern110 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + c*d)), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Equal(m**S(2), S(1)/4)))
    rule110 = ReplacementRule(pattern110, lambda e, d, c, x, m, b : sqrt(x)*sqrt(b + c*x)*Int((d + e*x)**m/(sqrt(x)*sqrt(b + c*x)), x)/sqrt(b*x + c*x**S(2)))
    rubi.add(rule110)

    pattern111 = Pattern(Integral(x_**m_/sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m: ZeroQ(m**S(2) + S(-1)/4)))
    rule111 = ReplacementRule(pattern111, lambda c, x, m, b, a : S(2)*Subst(Int(x**(S(2)*m + S(1))/sqrt(a + b*x**S(2) + c*x**S(4)), x), x, sqrt(x)))
    rubi.add(rule111)

    pattern112 = Pattern(Integral((e_*x_)**m_/sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m: ZeroQ(m**S(2) + S(-1)/4)))
    rule112 = ReplacementRule(pattern112, lambda e, c, x, m, b, a : x**(-m)*(e*x)**m*Int(x**m/sqrt(a + b*x + c*x**S(2)), x))
    rubi.add(rule112)

    pattern113 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: ZeroQ(m**S(2) + S(-1)/4)))
    rule113 = ReplacementRule(pattern113, lambda e, d, c, x, m, b, a : S(2)*sqrt(-c*(a + b*x + c*x**S(2))/(-S(4)*a*c + b**S(2)))*(S(2)*c*(d + e*x)/(-b*e + S(2)*c*d - e*Rt(-S(4)*a*c + b**S(2), S(2))))**(-m)*(d + e*x)**m*Rt(-S(4)*a*c + b**S(2), S(2))*Subst(Int((S(2)*e*x**S(2)*Rt(-S(4)*a*c + b**S(2), S(2))/(-b*e + S(2)*c*d - e*Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**m/sqrt(-x**S(2) + S(1)), x), x, sqrt(S(2))*sqrt((b + S(2)*c*x + Rt(-S(4)*a*c + b**S(2), S(2)))/Rt(-S(4)*a*c + b**S(2), S(2)))/S(2))/(c*sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule113)

    pattern114 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/sqrt(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: ZeroQ(m**S(2) + S(-1)/4)))
    rule114 = ReplacementRule(pattern114, lambda e, d, c, x, m, a : S(2)*a*(c*(d + e*x)/(-a*e*Rt(-c/a, S(2)) + c*d))**(-m)*sqrt(S(1) + c*x**S(2)/a)*(d + e*x)**m*Rt(-c/a, S(2))*Subst(Int((S(2)*a*e*x**S(2)*Rt(-c/a, S(2))/(-a*e*Rt(-c/a, S(2)) + c*d) + S(1))**m/sqrt(-x**S(2) + S(1)), x), x, sqrt(-x*Rt(-c/a, S(2))/S(2) + S(1)/2))/(c*sqrt(a + c*x**S(2))))
    rubi.add(rule114)

    pattern115 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda m, p: Equal(m + S(2)*p + S(2), S(0))), CustomConstraint(lambda p: Greater(p, S(0))))
    rule115 = ReplacementRule(pattern115, lambda e, d, c, x, m, p, b, a : p*(-S(4)*a*c + b**S(2))*Int((d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(S(2)*(m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) - (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*(-S(2)*a*e + b*d + x*(-b*e + S(2)*c*d))/(S(2)*(m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule115)

    pattern116 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda m, p: Equal(m + S(2)*p + S(2), S(0))), CustomConstraint(lambda p: Greater(p, S(0))))
    rule116 = ReplacementRule(pattern116, lambda e, d, c, x, m, p, a : -S(2)*a*c*p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(2)), x)/((m + S(1))*(a*e**S(2) + c*d**S(2))) - (a + c*x**S(2))**p*(d + e*x)**(m + S(1))*(-S(2)*a*e + S(2)*c*d*x)/(S(2)*(m + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule116)

    pattern117 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda m, p: Equal(m + S(2)*p + S(2), S(0))), CustomConstraint(lambda p: Less(p, S(-1))))
    rule117 = ReplacementRule(pattern117, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*e + b*d + x*(-b*e + S(2)*c*d))/((p + S(1))*(-S(4)*a*c + b**S(2))) - S(2)*(S(2)*p + S(3))*(a*e**S(2) - b*d*e + c*d**S(2))*Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule117)

    pattern118 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda m, p: Equal(m + S(2)*p + S(2), S(0))), CustomConstraint(lambda p: Less(p, S(-1))))
    rule118 = ReplacementRule(pattern118, lambda e, d, c, x, m, p, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(a*e - c*d*x)/(S(2)*a*c*(p + S(1))) + (S(2)*p + S(3))*(a*e**S(2) + c*d**S(2))*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2)), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule118)

    pattern119 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule119 = ReplacementRule(pattern119, lambda e, d, c, x, b, a : -S(2)*Subst(Int(1/(S(4)*a*e**S(2) - S(4)*b*d*e + S(4)*c*d**S(2) - x**S(2)), x), x, (S(2)*a*e - b*d - x*(-b*e + S(2)*c*d))/sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule119)

    pattern120 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(2)*WC('c', S(1)))*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)))
    rule120 = ReplacementRule(pattern120, lambda e, d, c, x, a : -Subst(Int(1/(a*e**S(2) + c*d**S(2) - x**S(2)), x), x, (a*e - c*d*x)/sqrt(a + c*x**S(2))))
    rubi.add(rule120)

    pattern121 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2))))
    rule121 = ReplacementRule(pattern121, lambda e, d, c, x, m, p, b, a : ((b + S(2)*c*x + Rt(-S(4)*a*c + b**S(2), S(2)))*(-b*e + S(2)*c*d + e*Rt(-S(4)*a*c + b**S(2), S(2)))/((b + S(2)*c*x - Rt(-S(4)*a*c + b**S(2), S(2)))*(-b*e + S(2)*c*d - e*Rt(-S(4)*a*c + b**S(2), S(2)))))**(-p)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*(-b - S(2)*c*x + Rt(-S(4)*a*c + b**S(2), S(2)))*Hypergeometric2F1(m + S(1), -p, m + S(2), -S(4)*c*(d + e*x)*Rt(-S(4)*a*c + b**S(2), S(2))/((b + S(2)*c*x - Rt(-S(4)*a*c + b**S(2), S(2)))*(-b*e + S(2)*c*d - e*Rt(-S(4)*a*c + b**S(2), S(2)))))/((m + S(1))*(-b*e + S(2)*c*d + e*Rt(-S(4)*a*c + b**S(2), S(2)))))
    rubi.add(rule121)

    pattern122 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2))))
    rule122 = ReplacementRule(pattern122, lambda e, d, c, x, m, p, a : ((c*d + e*Rt(-a*c, S(2)))*(c*x + Rt(-a*c, S(2)))/((c*d - e*Rt(-a*c, S(2)))*(c*x - Rt(-a*c, S(2)))))**(-p)*(a + c*x**S(2))**p*(d + e*x)**(m + S(1))*(-c*x + Rt(-a*c, S(2)))*Hypergeometric2F1(m + S(1), -p, m + S(2), S(2)*c*(d + e*x)*Rt(-a*c, S(2))/((c*d - e*Rt(-a*c, S(2)))*(-c*x + Rt(-a*c, S(2)))))/((m + S(1))*(c*d + e*Rt(-a*c, S(2)))))
    rubi.add(rule122)

    pattern123 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule123 = ReplacementRule(pattern123, lambda e, d, c, x, m, p, b, a : m*(-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))) + (b + S(2)*c*x)*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule123)

    pattern124 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule124 = ReplacementRule(pattern124, lambda e, d, c, x, m, p, a : -d*m*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1)), x)/(S(2)*a*(p + S(1))) - x*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(S(2)*a*(p + S(1))))
    rubi.add(rule124)

    pattern125 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule125 = ReplacementRule(pattern125, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) + (-b*e + S(2)*c*d)*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/(S(2)*a*e**S(2) - S(2)*b*d*e + S(2)*c*d**S(2)))
    rubi.add(rule125)

    pattern126 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule126 = ReplacementRule(pattern126, lambda e, d, c, x, m, p, a : c*d*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1)), x)/(a*e**S(2) + c*d**S(2)) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))/((m + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule126)

    pattern127 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: IntegerQ(p) | (RationalQ(m) & Less(m, S(-1)))), CustomConstraint(lambda m: NonzeroQ(m + S(1))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(1)))), CustomConstraint(lambda e, d, c, x, m, p, b, a: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule127 = ReplacementRule(pattern127, lambda e, d, c, x, m, p, b, a : -p*Int((b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e*(m + S(1))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(1))))
    rubi.add(rule127)

    pattern128 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: IntegerQ(p) | (RationalQ(m) & Less(m, S(-1)))), CustomConstraint(lambda m: NonzeroQ(m + S(1))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(1)))), CustomConstraint(lambda e, d, c, x, m, p, a: IntQuadraticQ(a, S(0), c, d, e, m, p, x)))
    rule128 = ReplacementRule(pattern128, lambda e, d, c, x, m, p, a : -S(2)*c*p*Int(x*(a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(1)), x)/(e*(m + S(1))) + (a + c*x**S(2))**p*(d + e*x)**(m + S(1))/(e*(m + S(1))))
    rubi.add(rule128)

    pattern129 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m: Less(m, S(1)) | Not(RationalQ(m))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p))), CustomConstraint(lambda e, d, c, x, m, p, b, a: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule129 = ReplacementRule(pattern129, lambda e, d, c, x, m, p, b, a : -p*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(-S(2)*a*e + b*d + x*(-b*e + S(2)*c*d), x), x)/(e*(m + S(2)*p + S(1))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(e*(m + S(2)*p + S(1))))
    rubi.add(rule129)

    pattern130 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda m: Less(m, S(1)) | Not(RationalQ(m))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p))), CustomConstraint(lambda e, d, c, x, m, p, a: IntQuadraticQ(a, S(0), c, d, e, m, p, x)))
    rule130 = ReplacementRule(pattern130, lambda e, d, c, x, m, p, a : S(2)*p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**m*Simp(a*e - c*d*x, x), x)/(e*(m + S(2)*p + S(1))) + (a + c*x**S(2))**p*(d + e*x)**(m + S(1))/(e*(m + S(2)*p + S(1))))
    rubi.add(rule130)

    pattern131 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda m, p: Less(m, S(1)) | (Unequal(m, S(2)) & NegativeIntegerQ(m + S(2)*p + S(3)))), CustomConstraint(lambda e, d, c, x, m, p, b, a: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule131 = ReplacementRule(pattern131, lambda e, d, c, x, m, p, b, a : (b + S(2)*c*x)*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/((p + S(1))*(-S(4)*a*c + b**S(2))) - Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*(b*e*m + S(2)*c*d*(S(2)*p + S(3)) + S(2)*c*e*x*(m + S(2)*p + S(3))), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule131)

    pattern132 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda m, p: Less(m, S(1)) | (Unequal(m, S(2)) & NegativeIntegerQ(m + S(2)*p + S(3)))), CustomConstraint(lambda e, d, c, x, m, p, a: IntQuadraticQ(a, S(0), c, d, e, m, p, x)))
    rule132 = ReplacementRule(pattern132, lambda e, d, c, x, m, p, a : -x*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(S(2)*a*(p + S(1))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(d*(S(2)*p + S(3)) + e*x*(m + S(2)*p + S(3))), x)/(S(2)*a*(p + S(1))))
    rubi.add(rule132)

    pattern133 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda e, d, c, x, m, p, b, a: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule133 = ReplacementRule(pattern133, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*e + b*d + x*(-b*e + S(2)*c*d))/((p + S(1))*(-S(4)*a*c + b**S(2))) + Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-S(2)*c*d**S(2)*(S(2)*p + S(3)) + e*x*(b*e - S(2)*c*d)*(m + S(2)*p + S(2)) + e*(S(2)*a*e*(m + S(-1)) + b*d*(-m + S(2)*p + S(4))), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule133)

    pattern134 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda e, d, c, x, m, p, a: IntQuadraticQ(a, S(0), c, d, e, m, p, x)))
    rule134 = ReplacementRule(pattern134, lambda e, d, c, x, m, p, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(a*e - c*d*x)/(S(2)*a*c*(p + S(1))) - Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2))*Simp(a*e**S(2)*(m + S(-1)) - c*d**S(2)*(S(2)*p + S(3)) - c*d*e*x*(m + S(2)*p + S(2)), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule134)

    pattern135 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, x, m, p, b, a: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule135 = ReplacementRule(pattern135, lambda e, d, c, x, m, p, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(S(2)*a*c*e - b**S(2)*e + b*c*d + c*x*(-b*e + S(2)*c*d))/((p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-S(2)*a*c*e**S(2)*(m + S(2)*p + S(3)) + b**S(2)*e**S(2)*(m + p + S(2)) + b*c*d*e*(-m + S(2)*p + S(2)) - S(2)*c**S(2)*d**S(2)*(S(2)*p + S(3)) - c*e*x*(-b*e + S(2)*c*d)*(m + S(2)*p + S(4)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule135)

    pattern136 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, x, m, p, a: IntQuadraticQ(a, S(0), c, d, e, m, p, x)))
    rule136 = ReplacementRule(pattern136, lambda e, d, c, x, m, p, a : -(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))*(a*e + c*d*x)/(S(2)*a*(p + S(1))*(a*e**S(2) + c*d**S(2))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**m*Simp(a*e**S(2)*(m + S(2)*p + S(3)) + c*d**S(2)*(S(2)*p + S(3)) + c*d*e*x*(m + S(2)*p + S(4)), x), x)/(S(2)*a*(p + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule136)

    pattern137 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m: If(RationalQ(m), Greater(m, S(1)), SumSimplerQ(m, S(-2)))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda e, d, c, x, m, p, b, a: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule137 = ReplacementRule(pattern137, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(1))) + Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**p*Simp(c*d**S(2)*(m + S(2)*p + S(1)) + e*x*(m + p)*(-b*e + S(2)*c*d) - e*(a*e*(m + S(-1)) + b*d*(p + S(1))), x), x)/(c*(m + S(2)*p + S(1))))
    rubi.add(rule137)

    pattern138 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: If(RationalQ(m), Greater(m, S(1)), SumSimplerQ(m, S(-2)))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(1))), CustomConstraint(lambda e, d, c, x, m, p, a: IntQuadraticQ(a, S(0), c, d, e, m, p, x)))
    rule138 = ReplacementRule(pattern138, lambda e, d, c, x, m, p, a : e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))/(c*(m + S(2)*p + S(1))) + Int((a + c*x**S(2))**p*(d + e*x)**(m + S(-2))*Simp(-a*e**S(2)*(m + S(-1)) + c*d**S(2)*(m + S(2)*p + S(1)) + S(2)*c*d*e*x*(m + p), x), x)/(c*(m + S(2)*p + S(1))))
    rubi.add(rule138)

    pattern139 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda e, d, c, x, m, p, b, a: (IntegerQ(p) & SumSimplerQ(m, S(1)) & NonzeroQ(m + S(1))) | (NonzeroQ(m + S(1)) & NegativeIntegerQ(m + S(2)*p + S(3))) | (RationalQ(m) & Less(m, S(-1)) & IntQuadraticQ(a, b, c, d, e, m, p, x))))
    rule139 = ReplacementRule(pattern139, lambda e, d, c, x, m, p, b, a : e*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*Simp(-b*e*(m + p + S(2)) + c*d*(m + S(1)) - c*e*x*(m + S(2)*p + S(3)), x), x)/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule139)

    pattern140 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda e, d, c, x, m, p, a: (IntegerQ(p) & SumSimplerQ(m, S(1)) & NonzeroQ(m + S(1))) | (NonzeroQ(m + S(1)) & NegativeIntegerQ(m + S(2)*p + S(3))) | (RationalQ(m) & Less(m, S(-1)) & IntQuadraticQ(a, S(0), c, d, e, m, p, x))))
    rule140 = ReplacementRule(pattern140, lambda e, d, c, x, m, p, a : c*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1))*Simp(d*(m + S(1)) - e*x*(m + S(2)*p + S(3)), x), x)/((m + S(1))*(a*e**S(2) + c*d**S(2))) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))/((m + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule140)

    pattern141 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda e, d, c, b, a: ZeroQ(-S(3)*a*c*e**S(2) + b**S(2)*e**S(2) - b*c*d*e + c**S(2)*d**S(2))), CustomConstraint(lambda d, b, c, e: PosQ(c*e**S(2)*(-b*e + S(2)*c*d))), )
    def With141(e, d, c, x, b, a):
        q = Rt(S(3)*c*e**S(2)*(-b*e + S(2)*c*d), S(3))
        return -S(3)*c*e*log(d + e*x)/(S(2)*q**S(2)) + S(3)*c*e*log(-b*e + c*d - c*e*x - q*(a + b*x + c*x**S(2))**(S(1)/3))/(S(2)*q**S(2)) - sqrt(S(3))*c*e*atan(sqrt(S(3))/S(3) + S(2)*sqrt(S(3))*(-b*e + c*d - c*e*x)/(S(3)*q*(a + b*x + c*x**S(2))**(S(1)/3)))/q**S(2)
    rule141 = ReplacementRule(pattern141, lambda e, d, c, x, b, a : With141(e, d, c, x, b, a))
    rubi.add(rule141)

    pattern142 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)))**(S(1)/3)*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(-S(3)*a*e**S(2) + c*d**S(2))), )
    def With142(e, d, c, x, a):
        q = Rt(S(6)*c**S(2)*e**S(2)/d**S(2), S(3))
        return -S(3)*c*e*log(d + e*x)/(S(2)*d**S(2)*q**S(2)) + S(3)*c*e*log(c*d - c*e*x - d*q*(a + c*x**S(2))**(S(1)/3))/(S(2)*d**S(2)*q**S(2)) - sqrt(S(3))*c*e*atan(S(2)*sqrt(S(3))*c*(d - e*x)/(S(3)*d*q*(a + c*x**S(2))**(S(1)/3)) + sqrt(S(3))/S(3))/(d**S(2)*q**S(2))
    rule142 = ReplacementRule(pattern142, lambda e, d, c, x, a : With142(e, d, c, x, a))
    rubi.add(rule142)

    pattern143 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda e, d, c, b, a: ZeroQ(-S(3)*a*c*e**S(2) + b**S(2)*e**S(2) - b*c*d*e + c**S(2)*d**S(2))), CustomConstraint(lambda d, b, c, e: NegQ(c*e**S(2)*(-b*e + S(2)*c*d))), )
    def With143(e, d, c, x, b, a):
        q = Rt(-S(3)*c*e**S(2)*(-b*e + S(2)*c*d), S(3))
        return -S(3)*c*e*log(d + e*x)/(S(2)*q**S(2)) + S(3)*c*e*log(-b*e + c*d - c*e*x + q*(a + b*x + c*x**S(2))**(S(1)/3))/(S(2)*q**S(2)) - sqrt(S(3))*c*e*atan(sqrt(S(3))/S(3) - S(2)*sqrt(S(3))*(-b*e + c*d - c*e*x)/(S(3)*q*(a + b*x + c*x**S(2))**(S(1)/3)))/q**S(2)
    rule143 = ReplacementRule(pattern143, lambda e, d, c, x, b, a : With143(e, d, c, x, b, a))
    rubi.add(rule143)

    pattern144 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(S(9)*a*c*e**S(2) - S(2)*b**S(2)*e**S(2) - b*c*d*e + c**S(2)*d**S(2))), )
    def With144(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (b + S(2)*c*x - q)**(S(1)/3)*(b + S(2)*c*x + q)**(S(1)/3)*Int(S(1)/((d + e*x)*(b + S(2)*c*x - q)**(S(1)/3)*(b + S(2)*c*x + q)**(S(1)/3)), x)/(a + b*x + c*x**S(2))**(S(1)/3)
    rule144 = ReplacementRule(pattern144, lambda e, d, c, x, b, a : With144(e, d, c, x, b, a))
    rubi.add(rule144)

    pattern145 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)))**(S(1)/4)*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule145 = ReplacementRule(pattern145, lambda e, d, c, x, a : d*Int(S(1)/((a + c*x**S(2))**(S(1)/4)*(d**S(2) - e**S(2)*x**S(2))), x) - e*Int(x/((a + c*x**S(2))**(S(1)/4)*(d**S(2) - e**S(2)*x**S(2))), x))
    rubi.add(rule145)

    pattern146 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)))**(S(3)/4)*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule146 = ReplacementRule(pattern146, lambda e, d, c, x, a : d*Int(S(1)/((a + c*x**S(2))**(S(3)/4)*(d**S(2) - e**S(2)*x**S(2))), x) - e*Int(x/((a + c*x**S(2))**(S(3)/4)*(d**S(2) - e**S(2)*x**S(2))), x))
    rubi.add(rule146)

    pattern147 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: PositiveQ(S(4)*a - b**S(2)/c)), CustomConstraint(lambda p: IntegerQ(S(4)*p)))
    rule147 = ReplacementRule(pattern147, lambda e, d, c, x, p, b, a : (-S(4)*c/(-S(4)*a*c + b**S(2)))**(-p)*Subst(Int(Simp(-x**S(2)/(-S(4)*a*c + b**S(2)) + S(1), x)**p/Simp(-b*e + S(2)*c*d + e*x, x), x), x, b + S(2)*c*x))
    rubi.add(rule147)

    pattern148 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: Not(PositiveQ(S(4)*a - b**S(2)/c))), CustomConstraint(lambda p: IntegerQ(S(4)*p)))
    rule148 = ReplacementRule(pattern148, lambda e, d, c, x, p, b, a : (-c*(a + b*x + c*x**S(2))/(-S(4)*a*c + b**S(2)))**(-p)*(a + b*x + c*x**S(2))**p*Int((-a*c/(-S(4)*a*c + b**S(2)) - b*c*x/(-S(4)*a*c + b**S(2)) - c**S(2)*x**S(2)/(-S(4)*a*c + b**S(2)))**p/(d + e*x), x))
    rubi.add(rule148)

    pattern149 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: NegativeQ(c)))
    rule149 = ReplacementRule(pattern149, lambda e, d, c, x, m, p, a : Int((d + e*x)**m*(-x*Rt(-c, S(2)) + Rt(a, S(2)))**p*(x*Rt(-c, S(2)) + Rt(a, S(2)))**p, x))
    rubi.add(rule149)

    pattern150 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: NegativeIntegerQ(m)), )
    def With150(e, d, c, x, m, p, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -(e*(b + S(2)*c*x - q)/(S(2)*c*(d + e*x)))**(-p)*(e*(b + S(2)*c*x + q)/(S(2)*c*(d + e*x)))**(-p)*(a + b*x + c*x**S(2))**p*(1/(d + e*x))**(S(2)*p)*Subst(Int(x**(-m - S(2)*p + S(-2))*Simp(-x*(d - e*(b - q)/(S(2)*c)) + S(1), x)**p*Simp(-x*(d - e*(b + q)/(S(2)*c)) + S(1), x)**p, x), x, 1/(d + e*x))/e
    rule150 = ReplacementRule(pattern150, lambda e, d, c, x, m, p, b, a : With150(e, d, c, x, m, p, b, a))
    rubi.add(rule150)

    pattern151 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: NegativeIntegerQ(m)), )
    def With151(e, d, c, x, m, p, a):
        q = Rt(-a*c, S(2))
        return -(e*(c*x + q)/(c*(d + e*x)))**(-p)*(-e*(-c*x + q)/(c*(d + e*x)))**(-p)*(a + c*x**S(2))**p*(1/(d + e*x))**(S(2)*p)*Subst(Int(x**(-m - S(2)*p + S(-2))*Simp(-x*(d - e*q/c) + S(1), x)**p*Simp(-x*(d + e*q/c) + S(1), x)**p, x), x, 1/(d + e*x))/e
    rule151 = ReplacementRule(pattern151, lambda e, d, c, x, m, p, a : With151(e, d, c, x, m, p, a))
    rubi.add(rule151)

    pattern152 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), )
    def With152(e, d, c, x, m, p, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (-(d + e*x)/(d - e*(b - q)/(S(2)*c)) + S(1))**(-p)*(-(d + e*x)/(d - e*(b + q)/(S(2)*c)) + S(1))**(-p)*(a + b*x + c*x**S(2))**p*Subst(Int(x**m*Simp(-x/(d - e*(b - q)/(S(2)*c)) + S(1), x)**p*Simp(-x/(d - e*(b + q)/(S(2)*c)) + S(1), x)**p, x), x, d + e*x)/e
    rule152 = ReplacementRule(pattern152, lambda e, d, c, x, m, p, b, a : With152(e, d, c, x, m, p, b, a))
    rubi.add(rule152)

    pattern153 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), )
    def With153(e, d, c, x, m, p, a):
        q = Rt(-a*c, S(2))
        return (a + c*x**S(2))**p*(-(d + e*x)/(d - e*q/c) + S(1))**(-p)*(-(d + e*x)/(d + e*q/c) + S(1))**(-p)*Subst(Int(x**m*Simp(-x/(d - e*q/c) + S(1), x)**p*Simp(-x/(d + e*q/c) + S(1), x)**p, x), x, d + e*x)/e
    rule153 = ReplacementRule(pattern153, lambda e, d, c, x, m, p, a : With153(e, d, c, x, m, p, a))
    rubi.add(rule153)

    pattern154 = Pattern(Integral((u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule154 = ReplacementRule(pattern154, lambda e, u, d, c, x, m, p, b, a : Subst(Int((d + e*x)**m*(a + b*x + c*x**S(2))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule154)

    pattern155 = Pattern(Integral((a_ + u_**S(2)*WC('c', S(1)))**WC('p', S(1))*(u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule155 = ReplacementRule(pattern155, lambda e, d, c, x, m, p, u, a : Subst(Int((a + c*x**S(2))**p*(d + e*x)**m, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule155)

    pattern156 = Pattern(Integral(x_**WC('n', S(1))*(a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: IntegerQ(n)), CustomConstraint(lambda p: Not(IntegerQ(S(2)*p))))
    rule156 = ReplacementRule(pattern156, lambda n, e, d, c, x, p, a : d*Int(x**n*(a + c*x**S(2))**p, x) + e*Int(x**(n + S(1))*(a + c*x**S(2))**p, x))
    rubi.add(rule156)

    pattern157 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))/sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)))
    rule157 = ReplacementRule(pattern157, lambda g, e, d, c, x, m, f, b, a : (f + g*x)*Int((d + e*x)**m, x)/sqrt(a + b*x + c*x**S(2)))
    rubi.add(rule157)

    pattern158 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule158 = ReplacementRule(pattern158, lambda g, e, d, c, x, m, p, f, b, a : -f*g*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(b*(p + S(1))*(-d*g + e*f)))
    rubi.add(rule158)

    pattern159 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule159 = ReplacementRule(pattern159, lambda g, e, d, c, x, m, p, f, b, a : -e*g*m*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(S(2)*c*(p + S(1))) + g*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/(S(2)*c*(p + S(1))))
    rubi.add(rule159)

    pattern160 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Not(RationalQ(m) & Greater(m, S(0)))))
    rule160 = ReplacementRule(pattern160, lambda g, e, d, c, x, m, p, f, b, a : e*f*g*(m + S(2)*p + S(3))*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1)), x)/(b*(p + S(1))*(-d*g + e*f)) - f*g*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(b*(p + S(1))*(-d*g + e*f)))
    rubi.add(rule160)

    pattern161 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda p: NonzeroQ(S(2)*p + S(1))), CustomConstraint(lambda m, p: Not(RationalQ(p)) | (Greater(p, S(0)) & (Not(IntegerQ(m)) | GreaterEqual(m, -S(2)*p + S(-2)) | Less(m, -S(4)*p + S(-4))))))
    rule161 = ReplacementRule(pattern161, lambda g, e, d, c, x, m, p, f, b, a : -g*(S(2)*p + S(1))*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/(e*(m + S(1))) + (d + e*x)**(m + S(1))*(f + g*x)*(a + b*x + c*x**S(2))**p/(e*(m + S(1))))
    rubi.add(rule161)

    pattern162 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))))
    rule162 = ReplacementRule(pattern162, lambda g, e, d, c, x, m, p, f, b, a : -g*(m + S(2)*p + S(3))*Int((d + e*x)**(m + S(1))*(f + g*x)*(a + b*x + c*x**S(2))**p, x)/((m + S(1))*(-d*g + e*f)) + S(2)*f*g*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(b*(m + S(1))*(-d*g + e*f)))
    rubi.add(rule162)

    pattern163 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))), CustomConstraint(lambda m, p: Not(RationalQ(p)) | Less(m, S(2)*p + S(2))))
    rule163 = ReplacementRule(pattern163, lambda g, e, d, c, x, m, p, f, b, a : -b*m*(-d*g + e*f)*Int((d + e*x)**(m + S(-1))*(f + g*x)*(a + b*x + c*x**S(2))**p, x)/(S(2)*c*f*(m + S(2)*p + S(2))) + g*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(2))))
    rubi.add(rule163)

    pattern164 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: ZeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))))
    rule164 = ReplacementRule(pattern164, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**(m + S(1))*(f + g*x)*(a + b*x + c*x**S(2))**p/(e*(m + S(2)*p + S(2))) + (S(2)*p + S(1))*(-d*g + e*f)*Int((d + e*x)**m*(a + b*x + c*x**S(2))**p, x)/(e*(m + S(2)*p + S(2))))
    rubi.add(rule164)

    pattern165 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: NonzeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(0))))
    rule165 = ReplacementRule(pattern165, lambda g, e, d, c, x, p, f, b, a : (-b*g + S(2)*c*f)*Int((a + b*x + c*x**S(2))**p, x)/(-b*e + S(2)*c*d) - (-d*g + e*f)*Int((b + S(2)*c*x)*(a + b*x + c*x**S(2))**p/(d + e*x), x)/(-b*e + S(2)*c*d))
    rubi.add(rule165)

    pattern166 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: NonzeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda e, d, c, m, p, b: (NonzeroQ(m + S(1)) & ZeroQ(m + S(2)*p + S(2))) | (NonzeroQ(m + S(-1)) & ZeroQ(-b*e + S(2)*c*d))))
    rule166 = ReplacementRule(pattern166, lambda g, e, d, c, x, m, p, f, b, a : g*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/e + (-d*g + e*f)*Int((d + e*x)**m*(a + b*x + c*x**S(2))**p, x)/e)
    rubi.add(rule166)

    pattern167 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: NonzeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule167 = ReplacementRule(pattern167, lambda g, e, d, c, x, m, p, f, b, a : (-b*g + S(2)*c*f)*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/(-b*e + S(2)*c*d) - (-d*g + e*f)*Int((b + S(2)*c*x)*(d + e*x)**m*(a + b*x + c*x**S(2))**p, x)/(-b*e + S(2)*c*d))
    rubi.add(rule167)

    pattern168 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: NonzeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule168 = ReplacementRule(pattern168, lambda g, e, d, c, x, m, p, f, b, a : (b + S(2)*c*x)*(d + e*x)**(m + S(1))*(d*g - e*f)*(a + b*x + c*x**S(2))**p/(e*(m + S(1))*(-b*e + S(2)*c*d)) + (S(2)*c*e*f*(m + S(2)*p + S(2)) - g*(b*e*(m + S(1)) + S(2)*c*d*(S(2)*p + S(1))))*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/(e*(m + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule168)

    pattern169 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda f, c, g, b: NonzeroQ(-b*g + S(2)*c*f)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda d, c, e, b: NonzeroQ(-b*e + S(2)*c*d)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: Not(RationalQ(m) & Less(m, S(-1)))), CustomConstraint(lambda g, e, d, x, m, f: Not(ZeroQ(m + S(-1)) & SimplerQ(f + g*x, d + e*x))))
    rule169 = ReplacementRule(pattern169, lambda g, e, d, c, x, m, p, f, b, a : g*(b + S(2)*c*x)*(d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p/(S(2)*c*e*(m + S(2)*p + S(2))) + (S(2)*c*e*f*(m + S(2)*p + S(2)) - g*(b*e*(m + S(1)) + S(2)*c*(S(2)*d*p + d)))*Int((d + e*x)**m*(a + b*x + c*x**S(2))**p, x)/(S(2)*c*e*(m + S(2)*p + S(2))))
    rubi.add(rule169)

    pattern170 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule170 = ReplacementRule(pattern170, lambda n, g, e, d, c, x, m, p, f, b, a : c**(-IntPart(p))*(b/S(2) + c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b/S(2) + c*x)**(S(2)*p)*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule170)

    pattern171 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule171 = ReplacementRule(pattern171, lambda n, g, e, d, c, x, m, p, f, b, a : Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule171)

    pattern172 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, a, m, p: IntegerQ(p) | (PositiveQ(a) & PositiveQ(d) & ZeroQ(m + p))))
    rule172 = ReplacementRule(pattern172, lambda n, g, e, d, c, x, m, p, f, a : Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule172)

    pattern173 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: NegativeIntegerQ(m)), CustomConstraint(lambda p: Not(IntegerQ(S(2)*p))))
    rule173 = ReplacementRule(pattern173, lambda n, g, e, d, c, x, m, p, f, b, a : d**m*e**m*Int((f + g*x)**n*(a*e + c*d*x)**(-m)*(a + b*x + c*x**S(2))**(m + p), x))
    rubi.add(rule173)

    pattern174 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: NegativeIntegerQ(m)), CustomConstraint(lambda p: Not(IntegerQ(S(2)*p))))
    rule174 = ReplacementRule(pattern174, lambda n, g, e, d, c, x, m, p, f, a : d**m*e**m*Int((a + c*x**S(2))**(m + p)*(f + g*x)**n*(a*e + c*d*x)**(-m), x))
    rubi.add(rule174)

    pattern175 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda g, e, d, c, m, p, f, b: ZeroQ(e*(p + S(1))*(-b*g + S(2)*c*f) + m*(c*e*f + g*(-b*e + c*d)))))
    rule175 = ReplacementRule(pattern175, lambda g, e, d, c, x, m, p, f, b, a : g*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(2))))
    rubi.add(rule175)

    pattern176 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda g, e, d, m, p, f: ZeroQ(S(2)*e*f*(p + S(1)) + m*(d*g + e*f))))
    rule176 = ReplacementRule(pattern176, lambda g, e, d, c, x, m, p, f, a : g*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(c*(m + S(2)*p + S(2))))
    rubi.add(rule176)

    pattern177 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule177 = ReplacementRule(pattern177, lambda g, e, d, c, x, m, p, f, b, a : -e*(e*(p + S(1))*(-b*g + S(2)*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))*(-b*e + S(2)*c*d)) + (d + e*x)**m*(c*e*f + g*(-b*e + c*d))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(p + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule177)

    pattern178 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule178 = ReplacementRule(pattern178, lambda g, e, d, c, x, m, p, f, a : -e*(S(2)*e*f*(p + S(1)) + m*(d*g + e*f))*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1)), x)/(S(2)*c*d*(p + S(1))) + (a + c*x**S(2))**(p + S(1))*(d + e*x)**m*(d*g + e*f)/(S(2)*c*d*(p + S(1))))
    rubi.add(rule178)

    pattern179 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: SumSimplerQ(p, S(1))), CustomConstraint(lambda m: SumSimplerQ(m, S(-1))), CustomConstraint(lambda p: NonzeroQ(p + S(1))))
    rule179 = ReplacementRule(pattern179, lambda g, e, d, c, x, m, p, f, b, a : -e*(e*(p + S(1))*(-b*g + S(2)*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))*(-b*e + S(2)*c*d)) + (d + e*x)**m*(c*e*f + g*(-b*e + c*d))*(a + b*x + c*x**S(2))**(p + S(1))/(c*(p + S(1))*(-b*e + S(2)*c*d)))
    rubi.add(rule179)

    pattern180 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: SumSimplerQ(p, S(1))), CustomConstraint(lambda m: SumSimplerQ(m, S(-1))), CustomConstraint(lambda p: NonzeroQ(p + S(1))))
    rule180 = ReplacementRule(pattern180, lambda g, e, d, c, x, m, p, f, a : -e*(S(2)*e*f*(p + S(1)) + m*(d*g + e*f))*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1)), x)/(S(2)*c*d*(p + S(1))) + (a + c*x**S(2))**(p + S(1))*(d + e*x)**m*(d*g + e*f)/(S(2)*c*d*(p + S(1))))
    rubi.add(rule180)

    pattern181 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2)) | (Less(m, S(0)) & Less(p, S(-1)) & RationalQ(m, p)) | (RationalQ(m) & Less(m, S(-1)) & Not(PositiveIntegerQ(m + p + S(1))))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))))
    rule181 = ReplacementRule(pattern181, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**m*(d*g - e*f)*(a + b*x + c*x**S(2))**(p + S(1))/((-b*e + S(2)*c*d)*(m + p + S(1))) + (e*(p + S(1))*(-b*g + S(2)*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/(e*(-b*e + S(2)*c*d)*(m + p + S(1))))
    rubi.add(rule181)

    pattern182 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(2)) | (Less(m, S(0)) & Less(p, S(-1)) & RationalQ(m, p)) | (RationalQ(m) & Less(m, S(-1)) & Not(PositiveIntegerQ(m + p + S(1))))), CustomConstraint(lambda m, p: NonzeroQ(m + p + S(1))))
    rule182 = ReplacementRule(pattern182, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**m*(d*g - e*f)/(S(2)*c*d*(m + p + S(1))) + (S(2)*c*e*f*(p + S(1)) + m*(c*d*g + c*e*f))*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1)), x)/(S(2)*c*d*e*(m + p + S(1))))
    rubi.add(rule182)

    pattern183 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))))
    rule183 = ReplacementRule(pattern183, lambda g, e, d, c, x, m, p, f, b, a : g*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(2))) + (e*(p + S(1))*(-b*g + S(2)*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**m*(a + b*x + c*x**S(2))**p, x)/(c*e*(m + S(2)*p + S(2))))
    rubi.add(rule183)

    pattern184 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))))
    rule184 = ReplacementRule(pattern184, lambda g, e, d, c, x, m, p, f, a : (S(2)*e*f*(p + S(1)) + m*(d*g + e*f))*Int((a + c*x**S(2))**p*(d + e*x)**m, x)/(e*(m + S(2)*p + S(2))) + g*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(c*(m + S(2)*p + S(2))))
    rubi.add(rule184)

    pattern185 = Pattern(Integral(x_**S(2)*(a_ + x_**S(2)*WC('c', S(1)))**p_*(f_ + x_*WC('g', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda f, c, g, a: ZeroQ(a*g**S(2) + c*f**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-2))))
    rule185 = ReplacementRule(pattern185, lambda g, c, x, p, f, a : x**S(2)*(a + c*x**S(2))**(p + S(1))*(a*g - c*f*x)/(S(2)*a*c*(p + S(1))) - Int(x*(a + c*x**S(2))**(p + S(1))*Simp(S(2)*a*g - c*f*x*(S(2)*p + S(5)), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule185)

    pattern186 = Pattern(Integral(x_**S(2)*(a_ + x_**S(2)*WC('c', S(1)))**p_*(f_ + x_*WC('g', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda f, c, g, a: ZeroQ(a*g**S(2) + c*f**S(2))))
    rule186 = ReplacementRule(pattern186, lambda g, c, x, p, f, a : -f**S(2)*Int((a + c*x**S(2))**(p + S(1))/(f - g*x), x)/c + Int((a + c*x**S(2))**(p + S(1))*(f + g*x), x)/c)
    rubi.add(rule186)

    pattern187 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda m, p: Less(p, -m, S(0)) | Less(S(0), -m, p + S(1))))
    rule187 = ReplacementRule(pattern187, lambda n, g, e, d, c, x, m, p, f, b, a : Int((f + g*x)**n*(a/d + c*x/e)**(-m)*(a + b*x + c*x**S(2))**(m + p), x))
    rubi.add(rule187)

    pattern188 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda m, p: Less(p, -m, S(0)) | Less(S(0), -m, p + S(1))))
    rule188 = ReplacementRule(pattern188, lambda n, g, e, d, c, x, m, p, f, a : a**(-m)*d**(S(2)*m)*Int((a + c*x**S(2))**(m + p)*(d - e*x)**(-m)*(f + g*x)**n, x))
    rubi.add(rule188)

    pattern189 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + S(2)*p)))
    rule189 = ReplacementRule(pattern189, lambda n, g, e, d, c, x, p, f, b, a : -(f + g*x)**n*(a*(-b*e + S(2)*c*d) + c*x*(-S(2)*a*e + b*d))*(a + b*x + c*x**S(2))**p/(d*e*p*(-S(4)*a*c + b**S(2))) - Int((f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**p*Simp(-S(2)*a*c*(d*g*n - e*f*(S(2)*p + S(1))) + b*(a*e*g*n - c*d*f*(S(2)*p + S(1))) - c*g*x*(-S(2)*a*e + b*d)*(n + S(2)*p + S(1)), x), x)/(d*e*p*(-S(4)*a*c + b**S(2))))
    rubi.add(rule189)

    pattern190 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + S(2)*p)))
    rule190 = ReplacementRule(pattern190, lambda n, g, e, d, c, x, p, f, a : (a + c*x**S(2))**p*(d - e*x)*(f + g*x)**n/(S(2)*d*e*p) - Int((a + c*x**S(2))**p*(f + g*x)**(n + S(-1))*Simp(d*g*n - e*f*(S(2)*p + S(1)) - e*g*x*(n + S(2)*p + S(1)), x), x)/(S(2)*d*e*p))
    rubi.add(rule190)

    pattern191 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + S(2)*p)))
    rule191 = ReplacementRule(pattern191, lambda n, g, e, d, c, x, p, f, b, a : -(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**p*(a*c*d*(-b*g + S(2)*c*f) - a*e*(S(2)*a*c*g - b**S(2)*g + b*c*f) + c*x*(-a*e*(-b*g + S(2)*c*f) + c*d*(-S(2)*a*g + b*f)))/(d*e*p*(-S(4)*a*c + b**S(2))*(a*g**S(2) - b*f*g + c*f**S(2))) - Int((f + g*x)**n*(a + b*x + c*x**S(2))**p*Simp(S(2)*a*c*(a*e*g**S(2)*(n + S(2)*p + S(1)) + c*f*(-d*g*n + S(2)*e*f*p + e*f)) + b**S(2)*g*(-a*e*g*(n + p + S(1)) + c*d*f*p) + b*c*(a*g*(d*g*(n + S(1)) + e*f*(n - S(2)*p)) - c*d*f**S(2)*(S(2)*p + S(1))) + c*g*x*(S(2)*a*c*(d*g + e*f) - b*(a*e*g + c*d*f))*(n + S(2)*p + S(2)), x), x)/(d*e*p*(-S(4)*a*c + b**S(2))*(a*g**S(2) - b*f*g + c*f**S(2))))
    rubi.add(rule191)

    pattern192 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + S(2)*p)))
    rule192 = ReplacementRule(pattern192, lambda n, g, e, d, c, x, p, f, a : (a + c*x**S(2))**p*(f + g*x)**(n + S(1))*(-a*e*g + c*d*f - c*x*(d*g + e*f))/(S(2)*d*e*p*(a*g**S(2) + c*f**S(2))) + Int((a + c*x**S(2))**p*(f + g*x)**n*Simp(a*e*g**S(2)*(n + S(2)*p + S(1)) - c*f*(d*g*n - e*(S(2)*f*p + f)) + c*g*x*(d*g + e*f)*(n + S(2)*p + S(2)), x), x)/(S(2)*d*e*p*(a*g**S(2) + c*f**S(2))))
    rubi.add(rule192)

    pattern193 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda g, e, d, c, f, b: ZeroQ(-b*e*g + c*d*g + c*e*f)), CustomConstraint(lambda n, m: NonzeroQ(m - n + S(-1))))
    rule193 = ReplacementRule(pattern193, lambda n, g, e, d, c, x, m, p, f, b, a : -e*(d + e*x)**(m + S(-1))*(f + g*x)**n*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m - n + S(-1))))
    rubi.add(rule193)

    pattern194 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)), CustomConstraint(lambda n, m: NonzeroQ(m - n + S(-1))))
    rule194 = ReplacementRule(pattern194, lambda n, g, e, d, c, x, m, p, f, a : -e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**n/(c*(m - n + S(-1))))
    rubi.add(rule194)

    pattern195 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(-2))))
    rule195 = ReplacementRule(pattern195, lambda n, g, e, d, c, x, m, p, f, b, a : -e**S(2)*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/((n + S(1))*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule195)

    pattern196 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(-2))))
    rule196 = ReplacementRule(pattern196, lambda n, g, e, d, c, x, m, p, f, a : -e**S(2)*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))/(c*(n + S(1))*(d*g + e*f)))
    rubi.add(rule196)

    pattern197 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, p: Not(IntegerQ(n + p) & LessEqual(n + p + S(2), S(0)))))
    rule197 = ReplacementRule(pattern197, lambda n, g, e, d, c, x, m, p, f, b, a : c*m*Int((d + e*x)**(m + S(1))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e*g*(n + S(1))) + (d + e*x)**m*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**p/(g*(n + S(1))))
    rubi.add(rule197)

    pattern198 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, p: Not(IntegerQ(n + p) & LessEqual(n + p + S(2), S(0)))))
    rule198 = ReplacementRule(pattern198, lambda n, g, e, d, c, x, m, p, f, a : c*m*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(1))*(f + g*x)**(n + S(1)), x)/(e*g*(n + S(1))) + (a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**(n + S(1))/(g*(n + S(1))))
    rubi.add(rule198)

    pattern199 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m - n + S(-1))), CustomConstraint(lambda n: Not(PositiveIntegerQ(n))), CustomConstraint(lambda n, p: Not(IntegerQ(n + p) & Less(n + p + S(2), S(0)))))
    rule199 = ReplacementRule(pattern199, lambda n, g, e, d, c, x, m, p, f, b, a : -(d + e*x)**m*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**p/(g*(m - n + S(-1))) - m*(-b*e*g + c*d*g + c*e*f)*Int((d + e*x)**(m + S(1))*(f + g*x)**n*(a + b*x + c*x**S(2))**(p + S(-1)), x)/(e**S(2)*g*(m - n + S(-1))))
    rubi.add(rule199)

    pattern200 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m - n + S(-1))), CustomConstraint(lambda n: Not(PositiveIntegerQ(n))), CustomConstraint(lambda n, p: Not(IntegerQ(n + p) & Less(n + p + S(2), S(0)))))
    rule200 = ReplacementRule(pattern200, lambda n, g, e, d, c, x, m, p, f, a : -c*m*(d*g + e*f)*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(1))*(f + g*x)**n, x)/(e**S(2)*g*(m - n + S(-1))) - (a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**(n + S(1))/(g*(m - n + S(-1))))
    rubi.add(rule200)

    pattern201 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule201 = ReplacementRule(pattern201, lambda n, g, e, d, c, x, m, p, f, b, a : -e*g*n*Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))) + e*(d + e*x)**(m + S(-1))*(f + g*x)**n*(a + b*x + c*x**S(2))**(p + S(1))/(c*(p + S(1))))
    rubi.add(rule201)

    pattern202 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule202 = ReplacementRule(pattern202, lambda n, g, e, d, c, x, m, p, f, a : -e*g*n*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-1)), x)/(c*(p + S(1))) + e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**n/(c*(p + S(1))))
    rubi.add(rule202)

    pattern203 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule203 = ReplacementRule(pattern203, lambda n, g, e, d, c, x, m, p, f, b, a : e**S(2)*g*(m - n + S(-2))*Int((d + e*x)**(m + S(-1))*(f + g*x)**n*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-b*e*g + c*d*g + c*e*f)) + e**S(2)*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/((p + S(1))*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule203)

    pattern204 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule204 = ReplacementRule(pattern204, lambda n, g, e, d, c, x, m, p, f, a : e**S(2)*g*(m - n + S(-2))*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**n, x)/(c*(p + S(1))*(d*g + e*f)) + e**S(2)*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))/(c*(p + S(1))*(d*g + e*f)))
    rubi.add(rule204)

    pattern205 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m - n + S(-1))), CustomConstraint(lambda n, p: IntegerQ(n) | IntegerQ(S(2)*p)))
    rule205 = ReplacementRule(pattern205, lambda n, g, e, d, c, x, m, p, f, b, a : -e*(d + e*x)**(m + S(-1))*(f + g*x)**n*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m - n + S(-1))) - n*(-b*e*g + c*d*g + c*e*f)*Int((d + e*x)**m*(f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**p, x)/(c*e*(m - n + S(-1))))
    rubi.add(rule205)

    pattern206 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m - n + S(-1))), CustomConstraint(lambda n, p: IntegerQ(n) | IntegerQ(S(2)*p)))
    rule206 = ReplacementRule(pattern206, lambda n, g, e, d, c, x, m, p, f, a : -n*(d*g + e*f)*Int((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**(n + S(-1)), x)/(e*(m - n + S(-1))) - e*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**n/(c*(m - n + S(-1))))
    rubi.add(rule206)

    pattern207 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule207 = ReplacementRule(pattern207, lambda n, g, e, d, c, x, m, p, f, b, a : -c*e*(m - n + S(-2))*Int((d + e*x)**m*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**p, x)/((n + S(1))*(-b*e*g + c*d*g + c*e*f)) - e**S(2)*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/((n + S(1))*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule207)

    pattern208 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule208 = ReplacementRule(pattern208, lambda n, g, e, d, c, x, m, p, f, a : -e**S(2)*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))/((n + S(1))*(c*d*g + c*e*f)) - e*(m - n + S(-2))*Int((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**(n + S(1)), x)/((n + S(1))*(d*g + e*f)))
    rubi.add(rule208)

    pattern209 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/((x_*WC('g', S(1)) + WC('f', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule209 = ReplacementRule(pattern209, lambda g, e, d, c, x, f, b, a : S(2)*e**S(2)*Subst(Int(1/(-b*e*g + c*(d*g + e*f) + e**S(2)*g*x**S(2)), x), x, sqrt(a + b*x + c*x**S(2))/sqrt(d + e*x)))
    rubi.add(rule209)

    pattern210 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/(sqrt(a_ + x_**S(2)*WC('c', S(1)))*(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))))
    rule210 = ReplacementRule(pattern210, lambda g, e, d, c, x, f, a : S(2)*e**S(2)*Subst(Int(1/(c*(d*g + e*f) + e**S(2)*g*x**S(2)), x), x, sqrt(a + c*x**S(2))/sqrt(d + e*x)))
    rubi.add(rule210)

    pattern211 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p + S(-1))), CustomConstraint(lambda n, g, e, d, c, p, f, b: ZeroQ(b*e*g*(n + S(1)) - c*d*g*(S(2)*n + p + S(3)) + c*e*f*(p + S(1)))), CustomConstraint(lambda n, p: NonzeroQ(n + p + S(2))))
    rule211 = ReplacementRule(pattern211, lambda n, g, e, d, c, x, m, p, f, b, a : e**S(2)*(d + e*x)**(m + S(-2))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*g*(n + p + S(2))))
    rubi.add(rule211)

    pattern212 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p + S(-1))), CustomConstraint(lambda n, g, e, d, p, f: ZeroQ(-d*g*(S(2)*n + p + S(3)) + e*f*(p + S(1)))), CustomConstraint(lambda n, p: NonzeroQ(n + p + S(2))))
    rule212 = ReplacementRule(pattern212, lambda n, g, e, d, c, x, m, p, f, a : e**S(2)*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2))*(f + g*x)**(n + S(1))/(c*g*(n + p + S(2))))
    rubi.add(rule212)

    pattern213 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p + S(-1))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule213 = ReplacementRule(pattern213, lambda n, g, e, d, c, x, m, p, f, b, a : e**S(2)*(d + e*x)**(m + S(-2))*(f + g*x)**(n + S(1))*(-d*g + e*f)*(a + b*x + c*x**S(2))**(p + S(1))/(g*(n + S(1))*(-b*e*g + c*d*g + c*e*f)) - e*(b*e*g*(n + S(1)) - c*d*g*(S(2)*n + p + S(3)) + c*e*f*(p + S(1)))*Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**p, x)/(g*(n + S(1))*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule213)

    pattern214 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p + S(-1))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule214 = ReplacementRule(pattern214, lambda n, g, e, d, c, x, m, p, f, a : -e*(-d*g*(S(2)*n + p + S(3)) + e*f*(p + S(1)))*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1)), x)/(g*(n + S(1))*(d*g + e*f)) + e**S(2)*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2))*(f + g*x)**(n + S(1))*(-d*g + e*f)/(c*g*(n + S(1))*(d*g + e*f)))
    rubi.add(rule214)

    pattern215 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p + S(-1))), CustomConstraint(lambda n: Not(RationalQ(n) & Less(n, S(-1)))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule215 = ReplacementRule(pattern215, lambda n, g, e, d, c, x, m, p, f, b, a : e**S(2)*(d + e*x)**(m + S(-2))*(f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*g*(n + p + S(2))) - (b*e*g*(n + S(1)) - c*d*g*(S(2)*n + p + S(3)) + c*e*f*(p + S(1)))*Int((d + e*x)**(m + S(-1))*(f + g*x)**n*(a + b*x + c*x**S(2))**p, x)/(c*g*(n + p + S(2))))
    rubi.add(rule215)

    pattern216 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: ZeroQ(m + p + S(-1))), CustomConstraint(lambda n: Not(RationalQ(n) & Less(n, S(-1)))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule216 = ReplacementRule(pattern216, lambda n, g, e, d, c, x, m, p, f, a : -(-d*g*(S(2)*n + p + S(3)) + e*f*(p + S(1)))*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(-1))*(f + g*x)**n, x)/(g*(n + p + S(2))) + e**S(2)*(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2))*(f + g*x)**(n + S(1))/(c*g*(n + p + S(2))))
    rubi.add(rule216)

    pattern217 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, m: PositiveIntegerQ(m) | IntegersQ(m, n)))
    rule217 = ReplacementRule(pattern217, lambda n, g, e, d, c, x, m, p, f, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule217)

    pattern218 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p + S(-1)/2)), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda m, p: Not(Less(m, S(0)) & Less(p, S(0)))), CustomConstraint(lambda p: Unequal(p, S(1)/2)))
    rule218 = ReplacementRule(pattern218, lambda n, g, e, d, c, x, m, p, f, a : Int(ExpandIntegrand(1/sqrt(a + c*x**S(2)), (a + c*x**S(2))**(p + S(1)/2)*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule218)

    pattern219 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, m: PositiveIntegerQ(m) | IntegersQ(m, n)))
    rule219 = ReplacementRule(pattern219, lambda n, g, e, d, c, x, m, p, f, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule219)

    pattern220 = Pattern(Integral(x_**S(2)*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule220 = ReplacementRule(pattern220, lambda e, d, c, x, p, b, a : d**S(2)*Int((a + b*x + c*x**S(2))**p/(d + e*x), x)/e**S(2) - Int((d - e*x)*(a + b*x + c*x**S(2))**p, x)/e**S(2))
    rubi.add(rule220)

    pattern221 = Pattern(Integral(x_**S(2)*(a_ + x_**S(2)*WC('c', S(1)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))))
    rule221 = ReplacementRule(pattern221, lambda e, d, c, x, p, a : d**S(2)*Int((a + c*x**S(2))**p/(d + e*x), x)/e**S(2) - Int((a + c*x**S(2))**p*(d - e*x), x)/e**S(2))
    rubi.add(rule221)

    pattern222 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**S(2)*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule222 = ReplacementRule(pattern222, lambda g, e, d, c, x, m, p, f, b, a : g*(d + e*x)**m*(f + g*x)*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(3))) - Int((d + e*x)**m*(a + b*x + c*x**S(2))**p*Simp(b*e*g*(d*g + e*f*(m + p + S(1))) - c*(d**S(2)*g**S(2) + d*e*f*g*m + e**S(2)*f**S(2)*(m + S(2)*p + S(3))) + e*g*x*(b*e*g*(m + p + S(2)) - c*(d*g*m + e*f*(m + S(2)*p + S(4)))), x), x)/(c*e**S(2)*(m + S(2)*p + S(3))))
    rubi.add(rule222)

    pattern223 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule223 = ReplacementRule(pattern223, lambda g, e, d, c, x, m, p, f, a : g*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m*(f + g*x)/(c*(m + S(2)*p + S(3))) - Int((a + c*x**S(2))**p*(d + e*x)**m*Simp(-c*e*g*x*(d*g*m + e*f*(m + S(2)*p + S(4))) - c*(d**S(2)*g**S(2) + d*e*f*g*m + e**S(2)*f**S(2)*(m + S(2)*p + S(3))), x), x)/(c*e**S(2)*(m + S(2)*p + S(3))))
    rubi.add(rule223)

    pattern224 = Pattern(Integral((x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule224 = ReplacementRule(pattern224, lambda n, g, e, c, x, m, p, f, b : x**(-m - p)*(e*x)**m*(b + c*x)**(-p)*(b*x + c*x**S(2))**p*Int(x**(m + p)*(b + c*x)**p*(f + g*x)**n, x))
    rubi.add(rule224)

    pattern225 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule225 = ReplacementRule(pattern225, lambda n, g, e, d, c, x, m, p, f, a : Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule225)

    pattern226 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule226 = ReplacementRule(pattern226, lambda n, g, e, d, c, x, m, p, f, b, a : (d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule226)

    pattern227 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule227 = ReplacementRule(pattern227, lambda n, g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**FracPart(p)*(d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule227)

    pattern228 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule228 = ReplacementRule(pattern228, lambda g, e, d, c, x, m, p, f, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule228)

    pattern229 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule229 = ReplacementRule(pattern229, lambda g, e, d, c, x, m, p, f, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x), x), x))
    rubi.add(rule229)

    pattern230 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule230 = ReplacementRule(pattern230, lambda g, e, d, c, x, f, b, a : e*(-d*g + e*f)*Int(1/(d + e*x), x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int(Simp(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f), x)/(a + b*x + c*x**S(2)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule230)

    pattern231 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule231 = ReplacementRule(pattern231, lambda g, e, d, c, x, f, a : e*(-d*g + e*f)*Int(1/(d + e*x), x)/(a*e**S(2) + c*d**S(2)) + Int(Simp(a*e*g + c*d*f - c*x*(-d*g + e*f), x)/(a + c*x**S(2)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule231)

    pattern232 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda g, e, d, c, f, b, a: ZeroQ(-S(2)*a*e*g + b*(d*g + e*f) - S(2)*c*d*f)))
    rule232 = ReplacementRule(pattern232, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**(m + S(1))*(d*g - e*f)*(a + b*x + c*x**S(2))**(p + S(1))/(S(2)*(p + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule232)

    pattern233 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda g, e, d, c, f, a: ZeroQ(a*e*g + c*d*f)))
    rule233 = ReplacementRule(pattern233, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))*(d*g - e*f)/(S(2)*(p + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule233)

    pattern234 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, m, b: Not(Equal(m, S(1)) & (ZeroQ(d) | ZeroQ(-b*e + S(2)*c*d)))))
    rule234 = ReplacementRule(pattern234, lambda g, e, d, c, x, m, p, f, b, a : -m*(-S(2)*a*e*g + b*(d*g + e*f) - S(2)*c*d*f)*Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1)), x)/((p + S(1))*(-S(4)*a*c + b**S(2))) + (d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*g + b*f + x*(-b*g + S(2)*c*f))/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule234)

    pattern235 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda d, m: Not(ZeroQ(d) & Equal(m, S(1)))))
    rule235 = ReplacementRule(pattern235, lambda g, e, d, c, x, m, p, f, a : -m*(a*e*g + c*d*f)*Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1)), x)/(S(2)*a*c*(p + S(1))) + (a + c*x**S(2))**(p + S(1))*(d + e*x)**m*(a*g - c*f*x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule235)

    pattern236 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule236 = ReplacementRule(pattern236, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**(m + S(1))*(d*g - e*f)*(a + b*x + c*x**S(2))**(p + S(1))/(S(2)*(p + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) - (-S(2)*a*e*g + b*(d*g + e*f) - S(2)*c*d*f)*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/(S(2)*a*e**S(2) - S(2)*b*d*e + S(2)*c*d**S(2)))
    rubi.add(rule236)

    pattern237 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule237 = ReplacementRule(pattern237, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))*(d*g - e*f)/(S(2)*(p + S(1))*(a*e**S(2) + c*d**S(2))) + (a*e*g + c*d*f)*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule237)

    pattern238 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda g, e, d, c, p, f, b, a: ZeroQ(-S(2)*a*c*e*g + b**S(2)*e*g*(p + S(2)) + c*(S(2)*p + S(3))*(-b*(d*g + e*f) + S(2)*c*d*f))))
    rule238 = ReplacementRule(pattern238, lambda g, e, d, c, x, p, f, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(-b*e*g*(p + S(2)) + S(2)*c*e*g*x*(p + S(1)) + c*(S(2)*p + S(3))*(d*g + e*f))/(S(2)*c**S(2)*(p + S(1))*(S(2)*p + S(3))))
    rubi.add(rule238)

    pattern239 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda g, e, d, c, p, f, a: ZeroQ(a*e*g - c*d*f*(S(2)*p + S(3)))))
    rule239 = ReplacementRule(pattern239, lambda g, e, d, c, x, p, f, a : (a + c*x**S(2))**(p + S(1))*(S(2)*e*g*x*(p + S(1)) + (S(2)*p + S(3))*(d*g + e*f))/(S(2)*c*(p + S(1))*(S(2)*p + S(3))))
    rubi.add(rule239)

    pattern240 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule240 = ReplacementRule(pattern240, lambda g, e, d, c, x, p, f, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*c*(d*g + e*f) + b*(a*e*g + c*d*f) + x*(b**S(2)*e*g - b*c*(d*g + e*f) + S(2)*c*(-a*e*g + c*d*f)))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - (-S(2)*a*c*e*g + b**S(2)*e*g*(p + S(2)) + c*(S(2)*p + S(3))*(-b*(d*g + e*f) + S(2)*c*d*f))*Int((a + b*x + c*x**S(2))**(p + S(1)), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule240)

    pattern241 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule241 = ReplacementRule(pattern241, lambda g, e, d, c, x, p, f, a : (a + c*x**S(2))**(p + S(1))*(a*(d*g + e*(f + g*x)) - c*d*f*x)/(S(2)*a*c*(p + S(1))) - (a*e*g - c*d*f*(S(2)*p + S(3)))*Int((a + c*x**S(2))**(p + S(1)), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule241)

    pattern242 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(RationalQ(p) & LessEqual(p, S(-1)))))
    rule242 = ReplacementRule(pattern242, lambda g, e, d, c, x, p, f, b, a : (-S(2)*a*c*e*g + b**S(2)*e*g*(p + S(2)) + c*(S(2)*p + S(3))*(-b*(d*g + e*f) + S(2)*c*d*f))*Int((a + b*x + c*x**S(2))**p, x)/(S(2)*c**S(2)*(S(2)*p + S(3))) + (a + b*x + c*x**S(2))**(p + S(1))*(-b*e*g*(p + S(2)) + S(2)*c*e*g*x*(p + S(1)) + c*(S(2)*p + S(3))*(d*g + e*f))/(S(2)*c**S(2)*(p + S(1))*(S(2)*p + S(3))))
    rubi.add(rule242)

    pattern243 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(RationalQ(p) & LessEqual(p, S(-1)))))
    rule243 = ReplacementRule(pattern243, lambda g, e, d, c, x, p, f, a : (a + c*x**S(2))**(p + S(1))*(S(2)*e*g*x*(p + S(1)) + (S(2)*p + S(3))*(d*g + e*f))/(S(2)*c*(p + S(1))*(S(2)*p + S(3))) - (a*e*g - c*d*f*(S(2)*p + S(3)))*Int((a + c*x**S(2))**p, x)/(c*(S(2)*p + S(3))))
    rubi.add(rule243)

    pattern244 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**S(2)*WC('c', S(1)))**p_*(f_ + x_*WC('g', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(RationalQ(m))), CustomConstraint(lambda p: Not(PositiveIntegerQ(p))))
    rule244 = ReplacementRule(pattern244, lambda g, e, c, x, m, p, f, a : f*Int((e*x)**m*(a + c*x**S(2))**p, x) + g*Int((e*x)**(m + S(1))*(a + c*x**S(2))**p, x)/e)
    rubi.add(rule244)

    pattern245 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, p: ZeroQ(m - p)), CustomConstraint(lambda d, e, b, a: ZeroQ(a*e + b*d)), CustomConstraint(lambda d, c, e, b: ZeroQ(b*e + c*d)))
    rule245 = ReplacementRule(pattern245, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**FracPart(p)*(a*d + c*e*x**S(3))**(-FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((f + g*x)*(a*d + c*e*x**S(3))**p, x))
    rubi.add(rule245)

    pattern246 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-2))), CustomConstraint(lambda m, p: Less(m + S(2)*p, S(0))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(3)))))
    rule246 = ReplacementRule(pattern246, lambda g, e, d, c, x, m, p, f, b, a : -p*Int((d + e*x)**(m + S(2))*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(S(2)*a*c*e*(m + S(2))*(-d*g + e*f) + b**S(2)*e*(d*g*(p + S(1)) - e*f*(m + p + S(2))) + b*(a*e**S(2)*g*(m + S(1)) - c*d*(d*g*(S(2)*p + S(1)) - e*f*(m + S(2)*p + S(2)))) - c*x*(S(2)*c*d*(d*g*(S(2)*p + S(1)) - e*f*(m + S(2)*p + S(2))) - e*(S(2)*a*e*g*(m + S(1)) - b*(d*g*(m - S(2)*p) + e*f*(m + S(2)*p + S(2))))), x), x)/(e**S(2)*(m + S(1))*(m + S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) - (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*(-d*p*(-b*e + S(2)*c*d)*(-d*g + e*f) - e*x*(g*(m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2)) + p*(-b*e + S(2)*c*d)*(-d*g + e*f)) + (d*g - e*f*(m + S(2)))*(a*e**S(2) - b*d*e + c*d**S(2)))/(e**S(2)*(m + S(1))*(m + S(2))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule246)

    pattern247 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-2))), CustomConstraint(lambda m, p: Less(m + S(2)*p, S(0))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(3)))))
    rule247 = ReplacementRule(pattern247, lambda g, e, d, c, x, m, p, f, a : -p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(2))*Simp(S(2)*a*c*e*(m + S(2))*(-d*g + e*f) - c*x*(-S(2)*a*e**S(2)*g*(m + S(1)) + S(2)*c*d*(d*g*(S(2)*p + S(1)) - e*f*(m + S(2)*p + S(2)))), x), x)/(e**S(2)*(m + S(1))*(m + S(2))*(a*e**S(2) + c*d**S(2))) - (a + c*x**S(2))**p*(d + e*x)**(m + S(1))*(-S(2)*c*d**S(2)*p*(-d*g + e*f) - e*x*(S(2)*c*d*p*(-d*g + e*f) + g*(m + S(1))*(a*e**S(2) + c*d**S(2))) + (a*e**S(2) + c*d**S(2))*(d*g - e*f*(m + S(2))))/(e**S(2)*(m + S(1))*(m + S(2))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule247)

    pattern248 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: Equal(p, S(1)) | (IntegerQ(p) & Not(RationalQ(m))) | (RationalQ(m) & Less(m, S(-1)))), CustomConstraint(lambda m: NonzeroQ(m + S(1))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(1)))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule248 = ReplacementRule(pattern248, lambda g, e, d, c, x, m, p, f, b, a : p*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(-b*e*f*(m + S(2)*p + S(2)) + g*(S(2)*a*e*m + S(2)*a*e + S(2)*b*d*p + b*d) + x*(-S(2)*c*e*f*(m + S(2)*p + S(2)) + g*(b*e*m + b*e + S(4)*c*d*p + S(2)*c*d)), x), x)/(e**S(2)*(m + S(1))*(m + S(2)*p + S(2))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*(-d*g*(S(2)*p + S(1)) + e*f*(m + S(2)*p + S(2)) + e*g*x*(m + S(1)))/(e**S(2)*(m + S(1))*(m + S(2)*p + S(2))))
    rubi.add(rule248)

    pattern249 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: Equal(p, S(1)) | (IntegerQ(p) & Not(RationalQ(m))) | (RationalQ(m) & Less(m, S(-1)))), CustomConstraint(lambda m: NonzeroQ(m + S(1))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p + S(1)))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule249 = ReplacementRule(pattern249, lambda g, e, d, c, x, m, p, f, a : p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**(m + S(1))*Simp(g*(S(2)*a*e*m + S(2)*a*e) + x*(-S(2)*c*e*f*(m + S(2)*p + S(2)) + g*(S(4)*c*d*p + S(2)*c*d)), x), x)/(e**S(2)*(m + S(1))*(m + S(2)*p + S(2))) + (a + c*x**S(2))**p*(d + e*x)**(m + S(1))*(-d*g*(S(2)*p + S(1)) + e*f*(m + S(2)*p + S(2)) + e*g*x*(m + S(1)))/(e**S(2)*(m + S(1))*(m + S(2)*p + S(2))))
    rubi.add(rule249)

    pattern250 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: IntegerQ(p) | Not(RationalQ(m)) | Inequality(S(-1), LessEqual, m, Less, S(0))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule250 = ReplacementRule(pattern250, lambda g, e, d, c, x, m, p, f, b, a : -p*Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(c*e*f*(-S(2)*a*e + b*d)*(m + S(2)*p + S(2)) + g*(a*e*(b*e*m + b*e - S(2)*c*d*m) + b*d*(b*e*p - S(2)*c*d*p - c*d)) + x*(c*e*f*(-b*e + S(2)*c*d)*(m + S(2)*p + S(2)) + g*(b**S(2)*e**S(2)*(m + p + S(1)) - S(2)*c**S(2)*d**S(2)*(S(2)*p + S(1)) - c*e*(S(2)*a*e*(m + S(2)*p + S(1)) + b*d*(m - S(2)*p)))), x), x)/(c*e**S(2)*(m + S(2)*p + S(1))*(m + S(2)*p + S(2))) + (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*(c*e*f*(m + S(2)*p + S(2)) + c*e*g*x*(m + S(2)*p + S(1)) - g*(-b*e*p + S(2)*c*d*p + c*d))/(c*e**S(2)*(m + S(2)*p + S(1))*(m + S(2)*p + S(2))))
    rubi.add(rule250)

    pattern251 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m, p: IntegerQ(p) | Not(RationalQ(m)) | Inequality(S(-1), LessEqual, m, Less, S(0))), CustomConstraint(lambda m, p: Not(NegativeIntegerQ(m + S(2)*p))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule251 = ReplacementRule(pattern251, lambda g, e, d, c, x, m, p, f, a : S(2)*p*Int((a + c*x**S(2))**(p + S(-1))*(d + e*x)**m*Simp(a*c*d*e*g*m + a*c*e**S(2)*f*(m + S(2)*p + S(2)) - x*(c**S(2)*d*e*f*(m + S(2)*p + S(2)) - g*(a*c*e**S(2)*(m + S(2)*p + S(1)) + c**S(2)*d**S(2)*(S(2)*p + S(1)))), x), x)/(c*e**S(2)*(m + S(2)*p + S(1))*(m + S(2)*p + S(2))) + (a + c*x**S(2))**p*(d + e*x)**(m + S(1))*(-c*d*g*(S(2)*p + S(1)) + c*e*f*(m + S(2)*p + S(2)) + c*e*g*x*(m + S(2)*p + S(1)))/(c*e**S(2)*(m + S(2)*p + S(1))*(m + S(2)*p + S(2))))
    rubi.add(rule251)

    pattern252 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda g, e, d, c, m, p, f, b, a: Not(NegativeIntegerQ(m + S(2)*p + S(3))) | (Equal(m, S(2)) & Equal(p, S(-3)) & RationalQ(a, b, c, d, e, f, g))))
    rule252 = ReplacementRule(pattern252, lambda g, e, d, c, x, m, p, f, b, a : -(d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*(S(2)*a*c*(d*g + e*f) - b*(a*e*g + c*d*f) - x*(b**S(2)*e*g + S(2)*c**S(2)*d*f - c*(S(2)*a*e*g + b*d*g + b*e*f)))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((d + e*x)**(m + S(-2))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(b*e*g*(a*e*(m + S(-1)) + b*d*(p + S(2))) + S(2)*c**S(2)*d**S(2)*f*(S(2)*p + S(3)) - c*(S(2)*a*e*(d*g*m + e*f*(m + S(-1))) + b*d*(d*g*(S(2)*p + S(3)) - e*f*(m - S(2)*p + S(-4)))) + e*x*(b**S(2)*e*g*(m + p + S(1)) + S(2)*c**S(2)*d*f*(m + S(2)*p + S(2)) - c*(S(2)*a*e*g*m + b*(d*g + e*f)*(m + S(2)*p + S(2)))), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule252)

    pattern253 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda g, e, d, c, m, p, f, a: Not(NegativeIntegerQ(m + S(2)*p + S(3))) | (Equal(m, S(2)) & Equal(p, S(-3)) & RationalQ(a, c, d, e, f, g))))
    rule253 = ReplacementRule(pattern253, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*(S(2)*a*(d*g + e*f) - x*(-S(2)*a*e*g + S(2)*c*d*f))/(S(4)*a*c*(p + S(1))) - Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-2))*Simp(S(2)*a*e*(d*g*m + e*f*(m + S(-1))) - S(2)*c*d**S(2)*f*(S(2)*p + S(3)) + e*x*(S(2)*a*e*g*m - S(2)*c*d*f*(m + S(2)*p + S(2))), x), x)/(S(4)*a*c*(p + S(1))))
    rubi.add(rule253)

    pattern254 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda g, e, d, x, m, f: Not(Equal(m, S(1)) & SimplerQ(d + e*x, f + g*x))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule254 = ReplacementRule(pattern254, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*g + b*f + x*(-b*g + S(2)*c*f))/((p + S(1))*(-S(4)*a*c + b**S(2))) + Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-e*x*(-b*g + S(2)*c*f)*(m + S(2)*p + S(3)) - f*(b*e*m + S(2)*c*d*(S(2)*p + S(3))) + g*(S(2)*a*e*m + b*d*(S(2)*p + S(3))), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule254)

    pattern255 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda g, e, d, x, m, f: Not(Equal(m, S(1)) & SimplerQ(d + e*x, f + g*x))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule255 = ReplacementRule(pattern255, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**m*(a*g - c*f*x)/(S(2)*a*c*(p + S(1))) - Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(-1))*Simp(a*e*g*m - c*d*f*(S(2)*p + S(3)) - c*e*f*x*(m + S(2)*p + S(3)), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule255)

    pattern256 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule256 = ReplacementRule(pattern256, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(-a*g*(-b*e + S(2)*c*d) + c*x*(f*(-b*e + S(2)*c*d) - g*(-S(2)*a*e + b*d)) + f*(S(2)*a*c*e - b**S(2)*e + b*c*d))/((p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*Simp(c*e*x*(-f*(-b*e + S(2)*c*d) + g*(-S(2)*a*e + b*d))*(m + S(2)*p + S(4)) + f*(-S(2)*a*c*e**S(2)*(m + S(2)*p + S(3)) + b**S(2)*e**S(2)*(m + p + S(2)) + b*c*d*e*(-m + S(2)*p + S(2)) - S(2)*c**S(2)*d**S(2)*(S(2)*p + S(3))) - g*(a*e*(b*e*m + b*e - S(2)*c*d*m) - b*d*(-b*e*p - b*e + S(2)*c*d*p + S(3)*c*d)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule256)

    pattern257 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule257 = ReplacementRule(pattern257, lambda g, e, d, c, x, m, p, f, a : -(a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))*(-a*c*d*g + a*c*e*f + c*x*(a*e*g + c*d*f))/(S(2)*a*c*(p + S(1))*(a*e**S(2) + c*d**S(2))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x)**m*Simp(-a*c*d*e*g*m + c*e*x*(a*e*g + c*d*f)*(m + S(2)*p + S(4)) + f*(a*c*e**S(2)*(m + S(2)*p + S(3)) + c**S(2)*d**S(2)*(S(2)*p + S(3))), x), x)/(S(2)*a*c*(p + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule257)

    pattern258 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: IntegerQ(m)))
    rule258 = ReplacementRule(pattern258, lambda g, e, d, c, x, m, f, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)/(a + b*x + c*x**S(2)), x), x))
    rubi.add(rule258)

    pattern259 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: IntegerQ(m)))
    rule259 = ReplacementRule(pattern259, lambda g, e, d, c, x, m, f, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)/(a + c*x**S(2)), x), x))
    rubi.add(rule259)

    pattern260 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule260 = ReplacementRule(pattern260, lambda g, e, d, c, x, m, f, b, a : g*(d + e*x)**m/(c*m) + Int((d + e*x)**(m + S(-1))*Simp(-a*e*g + c*d*f + x*(-b*e*g + c*d*g + c*e*f), x)/(a + b*x + c*x**S(2)), x)/c)
    rubi.add(rule260)

    pattern261 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule261 = ReplacementRule(pattern261, lambda g, e, d, c, x, m, f, a : g*(d + e*x)**m/(c*m) + Int((d + e*x)**(m + S(-1))*Simp(-a*e*g + c*d*f + x*(c*d*g + c*e*f), x)/(a + c*x**S(2)), x)/c)
    rubi.add(rule261)

    pattern262 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule262 = ReplacementRule(pattern262, lambda g, e, d, c, x, f, b, a : S(2)*Subst(Int((-d*g + e*f + g*x**S(2))/(a*e**S(2) - b*d*e + c*d**S(2) + c*x**S(4) - x**S(2)*(-b*e + S(2)*c*d)), x), x, sqrt(d + e*x)))
    rubi.add(rule262)

    pattern263 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule263 = ReplacementRule(pattern263, lambda g, e, d, c, x, f, a : S(2)*Subst(Int((-d*g + e*f + g*x**S(2))/(a*e**S(2) + c*d**S(2) - S(2)*c*d*x**S(2) + c*x**S(4)), x), x, sqrt(d + e*x)))
    rubi.add(rule263)

    pattern264 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule264 = ReplacementRule(pattern264, lambda g, e, d, c, x, m, f, b, a : (d + e*x)**(m + S(1))*(-d*g + e*f)/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**(m + S(1))*Simp(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f), x)/(a + b*x + c*x**S(2)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule264)

    pattern265 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule265 = ReplacementRule(pattern265, lambda g, e, d, c, x, m, f, a : (d + e*x)**(m + S(1))*(-d*g + e*f)/((m + S(1))*(a*e**S(2) + c*d**S(2))) + Int((d + e*x)**(m + S(1))*Simp(a*e*g + c*d*f - c*x*(-d*g + e*f), x)/(a + c*x**S(2)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule265)

    pattern266 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: Not(RationalQ(m))))
    rule266 = ReplacementRule(pattern266, lambda g, e, d, c, x, m, f, b, a : Int(ExpandIntegrand((d + e*x)**m, (f + g*x)/(a + b*x + c*x**S(2)), x), x))
    rubi.add(rule266)

    pattern267 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: Not(RationalQ(m))))
    rule267 = ReplacementRule(pattern267, lambda g, e, d, c, x, m, f, a : Int(ExpandIntegrand((d + e*x)**m, (f + g*x)/(a + c*x**S(2)), x), x))
    rubi.add(rule267)

    pattern268 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))), CustomConstraint(lambda g, e, d, x, m, f: Not(Equal(m, S(1)) & SimplerQ(f + g*x, d + e*x))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule268 = ReplacementRule(pattern268, lambda g, e, d, c, x, m, p, f, b, a : g*(d + e*x)**m*(a + b*x + c*x**S(2))**(p + S(1))/(c*(m + S(2)*p + S(2))) + Int((d + e*x)**(m + S(-1))*(a + b*x + c*x**S(2))**p*Simp(d*(p + S(1))*(-b*g + S(2)*c*f) + m*(-a*e*g + c*d*f) + x*(e*(p + S(1))*(-b*g + S(2)*c*f) + m*(-b*e*g + c*d*g + c*e*f)), x), x)/(c*(m + S(2)*p + S(2))))
    rubi.add(rule268)

    pattern269 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(2))), CustomConstraint(lambda g, e, d, x, m, f: Not(Equal(m, S(1)) & SimplerQ(f + g*x, d + e*x))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule269 = ReplacementRule(pattern269, lambda g, e, d, c, x, m, p, f, a : g*(a + c*x**S(2))**(p + S(1))*(d + e*x)**m/(c*(m + S(2)*p + S(2))) + Int((a + c*x**S(2))**p*(d + e*x)**(m + S(-1))*Simp(-a*e*g*m + c*d*f*(m + S(2)*p + S(2)) + c*x*(d*g*m + e*f*(m + S(2)*p + S(2))), x), x)/(c*(m + S(2)*p + S(2))))
    rubi.add(rule269)

    pattern270 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule270 = ReplacementRule(pattern270, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**(m + S(1))*(-d*g + e*f)*(a + b*x + c*x**S(2))**(p + S(1))/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*Simp(b*(p + S(1))*(d*g - e*f) - c*x*(-d*g + e*f)*(m + S(2)*p + S(3)) + (m + S(1))*(a*e*g - b*e*f + c*d*f), x), x)/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule270)

    pattern271 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m, p: IntegerQ(m) | IntegerQ(p) | IntegersQ(S(2)*m, S(2)*p)))
    rule271 = ReplacementRule(pattern271, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))*(-d*g + e*f)/((m + S(1))*(a*e**S(2) + c*d**S(2))) + Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1))*Simp(-c*x*(-d*g + e*f)*(m + S(2)*p + S(3)) + (m + S(1))*(a*e*g + c*d*f), x), x)/((m + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule271)

    pattern272 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m, p: NegativeIntegerQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: NonzeroQ(m + S(1))))
    rule272 = ReplacementRule(pattern272, lambda g, e, d, c, x, m, p, f, b, a : (d + e*x)**(m + S(1))*(-d*g + e*f)*(a + b*x + c*x**S(2))**(p + S(1))/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))) + Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*Simp(b*(p + S(1))*(d*g - e*f) - c*x*(-d*g + e*f)*(m + S(2)*p + S(3)) + (m + S(1))*(a*e*g - b*e*f + c*d*f), x), x)/((m + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule272)

    pattern273 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m, p: NegativeIntegerQ(m + S(2)*p + S(3))), CustomConstraint(lambda m: NonzeroQ(m + S(1))))
    rule273 = ReplacementRule(pattern273, lambda g, e, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(d + e*x)**(m + S(1))*(-d*g + e*f)/((m + S(1))*(a*e**S(2) + c*d**S(2))) + Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1))*Simp(-c*x*(-d*g + e*f)*(m + S(2)*p + S(3)) + (m + S(1))*(a*e*g + c*d*f), x), x)/((m + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule273)

    pattern274 = Pattern(Integral((f_ + x_*WC('g', S(1)))/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, c, b, a: ZeroQ(S(4)*c*(a - d) - (b - e)**S(2))), CustomConstraint(lambda g, e, d, f, b, a: ZeroQ(e*f*(b - e) - S(2)*g*(-a*e + b*d))), CustomConstraint(lambda d, e, b, a: NonzeroQ(-a*e + b*d)))
    rule274 = ReplacementRule(pattern274, lambda g, e, d, c, x, f, b, a : S(4)*f*(a - d)*Subst(Int(1/(S(4)*a - S(4)*d - x**S(2)), x), x, (S(2)*a - S(2)*d + x*(b - e))/sqrt(a + b*x + c*x**S(2)))/(-a*e + b*d))
    rubi.add(rule274)

    pattern275 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(x_)*sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule275 = ReplacementRule(pattern275, lambda g, c, x, f, b, a : S(2)*Subst(Int((f + g*x**S(2))/sqrt(a + b*x**S(2) + c*x**S(4)), x), x, sqrt(x)))
    rubi.add(rule275)

    pattern276 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(x_)*sqrt(a_ + x_**S(2)*WC('c', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)))
    rule276 = ReplacementRule(pattern276, lambda g, c, x, f, a : S(2)*Subst(Int((f + g*x**S(2))/sqrt(a + c*x**S(4)), x), x, sqrt(x)))
    rubi.add(rule276)

    pattern277 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(e_*x_)*sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule277 = ReplacementRule(pattern277, lambda g, e, c, x, f, b, a : sqrt(x)*Int((f + g*x)/(sqrt(x)*sqrt(a + b*x + c*x**S(2))), x)/sqrt(e*x))
    rubi.add(rule277)

    pattern278 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(e_*x_)*sqrt(a_ + x_**S(2)*WC('c', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)))
    rule278 = ReplacementRule(pattern278, lambda g, e, c, x, f, a : sqrt(x)*Int((f + g*x)/(sqrt(x)*sqrt(a + c*x**S(2))), x)/sqrt(e*x))
    rubi.add(rule278)

    pattern279 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule279 = ReplacementRule(pattern279, lambda g, e, d, c, x, m, p, f, b, a : g*Int((d + e*x)**(m + S(1))*(a + b*x + c*x**S(2))**p, x)/e + (-d*g + e*f)*Int((d + e*x)**m*(a + b*x + c*x**S(2))**p, x)/e)
    rubi.add(rule279)

    pattern280 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule280 = ReplacementRule(pattern280, lambda g, e, d, c, x, m, p, f, a : g*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1)), x)/e + (-d*g + e*f)*Int((a + c*x**S(2))**p*(d + e*x)**m, x)/e)
    rubi.add(rule280)

    pattern281 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, m, p: IntegersQ(m, n, p)))
    rule281 = ReplacementRule(pattern281, lambda n, g, e, d, c, x, m, p, f, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule281)

    pattern282 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, m, p: IntegersQ(m, n, p)))
    rule282 = ReplacementRule(pattern282, lambda n, g, e, d, c, x, m, p, f, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule282)

    pattern283 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule283 = ReplacementRule(pattern283, lambda g, e, d, c, x, p, f, b, a : (a*e**S(2) - b*d*e + c*d**S(2))*Int((a + b*x + c*x**S(2))**(p + S(-1))/(d + e*x), x)/(e*(-d*g + e*f)) - Int((a + b*x + c*x**S(2))**(p + S(-1))*Simp(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f), x)/(f + g*x), x)/(e*(-d*g + e*f)))
    rubi.add(rule283)

    pattern284 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule284 = ReplacementRule(pattern284, lambda g, e, d, c, x, p, f, a : (a*e**S(2) + c*d**S(2))*Int((a + c*x**S(2))**(p + S(-1))/(d + e*x), x)/(e*(-d*g + e*f)) - Int((a + c*x**S(2))**(p + S(-1))*Simp(a*e*g + c*d*f - c*x*(-d*g + e*f), x)/(f + g*x), x)/(e*(-d*g + e*f)))
    rubi.add(rule284)

    pattern285 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, p: IntegersQ(n, p)), CustomConstraint(lambda m: FractionQ(m)), )
    def With285(n, g, e, d, c, x, m, p, f, b, a):
        q = Denominator(m)
        return q*Subst(Int(x**(q*(m + S(1)) + S(-1))*(g*x**q/e + (-d*g + e*f)/e)**n*(c*x**(S(2)*q)/e**S(2) - x**q*(-b*e + S(2)*c*d)/e**S(2) + (a*e**S(2) - b*d*e + c*d**S(2))/e**S(2))**p, x), x, (d + e*x)**(1/q))/e
    rule285 = ReplacementRule(pattern285, lambda n, g, e, d, c, x, m, p, f, b, a : With285(n, g, e, d, c, x, m, p, f, b, a))
    rubi.add(rule285)

    pattern286 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, p: IntegersQ(n, p)), CustomConstraint(lambda m: FractionQ(m)), )
    def With286(n, g, e, d, c, x, m, p, f, a):
        q = Denominator(m)
        return q*Subst(Int(x**(q*(m + S(1)) + S(-1))*(g*x**q/e + (-d*g + e*f)/e)**n*(-S(2)*c*d*x**q/e**S(2) + c*x**(S(2)*q)/e**S(2) + (a*e**S(2) + c*d**S(2))/e**S(2))**p, x), x, (d + e*x)**(1/q))/e
    rule286 = ReplacementRule(pattern286, lambda n, g, e, d, c, x, m, p, f, a : With286(n, g, e, d, c, x, m, p, f, a))
    rubi.add(rule286)

    pattern287 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(f_ + x_*WC('g', S(1)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)), CustomConstraint(lambda d, f, m: IntegerQ(m) | (PositiveQ(d) & PositiveQ(f))))
    rule287 = ReplacementRule(pattern287, lambda n, g, e, d, c, x, m, p, f, b, a : Int((d*f + e*g*x**S(2))**m*(a + b*x + c*x**S(2))**p, x))
    rubi.add(rule287)

    pattern288 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(f_ + x_*WC('g', S(1)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)), CustomConstraint(lambda d, f, m: IntegerQ(m) | (PositiveQ(d) & PositiveQ(f))))
    rule288 = ReplacementRule(pattern288, lambda n, g, e, d, c, x, m, p, f, a : Int((a + c*x**S(2))**p*(d*f + e*g*x**S(2))**m, x))
    rubi.add(rule288)

    pattern289 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(f_ + x_*WC('g', S(1)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)))
    rule289 = ReplacementRule(pattern289, lambda n, g, e, d, c, x, m, p, f, b, a : (d + e*x)**FracPart(m)*(f + g*x)**FracPart(m)*(d*f + e*g*x**S(2))**(-FracPart(m))*Int((d*f + e*g*x**S(2))**m*(a + b*x + c*x**S(2))**p, x))
    rubi.add(rule289)

    pattern290 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(f_ + x_*WC('g', S(1)))**n_*(x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)))
    rule290 = ReplacementRule(pattern290, lambda n, g, e, d, c, x, m, p, f, a : (d + e*x)**FracPart(m)*(f + g*x)**FracPart(m)*(d*f + e*g*x**S(2))**(-FracPart(m))*Int((a + c*x**S(2))**p*(d*f + e*g*x**S(2))**m, x))
    rubi.add(rule290)

    pattern291 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)))
    rule291 = ReplacementRule(pattern291, lambda n, g, e, d, c, x, m, f, b, a : c*Int(x**S(2)*(d + e*x)**m*(f + g*x)**n, x) + Int((a + b*x)*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule291)

    pattern292 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)))
    rule292 = ReplacementRule(pattern292, lambda n, g, e, d, c, x, m, f, a : a*Int((d + e*x)**m*(f + g*x)**n, x) + c*Int(x**S(2)*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule292)

    pattern293 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Greater(n, S(1))))
    rule293 = ReplacementRule(pattern293, lambda n, g, e, d, c, x, m, f, b, a : g*Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-2))*Simp(-b*e*g + c*d*g + S(2)*c*e*f + c*e*g*x, x), x)/c**S(2) + Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-2))*Simp(a*b*e*g**S(2) - a*c*d*g**S(2) - S(2)*a*c*e*f*g + c**S(2)*d*f**S(2) + x*(-a*c*e*g**S(2) + b**S(2)*e*g**S(2) - b*c*d*g**S(2) - S(2)*b*c*e*f*g + S(2)*c**S(2)*d*f*g + c**S(2)*e*f**S(2)), x)/(a + b*x + c*x**S(2)), x)/c**S(2))
    rubi.add(rule293)

    pattern294 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Greater(n, S(1))))
    rule294 = ReplacementRule(pattern294, lambda n, g, e, d, c, x, m, f, a : g*Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-2))*Simp(d*g + S(2)*e*f + e*g*x, x), x)/c + Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-2))*Simp(-a*d*g**S(2) - S(2)*a*e*f*g + c*d*f**S(2) + x*(-a*e*g**S(2) + S(2)*c*d*f*g + c*e*f**S(2)), x)/(a + c*x**S(2)), x)/c)
    rubi.add(rule294)

    pattern295 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule295 = ReplacementRule(pattern295, lambda n, g, e, d, c, x, m, f, b, a : e*g*Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-1)), x)/c + Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-1))*Simp(-a*e*g + c*d*f + x*(-b*e*g + c*d*g + c*e*f), x)/(a + b*x + c*x**S(2)), x)/c)
    rubi.add(rule295)

    pattern296 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule296 = ReplacementRule(pattern296, lambda n, g, e, d, c, x, m, f, a : e*g*Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-1)), x)/c + Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(-1))*Simp(-a*e*g + c*d*f + x*(c*d*g + c*e*f), x)/(a + c*x**S(2)), x)/c)
    rubi.add(rule296)

    pattern297 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule297 = ReplacementRule(pattern297, lambda n, g, e, d, c, x, m, f, b, a : -g*(-d*g + e*f)*Int((d + e*x)**(m + S(-1))*(f + g*x)**n, x)/(a*g**S(2) - b*f*g + c*f**S(2)) + Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))*Simp(a*e*g - b*d*g + c*d*f + c*x*(-d*g + e*f), x)/(a + b*x + c*x**S(2)), x)/(a*g**S(2) - b*f*g + c*f**S(2)))
    rubi.add(rule297)

    pattern298 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule298 = ReplacementRule(pattern298, lambda n, g, e, d, c, x, m, f, a : -g*(-d*g + e*f)*Int((d + e*x)**(m + S(-1))*(f + g*x)**n, x)/(a*g**S(2) + c*f**S(2)) + Int((d + e*x)**(m + S(-1))*(f + g*x)**(n + S(1))*Simp(a*e*g + c*d*f + c*x*(-d*g + e*f), x)/(a + c*x**S(2)), x)/(a*g**S(2) + c*f**S(2)))
    rubi.add(rule298)

    pattern299 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: PositiveIntegerQ(m + S(1)/2)))
    rule299 = ReplacementRule(pattern299, lambda g, e, d, c, x, m, f, b, a : Int(ExpandIntegrand(S(1)/(sqrt(d + e*x)*sqrt(f + g*x)), (d + e*x)**(m + S(1)/2)/(a + b*x + c*x**S(2)), x), x))
    rubi.add(rule299)

    pattern300 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**S(2)*WC('c', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: PositiveIntegerQ(m + S(1)/2)))
    rule300 = ReplacementRule(pattern300, lambda g, e, d, c, x, m, f, a : Int(ExpandIntegrand(S(1)/(sqrt(d + e*x)*sqrt(f + g*x)), (d + e*x)**(m + S(1)/2)/(a + c*x**S(2)), x), x))
    rubi.add(rule300)

    pattern301 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule301 = ReplacementRule(pattern301, lambda n, g, e, d, c, x, m, f, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n, 1/(a + b*x + c*x**S(2)), x), x))
    rubi.add(rule301)

    pattern302 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**S(2)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule302 = ReplacementRule(pattern302, lambda n, g, e, d, c, x, m, f, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n, 1/(a + c*x**S(2)), x), x))
    rubi.add(rule302)

    pattern303 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, m, p: IntegerQ(p) | IntegersQ(m, n)))
    rule303 = ReplacementRule(pattern303, lambda n, g, e, d, c, x, m, p, f, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule303)

    pattern304 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, m, p: IntegerQ(p) | IntegersQ(m, n)))
    rule304 = ReplacementRule(pattern304, lambda n, g, e, d, c, x, m, p, f, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule304)

    pattern305 = Pattern(Integral((x_*WC('g', S(1)))**WC('n', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, p: ZeroQ(m - p)), CustomConstraint(lambda d, e, b, a: ZeroQ(a*e + b*d)), CustomConstraint(lambda d, c, e, b: ZeroQ(b*e + c*d)))
    rule305 = ReplacementRule(pattern305, lambda n, g, e, d, c, x, m, p, b, a : (d + e*x)**FracPart(p)*(a*d + c*e*x**S(3))**(-FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((g*x)**n*(a*d + c*e*x**S(3))**p, x))
    rubi.add(rule305)

    pattern306 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule306 = ReplacementRule(pattern306, lambda n, g, e, d, c, x, p, f, b, a : (a*e**S(2) - b*d*e + c*d**S(2))*Int((f + g*x)**(n + S(1))*(a + b*x + c*x**S(2))**(p + S(-1))/(d + e*x), x)/(e*(-d*g + e*f)) - Int((f + g*x)**n*(a + b*x + c*x**S(2))**(p + S(-1))*(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f)), x)/(e*(-d*g + e*f)))
    rubi.add(rule306)

    pattern307 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule307 = ReplacementRule(pattern307, lambda n, g, e, d, c, x, p, f, a : (a*e**S(2) + c*d**S(2))*Int((a + c*x**S(2))**(p + S(-1))*(f + g*x)**(n + S(1))/(d + e*x), x)/(e*(-d*g + e*f)) - Int((a + c*x**S(2))**(p + S(-1))*(f + g*x)**n*(a*e*g + c*d*f - c*x*(-d*g + e*f)), x)/(e*(-d*g + e*f)))
    rubi.add(rule307)

    pattern308 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule308 = ReplacementRule(pattern308, lambda n, g, e, d, c, x, p, f, b, a : e*(-d*g + e*f)*Int((f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))/(d + e*x), x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int((f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**p*(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule308)

    pattern309 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule309 = ReplacementRule(pattern309, lambda n, g, e, d, c, x, p, f, a : e*(-d*g + e*f)*Int((a + c*x**S(2))**(p + S(1))*(f + g*x)**(n + S(-1))/(d + e*x), x)/(a*e**S(2) + c*d**S(2)) + Int((a + c*x**S(2))**p*(f + g*x)**(n + S(-1))*(a*e*g + c*d*f - c*x*(-d*g + e*f)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule309)

    pattern310 = Pattern(Integral(S(1)/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), )
    def With310(g, e, d, c, x, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -sqrt(S(2))*sqrt(-g*(b + S(2)*c*x - q)/(-b*g + S(2)*c*f + g*q))*sqrt(-g*(b + S(2)*c*x + q)/(-b*g + S(2)*c*f - g*q))*EllipticPi(e*(-b*g + S(2)*c*f + g*q)/(S(2)*c*(-d*g + e*f)), asin(sqrt(S(2))*sqrt(c/(-b*g + S(2)*c*f + g*q))*sqrt(f + g*x)), (-b*g + S(2)*c*f + g*q)/(-b*g + S(2)*c*f - g*q))/(sqrt(c/(-b*g + S(2)*c*f + g*q))*(-d*g + e*f)*sqrt(a + b*x + c*x**S(2)))
    rule310 = ReplacementRule(pattern310, lambda g, e, d, c, x, f, b, a : With310(g, e, d, c, x, f, b, a))
    rubi.add(rule310)

    pattern311 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(2)*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), )
    def With311(g, e, d, c, x, f, a):
        q = Rt(-a*c, S(2))
        return -S(2)*sqrt(g*(-c*x + q)/(c*f + g*q))*sqrt(-g*(c*x + q)/(c*f - g*q))*EllipticPi(e*(c*f + g*q)/(c*(-d*g + e*f)), asin(sqrt(c/(c*f + g*q))*sqrt(f + g*x)), (c*f + g*q)/(c*f - g*q))/(sqrt(c/(c*f + g*q))*sqrt(a + c*x**S(2))*(-d*g + e*f))
    rule311 = ReplacementRule(pattern311, lambda g, e, d, c, x, f, a : With311(g, e, d, c, x, f, a))
    rubi.add(rule311)

    pattern312 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)))
    rule312 = ReplacementRule(pattern312, lambda n, g, e, d, c, x, f, b, a : Int(ExpandIntegrand(S(1)/(sqrt(f + g*x)*sqrt(a + b*x + c*x**S(2))), (f + g*x)**(n + S(1)/2)/(d + e*x), x), x))
    rubi.add(rule312)

    pattern313 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_/(sqrt(a_ + x_**S(2)*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)))
    rule313 = ReplacementRule(pattern313, lambda n, g, e, d, c, x, f, a : Int(ExpandIntegrand(S(1)/(sqrt(a + c*x**S(2))*sqrt(f + g*x)), (f + g*x)**(n + S(1)/2)/(d + e*x), x), x))
    rubi.add(rule313)

    pattern314 = Pattern(Integral(S(1)/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*sqrt(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule314 = ReplacementRule(pattern314, lambda g, e, d, c, x, f, b, a : -S(2)*sqrt((-d*g + e*f)**S(2)*(a + b*x + c*x**S(2))/((d + e*x)**S(2)*(a*g**S(2) - b*f*g + c*f**S(2))))*(d + e*x)*Subst(Int(1/sqrt(x**S(4)*(a*e**S(2) - b*d*e + c*d**S(2))/(a*g**S(2) - b*f*g + c*f**S(2)) - x**S(2)*(S(2)*a*e*g - b*d*g - b*e*f + S(2)*c*d*f)/(a*g**S(2) - b*f*g + c*f**S(2)) + S(1)), x), x, sqrt(f + g*x)/sqrt(d + e*x))/((-d*g + e*f)*sqrt(a + b*x + c*x**S(2))))
    rubi.add(rule314)

    pattern315 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule315 = ReplacementRule(pattern315, lambda g, e, d, c, x, f, a : -S(2)*sqrt((a + c*x**S(2))*(-d*g + e*f)**S(2)/((d + e*x)**S(2)*(a*g**S(2) + c*f**S(2))))*(d + e*x)*Subst(Int(1/sqrt(x**S(4)*(a*e**S(2) + c*d**S(2))/(a*g**S(2) + c*f**S(2)) - x**S(2)*(S(2)*a*e*g + S(2)*c*d*f)/(a*g**S(2) + c*f**S(2)) + S(1)), x), x, sqrt(f + g*x)/sqrt(d + e*x))/(sqrt(a + c*x**S(2))*(-d*g + e*f)))
    rubi.add(rule315)

    pattern316 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(f_ + x_*WC('g', S(1)))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule316 = ReplacementRule(pattern316, lambda g, e, c, x, m, p, f, a : Int((e*x)**m*(a + c*x**S(2))**p*(f**S(2) + g**S(2)*x**S(2)), x) + S(2)*f*g*Int((e*x)**(m + S(1))*(a + c*x**S(2))**p, x)/e)
    rubi.add(rule316)

    pattern317 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(f_ + x_*WC('g', S(1)))**S(3), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule317 = ReplacementRule(pattern317, lambda g, e, c, x, m, p, f, a : f*Int((e*x)**m*(a + c*x**S(2))**p*(f**S(2) + S(3)*g**S(2)*x**S(2)), x) + g*Int((e*x)**(m + S(1))*(a + c*x**S(2))**p*(S(3)*f**S(2) + g**S(2)*x**S(2)), x)/e)
    rubi.add(rule317)

    pattern318 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule318 = ReplacementRule(pattern318, lambda n, g, e, d, c, x, m, p, f, b, a : g*Int((d + e*x)**(m + S(1))*(f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**p, x)/e + (-d*g + e*f)*Int((d + e*x)**m*(f + g*x)**(n + S(-1))*(a + b*x + c*x**S(2))**p, x)/e)
    rubi.add(rule318)

    pattern319 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, g, e: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule319 = ReplacementRule(pattern319, lambda n, g, e, d, c, x, m, p, f, a : g*Int((a + c*x**S(2))**p*(d + e*x)**(m + S(1))*(f + g*x)**(n + S(-1)), x)/e + (-d*g + e*f)*Int((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**(n + S(-1)), x)/e)
    rubi.add(rule319)

    pattern320 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule320 = ReplacementRule(pattern320, lambda n, g, e, d, c, x, m, p, f, b, a : Int((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**S(2))**p, x))
    rubi.add(rule320)

    pattern321 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule321 = ReplacementRule(pattern321, lambda n, g, e, d, c, x, m, p, f, a : Int((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule321)

    pattern322 = Pattern(Integral((u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(u_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(a_ + u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule322 = ReplacementRule(pattern322, lambda n, g, e, u, d, c, x, m, p, f, b, a : Subst(Int((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**S(2))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule322)

    pattern323 = Pattern(Integral((a_ + u_**S(2)*WC('c', S(1)))**WC('p', S(1))*(u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(u_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule323 = ReplacementRule(pattern323, lambda n, g, e, d, c, x, m, p, f, u, a : Subst(Int((a + c*x**S(2))**p*(d + e*x)**m*(f + g*x)**n, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule323)

    pattern324 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, c, p: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda e, d, c, x, f, q, b, a: Not(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**S(2)), LeafCount(a + b*x + c*x**S(2)))))
    rule324 = ReplacementRule(pattern324, lambda e, d, c, x, p, f, q, b, a : (c/f)**p*Int((d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule324)

    pattern325 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda f, c: Not(PositiveQ(c/f))))
    rule325 = ReplacementRule(pattern325, lambda e, d, c, x, p, f, q, b, a : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*(d + e*x + f*x**S(2))**(-FracPart(p))*Int((d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule325)

    pattern326 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule326 = ReplacementRule(pattern326, lambda e, d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b + S(2)*c*x)**(S(2)*p)*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule326)

    pattern327 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule327 = ReplacementRule(pattern327, lambda d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b + S(2)*c*x)**(S(2)*p)*(d + f*x**S(2))**q, x))
    rubi.add(rule327)

    pattern328 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda e, d, c, f, q, b, a: ZeroQ(c*(-S(2)*d*f + e**S(2)*(q + S(2))) + f*(S(2)*q + S(3))*(S(2)*a*f - b*e))), CustomConstraint(lambda q: NonzeroQ(q + S(1))), CustomConstraint(lambda q: NonzeroQ(S(2)*q + S(3))))
    rule328 = ReplacementRule(pattern328, lambda e, d, c, x, f, q, b, a : (d + e*x + f*x**S(2))**(q + S(1))*(b*f*(S(2)*q + S(3)) - c*e*(q + S(2)) + S(2)*c*f*x*(q + S(1)))/(S(2)*f**S(2)*(q + S(1))*(S(2)*q + S(3))))
    rubi.add(rule328)

    pattern329 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda e, d, c, f, q, a: ZeroQ(S(2)*a*f**S(2)*(S(2)*q + S(3)) + c*(-S(2)*d*f + e**S(2)*(q + S(2))))), CustomConstraint(lambda q: NonzeroQ(q + S(1))), CustomConstraint(lambda q: NonzeroQ(S(2)*q + S(3))))
    rule329 = ReplacementRule(pattern329, lambda e, d, c, x, f, q, a : (-c*e*(q + S(2)) + S(2)*c*f*x*(q + S(1)))*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*f**S(2)*(q + S(1))*(S(2)*q + S(3))))
    rubi.add(rule329)

    pattern330 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**q_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda q: NonzeroQ(q + S(1))), CustomConstraint(lambda d, c, f, q, a: ZeroQ(S(2)*a*f*q + S(3)*a*f - c*d)))
    rule330 = ReplacementRule(pattern330, lambda d, c, x, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(S(2)*a*f*x*(q + S(1)) + b*d)/(S(2)*d*f*(q + S(1))))
    rubi.add(rule330)

    pattern331 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**q_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda q: PositiveIntegerQ(q + S(2))))
    rule331 = ReplacementRule(pattern331, lambda d, c, x, f, q, b, a : b*Int(x*(d + f*x**S(2))**q, x) + Int((a + c*x**S(2))*(d + f*x**S(2))**q, x))
    rubi.add(rule331)

    pattern332 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q: PositiveIntegerQ(q + S(2))))
    rule332 = ReplacementRule(pattern332, lambda e, d, c, x, f, q, b, a : Int(ExpandIntegrand((a + b*x + c*x**S(2))*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule332)

    pattern333 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q: PositiveIntegerQ(q + S(2))))
    rule333 = ReplacementRule(pattern333, lambda e, d, c, x, f, q, a : Int(ExpandIntegrand((a + c*x**S(2))*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule333)

    pattern334 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda e, d, c, f, q, b, a: NonzeroQ(c*(-S(2)*d*f + e**S(2)*(q + S(2))) + f*(S(2)*q + S(3))*(S(2)*a*f - b*e))))
    rule334 = ReplacementRule(pattern334, lambda e, d, c, x, f, q, b, a : -(c*(-S(2)*d*f + e**S(2)*(q + S(2))) + f*(S(2)*q + S(3))*(S(2)*a*f - b*e))*Int((d + e*x + f*x**S(2))**(q + S(1)), x)/(f*(q + S(1))*(-S(4)*d*f + e**S(2))) + (d + e*x + f*x**S(2))**(q + S(1))*(a*e*f - S(2)*b*d*f + c*d*e + x*(c*(-S(2)*d*f + e**S(2)) + f*(S(2)*a*f - b*e)))/(f*(q + S(1))*(-S(4)*d*f + e**S(2))))
    rubi.add(rule334)

    pattern335 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda e, d, c, f, q, a: NonzeroQ(S(2)*a*f**S(2)*(S(2)*q + S(3)) + c*(-S(2)*d*f + e**S(2)*(q + S(2))))))
    rule335 = ReplacementRule(pattern335, lambda e, d, c, x, f, q, a : -(S(2)*a*f**S(2)*(S(2)*q + S(3)) + c*(-S(2)*d*f + e**S(2)*(q + S(2))))*Int((d + e*x + f*x**S(2))**(q + S(1)), x)/(f*(q + S(1))*(-S(4)*d*f + e**S(2))) + (d + e*x + f*x**S(2))**(q + S(1))*(a*e*f + c*d*e + x*(S(2)*a*f**S(2) + c*(-S(2)*d*f + e**S(2))))/(f*(q + S(1))*(-S(4)*d*f + e**S(2))))
    rubi.add(rule335)

    pattern336 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**q_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda d, c, f, q, a: NonzeroQ(S(2)*a*f*q + S(3)*a*f - c*d)))
    rule336 = ReplacementRule(pattern336, lambda d, c, x, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(b*d - x*(a*f - c*d))/(S(2)*d*f*(q + S(1))) + (S(2)*a*f*q + S(3)*a*f - c*d)*Int((d + f*x**S(2))**(q + S(1)), x)/(S(2)*d*f*(q + S(1))))
    rubi.add(rule336)

    pattern337 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q: Not(PositiveIntegerQ(q))), CustomConstraint(lambda q: Not(RationalQ(q) & LessEqual(q, S(-1)))), CustomConstraint(lambda e, d, c, f, q, b, a: NonzeroQ(c*(-S(2)*d*f + e**S(2)*(q + S(2))) + f*(S(2)*q + S(3))*(S(2)*a*f - b*e))))
    rule337 = ReplacementRule(pattern337, lambda e, d, c, x, f, q, b, a : (c*(-S(2)*d*f + e**S(2)*(q + S(2))) + f*(S(2)*q + S(3))*(S(2)*a*f - b*e))*Int((d + e*x + f*x**S(2))**q, x)/(S(2)*f**S(2)*(S(2)*q + S(3))) + (d + e*x + f*x**S(2))**(q + S(1))*(b*f*(S(2)*q + S(3)) - c*e*(q + S(2)) + S(2)*c*f*x*(q + S(1)))/(S(2)*f**S(2)*(q + S(1))*(S(2)*q + S(3))))
    rubi.add(rule337)

    pattern338 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q: Not(PositiveIntegerQ(q))), CustomConstraint(lambda q: Not(RationalQ(q) & LessEqual(q, S(-1)))), CustomConstraint(lambda e, d, c, f, q, a: NonzeroQ(S(2)*a*f**S(2)*(S(2)*q + S(3)) + c*(-S(2)*d*f + e**S(2)*(q + S(2))))))
    rule338 = ReplacementRule(pattern338, lambda e, d, c, x, f, q, a : (S(2)*a*f**S(2)*(S(2)*q + S(3)) + c*(-S(2)*d*f + e**S(2)*(q + S(2))))*Int((d + e*x + f*x**S(2))**q, x)/(S(2)*f**S(2)*(S(2)*q + S(3))) + (-c*e*(q + S(2)) + S(2)*c*f*x*(q + S(1)))*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*f**S(2)*(q + S(1))*(S(2)*q + S(3))))
    rubi.add(rule338)

    pattern339 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**q_*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda q: Not(PositiveIntegerQ(q))), CustomConstraint(lambda q: Not(RationalQ(q) & LessEqual(q, S(-1)))), CustomConstraint(lambda d, c, f, q, a: NonzeroQ(S(2)*a*f*q + S(3)*a*f - c*d)))
    rule339 = ReplacementRule(pattern339, lambda d, c, x, f, q, b, a : (S(2)*a*f*q + S(3)*a*f - c*d)*Int((d + f*x**S(2))**q, x)/(f*(S(2)*q + S(3))) + (d + f*x**S(2))**(q + S(1))*(b*f*(S(2)*q + S(3)) + S(2)*c*f*x*(q + S(1)))/(S(2)*f**S(2)*(q + S(1))*(S(2)*q + S(3))))
    rubi.add(rule339)

    pattern340 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule340 = ReplacementRule(pattern340, lambda e, d, c, x, p, f, q, b, a : (b + S(2)*c*x)*(a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q/((p + S(1))*(-S(4)*a*c + b**S(2))) - Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(b*e*q + S(2)*c*d*(S(2)*p + S(3)) + S(2)*c*f*x**S(2)*(S(2)*p + S(2)*q + S(3)) + x*(S(2)*b*f*q + S(2)*c*e*(S(2)*p + q + S(3))), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule340)

    pattern341 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule341 = ReplacementRule(pattern341, lambda d, c, x, p, f, q, b, a : (b + S(2)*c*x)*(d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))/((p + S(1))*(-S(4)*a*c + b**S(2))) - Int((d + f*x**S(2))**(q + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(S(2)*b*f*q*x + S(2)*c*d*(S(2)*p + S(3)) + S(2)*c*f*x**S(2)*(S(2)*p + S(2)*q + S(3)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule341)

    pattern342 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule342 = ReplacementRule(pattern342, lambda e, d, c, x, p, f, q, a : -x*(a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q/(S(2)*a*(p + S(1))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(S(2)*c*d*(S(2)*p + S(3)) + S(2)*c*e*x*(S(2)*p + q + S(3)) + S(2)*c*f*x**S(2)*(S(2)*p + S(2)*q + S(3)), x), x)/(S(4)*a*c*(p + S(1))))
    rubi.add(rule342)

    pattern343 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, b, a: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule343 = ReplacementRule(pattern343, lambda e, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(1))*(S(2)*a*c**S(2)*e + b**S(3)*f - b**S(2)*c*e + b*c*(-S(3)*a*f + c*d) + c*x*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)))/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))) - Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + S(2)*c*(p + S(1))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2)) - e*(p + q + S(2))*(-S(2)*a*c**S(2)*e - b**S(3)*f + b**S(2)*c*e - b*c*(-S(3)*a*f + c*d)) + x*(S(2)*f*(p + q + S(2))*(S(2)*a*c**S(2)*e + b**S(3)*f - b**S(2)*c*e + b*c*(-S(3)*a*f + c*d)) - (b*f*(p + S(1)) - c*e*(S(2)*p + q + S(4)))*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e))) - (a*f*(p + S(1)) - c*d*(p + S(2)))*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))))
    rubi.add(rule343)

    pattern344 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda d, c, f, b, a: NonzeroQ(b**S(2)*d*f + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule344 = ReplacementRule(pattern344, lambda d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(b**S(3)*f + b*c*(-S(3)*a*f + c*d) + c*x*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d))/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))) - Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*Simp(c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) + S(2)*c*(p + S(1))*(b**S(2)*d*f + (-a*f + c*d)**S(2)) + x*(-b*f*(p + S(1))*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) + S(2)*f*(b**S(3)*f + b*c*(-S(3)*a*f + c*d))*(p + q + S(2))) - (a*f*(p + S(1)) - c*d*(p + S(2)))*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))))
    rubi.add(rule344)

    pattern345 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, a: NonzeroQ(a*c*e**S(2) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule345 = ReplacementRule(pattern345, lambda e, d, c, x, p, f, q, a : -(a + c*x**S(2))**(p + S(1))*(S(2)*a*c**S(2)*e + c*x*(-S(2)*a*c*f + S(2)*c**S(2)*d))*(d + e*x + f*x**S(2))**(q + S(1))/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(S(2)*a*c**S(2)*e**S(2)*(p + q + S(2)) + c*f*x**S(2)*(-S(2)*a*c*f + S(2)*c**S(2)*d)*(S(2)*p + S(2)*q + S(5)) + S(2)*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2)) + x*(S(4)*a*c**S(2)*e*f*(p + q + S(2)) + c*e*(-S(2)*a*c*f + S(2)*c**S(2)*d)*(S(2)*p + q + S(4))) - (-S(2)*a*c*f + S(2)*c**S(2)*d)*(a*f*(p + S(1)) - c*d*(p + S(2))), x), x)/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))))
    rubi.add(rule345)

    pattern346 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda q, p: NonzeroQ(p + q)), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(1))))
    rule346 = ReplacementRule(pattern346, lambda e, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**(q + S(1))*(b*f*(S(3)*p + S(2)*q) - c*e*(S(2)*p + q) + S(2)*c*f*x*(p + q))/(S(2)*f**S(2)*(p + q)*(S(2)*p + S(2)*q + S(1))) - Int((a + b*x + c*x**S(2))**(p + S(-2))*(d + e*x + f*x**S(2))**q*Simp(x**S(2)*(c*(p + q)*(-c*(S(2)*d*f*(-S(2)*p + S(1)) + e**S(2)*(S(3)*p + q + S(-1))) + f*(-S(2)*a*f + b*e)*(S(4)*p + S(2)*q + S(-1))) + p*(-p + S(1))*(-b*f + c*e)**S(2)) + x*(S(2)*(-p + S(1))*(S(2)*p + q)*(-a*f + c*d)*(-b*f + c*e) - (p + q)*(b*(c*(S(2)*p + q)*(-S(4)*d*f + e**S(2)) + f*(S(2)*p + S(2)*q + S(1))*(S(2)*a*f - b*e + S(2)*c*d)) + e*f*(-p + S(1))*(-S(4)*a*c + b**S(2)))) + (-p + S(1))*(S(2)*p + q)*(-a*e + b*d)*(-b*f + c*e) - (p + q)*(-a*(c*(S(2)*d*f - e**S(2)*(S(2)*p + q)) + f*(-S(2)*a*f + b*e)*(S(2)*p + S(2)*q + S(1))) + b**S(2)*d*f*(-p + S(1))), x), x)/(S(2)*f**S(2)*(p + q)*(S(2)*p + S(2)*q + S(1))))
    rubi.add(rule346)

    pattern347 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda q, p: NonzeroQ(p + q)), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(1))))
    rule347 = ReplacementRule(pattern347, lambda d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(b*(S(3)*p + S(2)*q) + S(2)*c*x*(p + q))*(a + b*x + c*x**S(2))**(p + S(-1))/(S(2)*f*(p + q)*(S(2)*p + S(2)*q + S(1))) - Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(-2))*Simp(b**S(2)*d*(p + S(-1))*(S(2)*p + q) + x**S(2)*(b**S(2)*f*p*(-p + S(1)) + S(2)*c*(p + q)*(-a*f*(S(4)*p + S(2)*q + S(-1)) + c*d*(S(2)*p + S(-1)))) - x*(S(2)*b*(-p + S(1))*(S(2)*p + q)*(-a*f + c*d) - S(2)*b*(p + q)*(S(2)*c*d*(S(2)*p + q) - (a*f + c*d)*(S(2)*p + S(2)*q + S(1)))) - (p + q)*(-S(2)*a*(-a*f*(S(2)*p + S(2)*q + S(1)) + c*d) + b**S(2)*d*(-p + S(1))), x), x)/(S(2)*f*(p + q)*(S(2)*p + S(2)*q + S(1))))
    rubi.add(rule347)

    pattern348 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda q, p: NonzeroQ(p + q)), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(1))))
    rule348 = ReplacementRule(pattern348, lambda e, d, c, x, p, f, q, a : -c*(a + c*x**S(2))**(p + S(-1))*(e*(S(2)*p + q) - S(2)*f*x*(p + q))*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*f**S(2)*(p + q)*(S(2)*p + S(2)*q + S(1))) - Int((a + c*x**S(2))**(p + S(-2))*(d + e*x + f*x**S(2))**q*Simp(-a*c*e**S(2)*(-p + S(1))*(S(2)*p + q) + a*(p + q)*(-S(2)*a*f**S(2)*(S(2)*p + S(2)*q + S(1)) + c*(S(2)*d*f - e**S(2)*(S(2)*p + q))) + x**S(2)*(c**S(2)*e**S(2)*p*(-p + S(1)) - c*(p + q)*(S(2)*a*f**S(2)*(S(4)*p + S(2)*q + S(-1)) + c*(S(2)*d*f*(-S(2)*p + S(1)) + e**S(2)*(S(3)*p + q + S(-1))))) + x*(S(4)*a*c*e*f*(-p + S(1))*(p + q) + S(2)*c*e*(-p + S(1))*(S(2)*p + q)*(-a*f + c*d)), x), x)/(S(2)*f**S(2)*(p + q)*(S(2)*p + S(2)*q + S(1))))
    rubi.add(rule348)

    pattern349 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, b, f, q, e, x, d, a: NonzeroQ(q)))
    def With349(e, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - a*b*e*f - S(2)*a*c*d*f + a*c*e**S(2) + b**S(2)*d*f - b*c*d*e + c**S(2)*d**S(2)
        return Int((-a*c*f + b**S(2)*f - b*c*e + c**S(2)*d - x*(-b*c*f + c**S(2)*e))/(a + b*x + c*x**S(2)), x)/q + Int((a*f**S(2) - b*e*f - c*d*f + c*e**S(2) + x*(-b*f**S(2) + c*e*f))/(d + e*x + f*x**S(2)), x)/q
    rule349 = ReplacementRule(pattern349, lambda e, d, c, x, f, b, a : With349(e, d, c, x, f, b, a))
    rubi.add(rule349)

    pattern350 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('f', S(1)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, d, f, q, a: NonzeroQ(q)))
    def With350(d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - S(2)*a*c*d*f + b**S(2)*d*f + c**S(2)*d**S(2)
        return -Int((-a*f**S(2) + b*f**S(2)*x + c*d*f)/(d + f*x**S(2)), x)/q + Int((-a*c*f + b**S(2)*f + b*c*f*x + c**S(2)*d)/(a + b*x + c*x**S(2)), x)/q
    rule350 = ReplacementRule(pattern350, lambda d, c, x, f, b, a : With350(d, c, x, f, b, a))
    rubi.add(rule350)

    pattern351 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda b, c, e, f: ZeroQ(-b*f + c*e)))
    rule351 = ReplacementRule(pattern351, lambda e, d, c, x, f, b, a : -S(2)*e*Subst(Int(1/(e*(-S(4)*a*f + b*e) - x**S(2)*(-a*e + b*d)), x), x, (e + S(2)*f*x)/sqrt(d + e*x + f*x**S(2))))
    rubi.add(rule351)

    pattern352 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda b, c, e, f: NonzeroQ(-b*f + c*e)), CustomConstraint(lambda c, b, a: PosQ(-S(4)*a*c + b**S(2))), )
    def With352(e, d, c, x, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*c*Int(S(1)/((b + S(2)*c*x - q)*sqrt(d + e*x + f*x**S(2))), x)/q - S(2)*c*Int(S(1)/((b + S(2)*c*x + q)*sqrt(d + e*x + f*x**S(2))), x)/q
    rule352 = ReplacementRule(pattern352, lambda e, d, c, x, f, b, a : With352(e, d, c, x, f, b, a))
    rubi.add(rule352)

    pattern353 = Pattern(Integral(S(1)/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, a: PosQ(-a*c)))
    rule353 = ReplacementRule(pattern353, lambda e, d, c, x, f, a : Int(S(1)/((a - x*Rt(-a*c, S(2)))*sqrt(d + e*x + f*x**S(2))), x)/S(2) + Int(S(1)/((a + x*Rt(-a*c, S(2)))*sqrt(d + e*x + f*x**S(2))), x)/S(2))
    rubi.add(rule353)

    pattern354 = Pattern(Integral(S(1)/(sqrt(d_ + x_**S(2)*WC('f', S(1)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, a: PosQ(-S(4)*a*c + b**S(2))), )
    def With354(d, c, x, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*c*Int(S(1)/(sqrt(d + f*x**S(2))*(b + S(2)*c*x - q)), x)/q - S(2)*c*Int(S(1)/(sqrt(d + f*x**S(2))*(b + S(2)*c*x + q)), x)/q
    rule354 = ReplacementRule(pattern354, lambda d, c, x, f, b, a : With354(d, c, x, f, b, a))
    rubi.add(rule354)

    pattern355 = Pattern(Integral(S(1)/((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda b, c, e, f: NonzeroQ(-b*f + c*e)), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With355(e, d, c, x, f, b, a):
        q = Rt(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2), S(2))
        return -Int((-a*f + c*d - q + x*(-b*f + c*e))/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q) + Int((-a*f + c*d + q + x*(-b*f + c*e))/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q)
    rule355 = ReplacementRule(pattern355, lambda e, d, c, x, f, b, a : With355(e, d, c, x, f, b, a))
    rubi.add(rule355)

    pattern356 = Pattern(Integral(S(1)/((x_**S(2)*WC('c', S(1)) + WC('a', S(0)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, a: NegQ(-a*c)), )
    def With356(e, d, c, x, f, a):
        q = Rt(a*c*e**S(2) + (-a*f + c*d)**S(2), S(2))
        return -Int((-a*f + c*d + c*e*x - q)/((a + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q) + Int((-a*f + c*d + c*e*x + q)/((a + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q)
    rule356 = ReplacementRule(pattern356, lambda e, d, c, x, f, a : With356(e, d, c, x, f, a))
    rubi.add(rule356)

    pattern357 = Pattern(Integral(S(1)/(sqrt(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With357(d, c, x, f, b, a):
        q = Rt(b**S(2)*d*f + (-a*f + c*d)**S(2), S(2))
        return -Int((-a*f - b*f*x + c*d - q)/(sqrt(d + f*x**S(2))*(a + b*x + c*x**S(2))), x)/(S(2)*q) + Int((-a*f - b*f*x + c*d + q)/(sqrt(d + f*x**S(2))*(a + b*x + c*x**S(2))), x)/(S(2)*q)
    rule357 = ReplacementRule(pattern357, lambda d, c, x, f, b, a : With357(d, c, x, f, b, a))
    rubi.add(rule357)

    pattern358 = Pattern(Integral(sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))/(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))))
    rule358 = ReplacementRule(pattern358, lambda e, d, c, x, f, b, a : c*Int(1/sqrt(a + b*x + c*x**S(2)), x)/f - Int((-a*f + c*d + x*(-b*f + c*e))/(sqrt(a + b*x + c*x**S(2))*(d + e*x + f*x**S(2))), x)/f)
    rubi.add(rule358)

    pattern359 = Pattern(Integral(sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))/(d_ + x_**S(2)*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule359 = ReplacementRule(pattern359, lambda d, c, x, f, b, a : c*Int(1/sqrt(a + b*x + c*x**S(2)), x)/f - Int((-a*f - b*f*x + c*d)/((d + f*x**S(2))*sqrt(a + b*x + c*x**S(2))), x)/f)
    rubi.add(rule359)

    pattern360 = Pattern(Integral(sqrt(a_ + x_**S(2)*WC('c', S(1)))/(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))))
    rule360 = ReplacementRule(pattern360, lambda e, d, c, x, f, a : c*Int(1/sqrt(a + c*x**S(2)), x)/f - Int((-a*f + c*d + c*e*x)/(sqrt(a + c*x**S(2))*(d + e*x + f*x**S(2))), x)/f)
    rubi.add(rule360)

    pattern361 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), )
    def With361(e, d, c, x, f, b, a):
        r = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(2)*a + x*(b + r))*sqrt(b + S(2)*c*x + r)*Int(S(1)/(sqrt(S(2)*a + x*(b + r))*sqrt(b + S(2)*c*x + r)*sqrt(d + e*x + f*x**S(2))), x)/sqrt(a + b*x + c*x**S(2))
    rule361 = ReplacementRule(pattern361, lambda e, d, c, x, f, b, a : With361(e, d, c, x, f, b, a))
    rubi.add(rule361)

    pattern362 = Pattern(Integral(S(1)/(sqrt(d_ + x_**S(2)*WC('f', S(1)))*sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), )
    def With362(d, c, x, f, b, a):
        r = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(2)*a + x*(b + r))*sqrt(b + S(2)*c*x + r)*Int(S(1)/(sqrt(S(2)*a + x*(b + r))*sqrt(d + f*x**S(2))*sqrt(b + S(2)*c*x + r)), x)/sqrt(a + b*x + c*x**S(2))
    rule362 = ReplacementRule(pattern362, lambda d, c, x, f, b, a : With362(d, c, x, f, b, a))
    rubi.add(rule362)

    pattern363 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule363 = ReplacementRule(pattern363, lambda e, d, c, x, p, f, q, b, a : Int((a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule363)

    pattern364 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule364 = ReplacementRule(pattern364, lambda e, d, c, x, p, f, q, a : Int((a + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule364)

    pattern365 = Pattern(Integral((u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule365 = ReplacementRule(pattern365, lambda e, u, d, c, x, p, f, q, b, a : Subst(Int((a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule365)

    pattern366 = Pattern(Integral((u_**S(2)*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule366 = ReplacementRule(pattern366, lambda e, d, c, x, p, f, q, u, a : Subst(Int((a + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule366)

    pattern367 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, c, p: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda e, d, c, x, f, q, b, a: Not(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**S(2)), LeafCount(a + b*x + c*x**S(2)))))
    rule367 = ReplacementRule(pattern367, lambda g, e, h, d, c, x, m, p, f, q, b, a : (c/f)**p*Int((g + h*x)**m*(d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule367)

    pattern368 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda f, c: Not(PositiveQ(c/f))))
    rule368 = ReplacementRule(pattern368, lambda g, e, h, d, c, x, m, p, f, q, b, a : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*(d + e*x + f*x**S(2))**(-FracPart(p))*Int((g + h*x)**m*(d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule368)

    pattern369 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule369 = ReplacementRule(pattern369, lambda g, e, h, d, c, x, m, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b + S(2)*c*x)**(S(2)*p)*(g + h*x)**m*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule369)

    pattern370 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule370 = ReplacementRule(pattern370, lambda g, h, d, c, x, m, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b + S(2)*c*x)**(S(2)*p)*(d + f*x**S(2))**q*(g + h*x)**m, x))
    rubi.add(rule370)

    pattern371 = Pattern(Integral((g_ + x_*WC('h', S(1)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda g, h, c, b, a: ZeroQ(a*h**S(2) - b*g*h + c*g**S(2))), CustomConstraint(lambda g, e, h, d, c, f, a: ZeroQ(a**S(2)*f*h**S(2) - a*c*e*g*h + c**S(2)*d*g**S(2))), CustomConstraint(lambda m: IntegerQ(m)))
    rule371 = ReplacementRule(pattern371, lambda g, e, h, d, c, x, m, p, f, b, a : Int((f*h*x/c + d*g/a)**m*(a + b*x + c*x**S(2))**(m + p), x))
    rubi.add(rule371)

    pattern372 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, g, h, a: ZeroQ(a*h**S(2) + c*g**S(2))), CustomConstraint(lambda g, e, h, d, c, f, a: ZeroQ(a**S(2)*f*h**S(2) - a*c*e*g*h + c**S(2)*d*g**S(2))), CustomConstraint(lambda m: IntegerQ(m)))
    rule372 = ReplacementRule(pattern372, lambda g, e, h, d, c, x, m, p, f, a : Int((a + c*x**S(2))**(m + p)*(f*h*x/c + d*g/a)**m, x))
    rubi.add(rule372)

    pattern373 = Pattern(Integral((g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda g, h, c, b, a: ZeroQ(a*h**S(2) - b*g*h + c*g**S(2))), CustomConstraint(lambda g, h, d, c, f, a: ZeroQ(a**S(2)*f*h**S(2) + c**S(2)*d*g**S(2))), CustomConstraint(lambda m: IntegerQ(m)))
    rule373 = ReplacementRule(pattern373, lambda g, h, d, c, x, m, p, f, b, a : Int((f*h*x/c + d*g/a)**m*(a + b*x + c*x**S(2))**(m + p), x))
    rubi.add(rule373)

    pattern374 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, g, h, a: ZeroQ(a*h**S(2) + c*g**S(2))), CustomConstraint(lambda g, h, d, c, f, a: ZeroQ(a**S(2)*f*h**S(2) + c**S(2)*d*g**S(2))), CustomConstraint(lambda m: IntegerQ(m)))
    rule374 = ReplacementRule(pattern374, lambda g, h, d, c, x, m, p, f, a : Int((a + c*x**S(2))**(m + p)*(f*h*x/c + d*g/a)**m, x))
    rubi.add(rule374)

    pattern375 = Pattern(Integral(x_**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, c, f, b, a: ZeroQ(a*f**S(2) - b*e*f + c*e**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule375 = ReplacementRule(pattern375, lambda e, c, x, p, f, q, b, a : Int((a/e + c*x/f)**p*(e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule375)

    pattern376 = Pattern(Integral(x_**WC('p', S(1))*(a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, c, e, a: ZeroQ(a*f**S(2) + c*e**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule376 = ReplacementRule(pattern376, lambda e, c, x, p, f, q, a : Int((a/e + c*x/f)**p*(e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule376)

    pattern377 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda g, e, h, c, m, p, f, b: ZeroQ(b*f*h*(m + p + S(2)) + c*(-e*h*(m + S(2)*p + S(3)) + S(2)*f*g*(p + S(1))))), CustomConstraint(lambda g, h, d, c, m, p, f, b, a: ZeroQ(b*f*g*(p + S(1)) + h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule377 = ReplacementRule(pattern377, lambda g, e, h, d, c, x, m, p, f, b, a : f*(g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule377)

    pattern378 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda g, e, h, c, m, p, f: ZeroQ(c*(-e*h*(m + S(2)*p + S(3)) + S(2)*f*g*(p + S(1))))), CustomConstraint(lambda h, d, c, m, p, f, a: ZeroQ(h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule378 = ReplacementRule(pattern378, lambda g, e, h, d, c, x, m, p, f, a : f*(a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule378)

    pattern379 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda g, h, c, m, p, f, b: ZeroQ(b*f*h*(m + p + S(2)) + S(2)*c*f*g*(p + S(1)))), CustomConstraint(lambda g, h, d, c, m, p, f, b, a: ZeroQ(b*f*g*(p + S(1)) + h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule379 = ReplacementRule(pattern379, lambda g, h, d, c, x, m, p, f, b, a : f*(g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule379)

    pattern380 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule380 = ReplacementRule(pattern380, lambda g, e, h, d, c, x, m, p, f, b, a : Int(ExpandIntegrand((g + h*x)**m*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2)), x), x))
    rubi.add(rule380)

    pattern381 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule381 = ReplacementRule(pattern381, lambda g, e, h, d, c, x, m, p, f, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(g + h*x)**m*(d + e*x + f*x**S(2)), x), x))
    rubi.add(rule381)

    pattern382 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m, p: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule382 = ReplacementRule(pattern382, lambda g, h, d, c, x, m, p, f, b, a : Int(ExpandIntegrand((d + f*x**S(2))*(g + h*x)**m*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule382)

    pattern383 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda m, p: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule383 = ReplacementRule(pattern383, lambda g, h, d, c, x, m, p, f, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(d + f*x**S(2))*(g + h*x)**m, x), x))
    rubi.add(rule383)

    pattern384 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda g, h, c, b, a: NonzeroQ(a*h**S(2) - b*g*h + c*g**S(2))))
    rule384 = ReplacementRule(pattern384, lambda g, e, h, d, c, x, m, p, f, b, a : (g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(d*h**S(2) - e*g*h + f*g**S(2))/(h*(m + S(1))*(a*h**S(2) - b*g*h + c*g**S(2))) + Int((g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*Simp(-b*(f*g**S(2)*(p + S(1)) - h*(-d*h*(m + p + S(2)) + e*g*(p + S(1)))) + h*(m + S(1))*(a*e*h - a*f*g + c*d*g) - x*(c*(S(2)*f*g**S(2)*(p + S(1)) - h*(-d*h + e*g)*(m + S(2)*p + S(3))) + f*h*(m + S(1))*(-a*h + b*g)), x), x)/(h*(m + S(1))*(a*h**S(2) - b*g*h + c*g**S(2))))
    rubi.add(rule384)

    pattern385 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda c, g, h, a: NonzeroQ(a*h**S(2) + c*g**S(2))))
    rule385 = ReplacementRule(pattern385, lambda g, e, h, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))*(d*h**S(2) - e*g*h + f*g**S(2))/(h*(m + S(1))*(a*h**S(2) + c*g**S(2))) + Int((a + c*x**S(2))**p*(g + h*x)**(m + S(1))*Simp(h*(m + S(1))*(a*e*h - a*f*g + c*d*g) + x*(a*f*h**S(2)*(m + S(1)) - c*(S(2)*f*g**S(2)*(p + S(1)) - h*(-d*h + e*g)*(m + S(2)*p + S(3)))), x), x)/(h*(m + S(1))*(a*h**S(2) + c*g**S(2))))
    rubi.add(rule385)

    pattern386 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda g, h, c, b, a: NonzeroQ(a*h**S(2) - b*g*h + c*g**S(2))))
    rule386 = ReplacementRule(pattern386, lambda g, h, d, c, x, m, p, f, b, a : (g + h*x)**(m + S(1))*(d*h**S(2) + f*g**S(2))*(a + b*x + c*x**S(2))**(p + S(1))/(h*(m + S(1))*(a*h**S(2) - b*g*h + c*g**S(2))) + Int((g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**p*Simp(-b*(d*h**S(2)*(m + p + S(2)) + f*g**S(2)*(p + S(1))) + h*(m + S(1))*(-a*f*g + c*d*g) - x*(c*(d*h**S(2)*(m + S(2)*p + S(3)) + S(2)*f*g**S(2)*(p + S(1))) + f*h*(m + S(1))*(-a*h + b*g)), x), x)/(h*(m + S(1))*(a*h**S(2) - b*g*h + c*g**S(2))))
    rubi.add(rule386)

    pattern387 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**m_*(x_**S(2)*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda c, g, h, a: NonzeroQ(a*h**S(2) + c*g**S(2))))
    rule387 = ReplacementRule(pattern387, lambda g, h, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))*(d*h**S(2) + f*g**S(2))/(h*(m + S(1))*(a*h**S(2) + c*g**S(2))) + Int((a + c*x**S(2))**p*(g + h*x)**(m + S(1))*Simp(h*(m + S(1))*(-a*f*g + c*d*g) + x*(a*f*h**S(2)*(m + S(1)) - c*(d*h**S(2)*(m + S(2)*p + S(3)) + S(2)*f*g**S(2)*(p + S(1)))), x), x)/(h*(m + S(1))*(a*h**S(2) + c*g**S(2))))
    rubi.add(rule387)

    pattern388 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))/((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda g, h, c, b, a: NonzeroQ(a*h**S(2) - b*g*h + c*g**S(2))))
    rule388 = ReplacementRule(pattern388, lambda g, e, h, d, c, x, f, b, a : (d*h**S(2) - e*g*h + f*g**S(2))*Int(S(1)/((g + h*x)*sqrt(a + b*x + c*x**S(2))), x)/(a*h**S(2) - b*g*h + c*g**S(2)) + Int((a*e*h - a*f*g - b*d*h + c*d*g + x*(a*f*h - b*f*g - c*d*h + c*e*g))/(a + b*x + c*x**S(2))**(S(3)/2), x)/(a*h**S(2) - b*g*h + c*g**S(2)))
    rubi.add(rule388)

    pattern389 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))**(S(3)/2)*(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, g, h, a: NonzeroQ(a*h**S(2) + c*g**S(2))))
    rule389 = ReplacementRule(pattern389, lambda g, e, h, d, c, x, f, a : (d*h**S(2) - e*g*h + f*g**S(2))*Int(S(1)/(sqrt(a + c*x**S(2))*(g + h*x)), x)/(a*h**S(2) + c*g**S(2)) + Int((a*e*h - a*f*g + c*d*g + x*(a*f*h - c*d*h + c*e*g))/(a + c*x**S(2))**(S(3)/2), x)/(a*h**S(2) + c*g**S(2)))
    rubi.add(rule389)

    pattern390 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + WC('d', S(0)))/((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda g, h, c, b, a: NonzeroQ(a*h**S(2) - b*g*h + c*g**S(2))))
    rule390 = ReplacementRule(pattern390, lambda g, h, d, c, x, f, b, a : (d*h**S(2) + f*g**S(2))*Int(S(1)/((g + h*x)*sqrt(a + b*x + c*x**S(2))), x)/(a*h**S(2) - b*g*h + c*g**S(2)) + Int((-a*f*g - b*d*h + c*d*g - x*(-a*f*h + b*f*g + c*d*h))/(a + b*x + c*x**S(2))**(S(3)/2), x)/(a*h**S(2) - b*g*h + c*g**S(2)))
    rubi.add(rule390)

    pattern391 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + WC('d', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))**(S(3)/2)*(g_ + x_*WC('h', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, g, h, a: NonzeroQ(a*h**S(2) + c*g**S(2))))
    rule391 = ReplacementRule(pattern391, lambda g, h, d, c, x, f, a : (d*h**S(2) + f*g**S(2))*Int(S(1)/(sqrt(a + c*x**S(2))*(g + h*x)), x)/(a*h**S(2) + c*g**S(2)) + Int((-a*f*g + c*d*g - x*(-a*f*h + c*d*h))/(a + c*x**S(2))**(S(3)/2), x)/(a*h**S(2) + c*g**S(2)))
    rubi.add(rule391)

    pattern392 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))))
    rule392 = ReplacementRule(pattern392, lambda g, e, h, d, c, x, m, p, f, b, a : (g + h*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*(a*b*f - S(2)*a*c*e + b*c*d + x*(c*(-b*e + S(2)*c*d) + f*(-S(2)*a*c + b**S(2))))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((g + h*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(g*(c*(S(2)*p + S(3))*(-b*e + S(2)*c*d) - f*(S(2)*a*c - b**S(2)*(p + S(2)))) + h*m*(a*b*f - S(2)*a*c*e + b*c*d) + h*x*(c*(-b*e + S(2)*c*d)*(m + S(2)*p + S(3)) - f*(S(2)*a*c*(m + S(1)) - b**S(2)*(m + p + S(2)))), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule392)

    pattern393 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))))
    rule393 = ReplacementRule(pattern393, lambda g, e, h, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(g + h*x)**m*(a*e - x*(-a*f + c*d))/(S(2)*a*c*(p + S(1))) - Int((a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(-1))*Simp(a*(e*h*m + f*g) - c*d*g*(S(2)*p + S(3)) + h*x*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule393)

    pattern394 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))))
    rule394 = ReplacementRule(pattern394, lambda g, h, d, c, x, m, p, f, b, a : (g + h*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*(a*b*f + b*c*d + x*(S(2)*c**S(2)*d + f*(-S(2)*a*c + b**S(2))))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((g + h*x)**(m + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(g*(S(2)*c**S(2)*d*(S(2)*p + S(3)) - f*(S(2)*a*c - b**S(2)*(p + S(2)))) + h*m*(a*b*f + b*c*d) + h*x*(S(2)*c**S(2)*d*(m + S(2)*p + S(3)) - f*(S(2)*a*c*(m + S(1)) - b**S(2)*(m + p + S(2)))), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule394)

    pattern395 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(g_ + x_*WC('h', S(1)))**m_*(x_**S(2)*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))))
    rule395 = ReplacementRule(pattern395, lambda g, h, d, c, x, m, p, f, a : x*(a + c*x**S(2))**(p + S(1))*(g + h*x)**m*(a*f - c*d)/(S(2)*a*c*(p + S(1))) - Int((a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(-1))*Simp(a*f*g - c*d*g*(S(2)*p + S(3)) + h*x*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule395)

    pattern396 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda g, h, c, b, a: NonzeroQ(c*g**S(2) - h*(-a*h + b*g))))
    rule396 = ReplacementRule(pattern396, lambda g, e, h, d, c, x, m, p, f, b, a : (g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(x*(b*f*(-a*h + b*g) + S(2)*c**S(2)*d*g - c*(-S(2)*a*e*h + S(2)*a*f*g + b*d*h + b*e*g)) + (-a*e + b*d)*(-b*h + S(2)*c*g) - (-a*f + c*d)*(-S(2)*a*h + b*g))/((p + S(1))*(-S(4)*a*c + b**S(2))*(c*g**S(2) - h*(-a*h + b*g))) - Int((g + h*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*Simp(g*(p + S(2))*(-S(2)*a*(-c*e*h + c*f*g) + b**S(2)*f*g - b*(a*f*h + c*d*h + c*e*g) + S(2)*c**S(2)*d*g) + h*x*(m + S(2)*p + S(4))*(-S(2)*a*(-c*e*h + c*f*g) + b**S(2)*f*g - b*(a*f*h + c*d*h + c*e*g) + S(2)*c**S(2)*d*g) - h*(-(-a*e + b*d)*(-b*h + S(2)*c*g) + (-a*f + c*d)*(-S(2)*a*h + b*g))*(m + p + S(2)) + (p + S(1))*(c*g**S(2) - h*(-a*h + b*g))*(S(2)*a*f - b*e + S(2)*c*d), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(c*g**S(2) - h*(-a*h + b*g))))
    rubi.add(rule396)

    pattern397 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda c, g, h, a: NonzeroQ(a*h**S(2) + c*g**S(2))))
    rule397 = ReplacementRule(pattern397, lambda g, e, h, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))*(a*c*e*g - a*h*(-a*f + c*d) - c*x*(a*e*h - a*f*g + c*d*g))/(S(2)*a*c*(p + S(1))*(a*h**S(2) + c*g**S(2))) + Int((a + c*x**S(2))**(p + S(1))*(g + h*x)**m*Simp(g*(p + S(2))*(-a*(-c*e*h + c*f*g) + c**S(2)*d*g) + h*x*(-a*(-c*e*h + c*f*g) + c**S(2)*d*g)*(m + S(2)*p + S(4)) - h*(a*c*e*g - a*h*(-a*f + c*d))*(m + p + S(2)) + (p + S(1))*(a*f + c*d)*(a*h**S(2) + c*g**S(2)), x), x)/(S(2)*a*c*(p + S(1))*(a*h**S(2) + c*g**S(2))))
    rubi.add(rule397)

    pattern398 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda g, h, c, b, a: NonzeroQ(c*g**S(2) - h*(-a*h + b*g))))
    rule398 = ReplacementRule(pattern398, lambda g, h, d, c, x, m, p, f, b, a : (g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(b*d*(-b*h + S(2)*c*g) + x*(b*f*(-a*h + b*g) + S(2)*c**S(2)*d*g - c*(S(2)*a*f*g + b*d*h)) - (-a*f + c*d)*(-S(2)*a*h + b*g))/((p + S(1))*(-S(4)*a*c + b**S(2))*(c*g**S(2) - h*(-a*h + b*g))) - Int((g + h*x)**m*(a + b*x + c*x**S(2))**(p + S(1))*Simp(g*(p + S(2))*(-S(2)*a*c*f*g + b**S(2)*f*g - b*(a*f*h + c*d*h) + S(2)*c**S(2)*d*g) + h*x*(m + S(2)*p + S(4))*(-S(2)*a*c*f*g + b**S(2)*f*g - b*(a*f*h + c*d*h) + S(2)*c**S(2)*d*g) - h*(-b*d*(-b*h + S(2)*c*g) + (-a*f + c*d)*(-S(2)*a*h + b*g))*(m + p + S(2)) + S(2)*(p + S(1))*(a*f + c*d)*(c*g**S(2) - h*(-a*h + b*g)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(c*g**S(2) - h*(-a*h + b*g))))
    rubi.add(rule398)

    pattern399 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**p_*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda c, g, h, a: NonzeroQ(a*h**S(2) + c*g**S(2))))
    rule399 = ReplacementRule(pattern399, lambda g, h, d, c, x, m, p, f, a : (a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))*(-a*h*(-a*f + c*d) - c*x*(-a*f*g + c*d*g))/(S(2)*a*c*(p + S(1))*(a*h**S(2) + c*g**S(2))) + Int((a + c*x**S(2))**(p + S(1))*(g + h*x)**m*Simp(a*h**S(2)*(-a*f + c*d)*(m + p + S(2)) + g*(p + S(2))*(-a*c*f*g + c**S(2)*d*g) + h*x*(-a*c*f*g + c**S(2)*d*g)*(m + S(2)*p + S(4)) + (p + S(1))*(a*f + c*d)*(a*h**S(2) + c*g**S(2)), x), x)/(S(2)*a*c*(p + S(1))*(a*h**S(2) + c*g**S(2))))
    rubi.add(rule399)

    pattern400 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule400 = ReplacementRule(pattern400, lambda g, e, h, d, c, x, m, p, f, b, a : f*Int((g + h*x)**(m + S(2))*(a + b*x + c*x**S(2))**p, x)/h**S(2) - Int((g + h*x)**m*(a + b*x + c*x**S(2))**p*(-d*h**S(2) + f*g**S(2) + h*x*(-e*h + S(2)*f*g)), x)/h**S(2))
    rubi.add(rule400)

    pattern401 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule401 = ReplacementRule(pattern401, lambda g, e, h, d, c, x, m, p, f, a : f*Int((a + c*x**S(2))**p*(g + h*x)**(m + S(2)), x)/h**S(2) - Int((a + c*x**S(2))**p*(g + h*x)**m*(-d*h**S(2) + f*g**S(2) + h*x*(-e*h + S(2)*f*g)), x)/h**S(2))
    rubi.add(rule401)

    pattern402 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule402 = ReplacementRule(pattern402, lambda g, h, d, c, x, m, p, f, b, a : f*Int((g + h*x)**(m + S(2))*(a + b*x + c*x**S(2))**p, x)/h**S(2) - Int((g + h*x)**m*(a + b*x + c*x**S(2))**p*(-d*h**S(2) + f*g**S(2) + S(2)*f*g*h*x), x)/h**S(2))
    rubi.add(rule402)

    pattern403 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, p: ZeroQ(m + S(2)*p + S(3))))
    rule403 = ReplacementRule(pattern403, lambda g, h, d, c, x, m, p, f, a : f*Int((a + c*x**S(2))**p*(g + h*x)**(m + S(2)), x)/h**S(2) - Int((a + c*x**S(2))**p*(g + h*x)**m*(-d*h**S(2) + f*g**S(2) + S(2)*f*g*h*x), x)/h**S(2))
    rubi.add(rule403)

    pattern404 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule404 = ReplacementRule(pattern404, lambda g, e, h, d, c, x, m, p, f, b, a : f*(g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*h*(m + S(2)*p + S(3))) - Int((g + h*x)**m*(a + b*x + c*x**S(2))**p*Simp(b*f*g*(p + S(1)) + h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))) + x*(b*f*h*(m + p + S(2)) + c*(-e*h*(m + S(2)*p + S(3)) + S(2)*f*g*(p + S(1)))), x), x)/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule404)

    pattern405 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule405 = ReplacementRule(pattern405, lambda g, e, h, d, c, x, m, p, f, a : f*(a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))/(c*h*(m + S(2)*p + S(3))) - Int((a + c*x**S(2))**p*(g + h*x)**m*Simp(c*x*(-e*h*(m + S(2)*p + S(3)) + S(2)*f*g*(p + S(1))) + h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))), x), x)/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule405)

    pattern406 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule406 = ReplacementRule(pattern406, lambda g, h, d, c, x, m, p, f, b, a : f*(g + h*x)**(m + S(1))*(a + b*x + c*x**S(2))**(p + S(1))/(c*h*(m + S(2)*p + S(3))) - Int((g + h*x)**m*(a + b*x + c*x**S(2))**p*Simp(b*f*g*(p + S(1)) + f*x*(b*h*(m + p + S(2)) + S(2)*c*g*(p + S(1))) + h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))), x), x)/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule406)

    pattern407 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)))*(g_ + x_*WC('h', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, p: NonzeroQ(m + S(2)*p + S(3))))
    rule407 = ReplacementRule(pattern407, lambda g, h, d, c, x, m, p, f, a : f*(a + c*x**S(2))**(p + S(1))*(g + h*x)**(m + S(1))/(c*h*(m + S(2)*p + S(3))) - Int((a + c*x**S(2))**p*(g + h*x)**m*Simp(S(2)*c*f*g*x*(p + S(1)) + h*(a*f*(m + S(1)) - c*d*(m + S(2)*p + S(3))), x), x)/(c*h*(m + S(2)*p + S(3))))
    rubi.add(rule407)

    pattern408 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule408 = ReplacementRule(pattern408, lambda g, e, h, d, c, x, p, f, q, b, a : Int(ExpandIntegrand((g + h*x)*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule408)

    pattern409 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p, S(0)) | Greater(q, S(0))))
    rule409 = ReplacementRule(pattern409, lambda g, e, h, d, c, x, p, f, q, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(g + h*x)*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule409)

    pattern410 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule410 = ReplacementRule(pattern410, lambda g, e, h, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*(-S(2)*a*h + b*g - x*(b*h - S(2)*c*g))/((p + S(1))*(-S(4)*a*c + b**S(2))) - Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(-d*(S(2)*p + S(3))*(b*h - S(2)*c*g) + e*q*(-S(2)*a*h + b*g) - f*x**S(2)*(b*h - S(2)*c*g)*(S(2)*p + S(2)*q + S(3)) + x*(-e*(b*h - S(2)*c*g)*(S(2)*p + q + S(3)) + S(2)*f*q*(-S(2)*a*h + b*g)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule410)

    pattern411 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule411 = ReplacementRule(pattern411, lambda g, e, h, d, c, x, p, f, q, a : (a + c*x**S(2))**(p + S(1))*(a*h - c*g*x)*(d + e*x + f*x**S(2))**q/(S(2)*a*c*(p + S(1))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(-a*e*h*q + c*d*g*(S(2)*p + S(3)) + c*f*g*x**S(2)*(S(2)*p + S(2)*q + S(3)) + x*(-S(2)*a*f*h*q + c*e*g*(S(2)*p + q + S(3))), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule411)

    pattern412 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule412 = ReplacementRule(pattern412, lambda g, h, d, c, x, p, f, q, b, a : (d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*(-S(2)*a*h + b*g - x*(b*h - S(2)*c*g))/((p + S(1))*(-S(4)*a*c + b**S(2))) - Int((d + f*x**S(2))**(q + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-d*(S(2)*p + S(3))*(b*h - S(2)*c*g) + S(2)*f*q*x*(-S(2)*a*h + b*g) - f*x**S(2)*(b*h - S(2)*c*g)*(S(2)*p + S(2)*q + S(3)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule412)

    pattern413 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, b, a: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule413 = ReplacementRule(pattern413, lambda g, e, h, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(1))*(c*g*(S(2)*a*c*e - b*(a*f + c*d)) + c*x*(g*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) - h*(a*b*f - S(2)*a*c*e + b*c*d)) + (-a*h + b*g)*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)))/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))) + Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(-c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(S(2)*a*c*e*h + b**S(2)*f*g - b*(a*f*h + c*d*h + c*e*g) + S(2)*c*g*(-a*f + c*d)) - e*(c*g*(S(2)*a*c*e - b*(a*f + c*d)) + (-a*h + b*g)*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)))*(p + q + S(2)) - x*(S(2)*f*(c*g*(S(2)*a*c*e - b*(a*f + c*d)) + (-a*h + b*g)*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)))*(p + q + S(2)) - (b*f*(p + S(1)) - c*e*(S(2)*p + q + S(4)))*(S(2)*a*c*e*h + b**S(2)*f*g - b*(a*f*h + c*d*h + c*e*g) + S(2)*c*g*(-a*f + c*d))) + (p + S(1))*(b*h - S(2)*c*g)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2)) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(S(2)*a*c*e*h + b**S(2)*f*g - b*(a*f*h + c*d*h + c*e*g) + S(2)*c*g*(-a*f + c*d)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))))
    rubi.add(rule413)

    pattern414 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, a: NonzeroQ(a*c*e**S(2) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule414 = ReplacementRule(pattern414, lambda g, e, h, d, c, x, p, f, q, a : -(a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(1))*(S(2)*a*c**S(2)*e*g - a*h*(-S(2)*a*c*f + S(2)*c**S(2)*d) + c*x*(S(2)*a*c*e*h + g*(-S(2)*a*c*f + S(2)*c**S(2)*d)))/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))) - Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(-c*f*x**S(2)*(S(2)*a*c*e*h + S(2)*c*g*(-a*f + c*d))*(S(2)*p + S(2)*q + S(5)) - S(2)*c*g*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2)) - e*(S(2)*a*c**S(2)*e*g - a*h*(-S(2)*a*c*f + S(2)*c**S(2)*d))*(p + q + S(2)) - x*(c*e*(S(2)*a*c*e*h + S(2)*c*g*(-a*f + c*d))*(S(2)*p + q + S(4)) + S(2)*f*(S(2)*a*c**S(2)*e*g - a*h*(-S(2)*a*c*f + S(2)*c**S(2)*d))*(p + q + S(2))) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(S(2)*a*c*e*h + S(2)*c*g*(-a*f + c*d)), x), x)/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))))
    rubi.add(rule414)

    pattern415 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda d, c, f, b, a: NonzeroQ(b**S(2)*d*f + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule415 = ReplacementRule(pattern415, lambda g, h, d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(-b*c*g*(a*f + c*d) + c*x*(g*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) - h*(a*b*f + b*c*d)) + (-a*h + b*g)*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d))/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))) + Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(b**S(2)*f*g - b*(a*f*h + c*d*h) + S(2)*c*g*(-a*f + c*d)) - x*(-b*f*(p + S(1))*(b**S(2)*f*g - b*(a*f*h + c*d*h) + S(2)*c*g*(-a*f + c*d)) + S(2)*f*(-b*c*g*(a*f + c*d) + (-a*h + b*g)*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d))*(p + q + S(2))) + (p + S(1))*(b*h - S(2)*c*g)*(b**S(2)*d*f + (-a*f + c*d)**S(2)) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(b**S(2)*f*g - b*(a*f*h + c*d*h) + S(2)*c*g*(-a*f + c*d)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))))
    rubi.add(rule415)

    pattern416 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))))
    rule416 = ReplacementRule(pattern416, lambda g, e, h, d, c, x, p, f, q, b, a : h*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*f*(p + q + S(1))) - Int((a + b*x + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**q*Simp(a*(e*h - S(2)*f*g)*(p + q + S(1)) + h*p*(-a*e + b*d) + x**S(2)*(c*(e*h - S(2)*f*g)*(p + q + S(1)) + h*p*(-b*f + c*e)) + x*(b*(e*h - S(2)*f*g)*(p + q + S(1)) + S(2)*h*p*(-a*f + c*d)), x), x)/(S(2)*f*(p + q + S(1))))
    rubi.add(rule416)

    pattern417 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))))
    rule417 = ReplacementRule(pattern417, lambda g, e, h, d, c, x, p, f, q, a : h*(a + c*x**S(2))**p*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*f*(p + q + S(1))) + Int((a + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**q*Simp(a*e*h*p - a*(e*h - S(2)*f*g)*(p + q + S(1)) - S(2)*h*p*x*(-a*f + c*d) - x**S(2)*(c*e*h*p + c*(e*h - S(2)*f*g)*(p + q + S(1))), x), x)/(S(2)*f*(p + q + S(1))))
    rubi.add(rule417)

    pattern418 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))))
    rule418 = ReplacementRule(pattern418, lambda g, h, d, c, x, p, f, q, b, a : h*(d + f*x**S(2))**(q + S(1))*(a + b*x + c*x**S(2))**p/(S(2)*f*(p + q + S(1))) - Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(-S(2)*a*f*g*(p + q + S(1)) + b*d*h*p + x**S(2)*(-b*f*h*p - S(2)*c*f*g*(p + q + S(1))) + x*(-S(2)*b*f*g*(p + q + S(1)) + S(2)*h*p*(-a*f + c*d)), x), x)/(S(2)*f*(p + q + S(1))))
    rubi.add(rule418)

    pattern419 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, h, b, f, g, q, e, x, d, a: NonzeroQ(q)))
    def With419(g, e, h, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - a*b*e*f - S(2)*a*c*d*f + a*c*e**S(2) + b**S(2)*d*f - b*c*d*e + c**S(2)*d**S(2)
        return Int(Simp(-a*b*f*h + a*c*e*h - a*c*f*g + b**S(2)*f*g - b*c*e*g + c**S(2)*d*g + c*x*(-a*f*h + b*f*g + c*d*h - c*e*g), x)/(a + b*x + c*x**S(2)), x)/q + Int(Simp(a*f**S(2)*g + b*d*f*h - b*e*f*g - c*d*e*h - c*d*f*g + c*e**S(2)*g - f*x*(-a*f*h + b*f*g + c*d*h - c*e*g), x)/(d + e*x + f*x**S(2)), x)/q
    rule419 = ReplacementRule(pattern419, lambda g, e, h, d, c, x, f, b, a : With419(g, e, h, d, c, x, f, b, a))
    rubi.add(rule419)

    pattern420 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((d_ + x_**S(2)*WC('f', S(1)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, h, b, f, g, q, x, d, a: NonzeroQ(q)))
    def With420(g, h, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - S(2)*a*c*d*f + b**S(2)*d*f + c**S(2)*d**S(2)
        return Int(Simp(a*f**S(2)*g + b*d*f*h - c*d*f*g - f*x*(-a*f*h + b*f*g + c*d*h), x)/(d + f*x**S(2)), x)/q + Int(Simp(-a*b*f*h - a*c*f*g + b**S(2)*f*g + c**S(2)*d*g + c*x*(-a*f*h + b*f*g + c*d*h), x)/(a + b*x + c*x**S(2)), x)/q
    rule420 = ReplacementRule(pattern420, lambda g, h, d, c, x, f, b, a : With420(g, h, d, c, x, f, b, a))
    rubi.add(rule420)

    pattern421 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, a: PositiveQ(a*c)))
    rule421 = ReplacementRule(pattern421, lambda g, h, d, c, x, f, a : g*Int(S(1)/((a + c*x**S(2))*sqrt(d + f*x**S(2))), x) + h*Int(x/((a + c*x**S(2))*sqrt(d + f*x**S(2))), x))
    rubi.add(rule421)

    pattern422 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, a: Not(PositiveQ(a*c))), )
    def With422(g, h, d, c, x, f, a):
        q = Rt(-a*c, S(2))
        return (-c*g - h*q)*Int(S(1)/(sqrt(d + f*x**S(2))*(-c*x + q)), x)/(S(2)*q) - (c*g - h*q)*Int(S(1)/(sqrt(d + f*x**S(2))*(c*x + q)), x)/(S(2)*q)
    rule422 = ReplacementRule(pattern422, lambda g, h, d, c, x, f, a : With422(g, h, d, c, x, f, a))
    rubi.add(rule422)

    pattern423 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda b, c, e, f: ZeroQ(-b*f + c*e)), CustomConstraint(lambda f, g, e, h: ZeroQ(e*h - S(2)*f*g)))
    rule423 = ReplacementRule(pattern423, lambda g, e, h, d, c, x, f, b, a : -S(2)*g*Subst(Int(1/(-a*e + b*d - b*x**S(2)), x), x, sqrt(d + e*x + f*x**S(2))))
    rubi.add(rule423)

    pattern424 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda b, c, e, f: ZeroQ(-b*f + c*e)), CustomConstraint(lambda f, g, e, h: NonzeroQ(e*h - S(2)*f*g)))
    rule424 = ReplacementRule(pattern424, lambda g, e, h, d, c, x, f, b, a : h*Int((e + S(2)*f*x)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*f) + (-e*h + S(2)*f*g)*Int(S(1)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*f))
    rubi.add(rule424)

    pattern425 = Pattern(Integral(x_/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)))
    rule425 = ReplacementRule(pattern425, lambda e, d, c, x, f, b, a : -S(2)*e*Subst(Int((-d*x**S(2) + S(1))/(-b*f + c*e + d**S(2)*x**S(4)*(-b*f + c*e) - e*x**S(2)*(S(2)*a*f - b*e + S(2)*c*d)), x), x, (S(1) + x*(e + sqrt(-S(4)*d*f + e**S(2)))/(S(2)*d))/sqrt(d + e*x + f*x**S(2))))
    rubi.add(rule425)

    pattern426 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda d, g, e, h: ZeroQ(S(2)*d*h - e*g)))
    rule426 = ReplacementRule(pattern426, lambda g, e, h, d, c, x, f, b, a : g*Subst(Int(1/(a + x**S(2)*(-a*f + c*d)), x), x, x/sqrt(d + e*x + f*x**S(2))))
    rubi.add(rule426)

    pattern427 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda d, g, e, h: NonzeroQ(S(2)*d*h - e*g)))
    rule427 = ReplacementRule(pattern427, lambda g, e, h, d, c, x, f, b, a : h*Int((S(2)*d + e*x)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/e + (-S(2)*d*h + e*g)*Int(S(1)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/e)
    rubi.add(rule427)

    pattern428 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda d, e, b, a: NonzeroQ(-a*e + b*d)), CustomConstraint(lambda g, e, h, d, c, f, b, a: ZeroQ(g**S(2)*(-b*f + c*e) - S(2)*g*h*(-a*f + c*d) + h**S(2)*(-a*e + b*d))))
    rule428 = ReplacementRule(pattern428, lambda g, e, h, d, c, x, f, b, a : -S(2)*g*(-S(2)*a*h + b*g)*Subst(Int(1/Simp(g*(-S(4)*a*c + b**S(2))*(-S(2)*a*h + b*g) - x**S(2)*(-a*e + b*d), x), x), x, Simp(-S(2)*a*h + b*g - x*(b*h - S(2)*c*g), x)/sqrt(d + e*x + f*x**S(2))))
    rubi.add(rule428)

    pattern429 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda g, e, h, d, c, f, a: ZeroQ(a*e*h**S(2) - c*e*g**S(2) + S(2)*g*h*(-a*f + c*d))))
    rule429 = ReplacementRule(pattern429, lambda g, e, h, d, c, x, f, a : -S(2)*a*g*h*Subst(Int(1/Simp(S(2)*a**S(2)*c*g*h + a*e*x**S(2), x), x), x, Simp(a*h - c*g*x, x)/sqrt(d + e*x + f*x**S(2))))
    rubi.add(rule429)

    pattern430 = Pattern(Integral((g_ + x_*WC('h', S(1)))/(sqrt(d_ + x_**S(2)*WC('f', S(1)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda g, h, d, c, f, b, a: ZeroQ(b*d*h**S(2) - b*f*g**S(2) - S(2)*g*h*(-a*f + c*d))))
    rule430 = ReplacementRule(pattern430, lambda g, h, d, c, x, f, b, a : -S(2)*g*(-S(2)*a*h + b*g)*Subst(Int(1/Simp(-b*d*x**S(2) + g*(-S(4)*a*c + b**S(2))*(-S(2)*a*h + b*g), x), x), x, Simp(-S(2)*a*h + b*g - x*(b*h - S(2)*c*g), x)/sqrt(d + f*x**S(2))))
    rubi.add(rule430)

    pattern431 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, b, a: PosQ(-S(4)*a*c + b**S(2))), )
    def With431(g, e, h, d, c, x, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (S(2)*c*g - h*(b - q))*Int(S(1)/((b + S(2)*c*x - q)*sqrt(d + e*x + f*x**S(2))), x)/q - (S(2)*c*g - h*(b + q))*Int(S(1)/((b + S(2)*c*x + q)*sqrt(d + e*x + f*x**S(2))), x)/q
    rule431 = ReplacementRule(pattern431, lambda g, e, h, d, c, x, f, b, a : With431(g, e, h, d, c, x, f, b, a))
    rubi.add(rule431)

    pattern432 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, a: PosQ(-a*c)), )
    def With432(g, e, h, d, c, x, f, a):
        q = Rt(-a*c, S(2))
        return (-c*g/(S(2)*q) + h/S(2))*Int(S(1)/((c*x + q)*sqrt(d + e*x + f*x**S(2))), x) + (c*g/(S(2)*q) + h/S(2))*Int(S(1)/((c*x - q)*sqrt(d + e*x + f*x**S(2))), x)
    rule432 = ReplacementRule(pattern432, lambda g, e, h, d, c, x, f, a : With432(g, e, h, d, c, x, f, a))
    rubi.add(rule432)

    pattern433 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(d_ + x_**S(2)*WC('f', S(1)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, a: PosQ(-S(4)*a*c + b**S(2))), )
    def With433(g, h, d, c, x, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (S(2)*c*g - h*(b - q))*Int(S(1)/(sqrt(d + f*x**S(2))*(b + S(2)*c*x - q)), x)/q - (S(2)*c*g - h*(b + q))*Int(S(1)/(sqrt(d + f*x**S(2))*(b + S(2)*c*x + q)), x)/q
    rule433 = ReplacementRule(pattern433, lambda g, h, d, c, x, f, b, a : With433(g, h, d, c, x, f, b, a))
    rubi.add(rule433)

    pattern434 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda d, e, b, a: NonzeroQ(-a*e + b*d)), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With434(g, e, h, d, c, x, f, b, a):
        q = Rt(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2), S(2))
        return Int(Simp(-g*(-a*f + c*d - q) + h*(-a*e + b*d) - x*(g*(-b*f + c*e) - h*(-a*f + c*d + q)), x)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q) - Int(Simp(-g*(-a*f + c*d + q) + h*(-a*e + b*d) - x*(g*(-b*f + c*e) - h*(-a*f + c*d - q)), x)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q)
    rule434 = ReplacementRule(pattern434, lambda g, e, h, d, c, x, f, b, a : With434(g, e, h, d, c, x, f, b, a))
    rubi.add(rule434)

    pattern435 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, a: NegQ(-a*c)), )
    def With435(g, e, h, d, c, x, f, a):
        q = Rt(a*c*e**S(2) + (-a*f + c*d)**S(2), S(2))
        return Int(Simp(-a*e*h - g*(-a*f + c*d - q) + x*(-c*e*g + h*(-a*f + c*d + q)), x)/((a + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q) - Int(Simp(-a*e*h - g*(-a*f + c*d + q) + x*(-c*e*g + h*(-a*f + c*d - q)), x)/((a + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/(S(2)*q)
    rule435 = ReplacementRule(pattern435, lambda g, e, h, d, c, x, f, a : With435(g, e, h, d, c, x, f, a))
    rubi.add(rule435)

    pattern436 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(d_ + x_**S(2)*WC('f', S(1)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With436(g, h, d, c, x, f, b, a):
        q = Rt(b**S(2)*d*f + (-a*f + c*d)**S(2), S(2))
        return Int(Simp(b*d*h - g*(-a*f + c*d - q) + x*(b*f*g + h*(-a*f + c*d + q)), x)/(sqrt(d + f*x**S(2))*(a + b*x + c*x**S(2))), x)/(S(2)*q) - Int(Simp(b*d*h - g*(-a*f + c*d + q) + x*(b*f*g + h*(-a*f + c*d - q)), x)/(sqrt(d + f*x**S(2))*(a + b*x + c*x**S(2))), x)/(S(2)*q)
    rule436 = ReplacementRule(pattern436, lambda g, h, d, c, x, f, b, a : With436(g, h, d, c, x, f, b, a))
    rubi.add(rule436)

    pattern437 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), )
    def With437(g, e, h, d, c, x, f, b, a):
        s = Rt(-S(4)*a*c + b**S(2), S(2))
        t = Rt(-S(4)*d*f + e**S(2), S(2))
        return sqrt(S(2)*a + x*(b + s))*sqrt(S(2)*d + x*(e + t))*sqrt(b + S(2)*c*x + s)*sqrt(e + S(2)*f*x + t)*Int((g + h*x)/(sqrt(S(2)*a + x*(b + s))*sqrt(S(2)*d + x*(e + t))*sqrt(b + S(2)*c*x + s)*sqrt(e + S(2)*f*x + t)), x)/(sqrt(a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2)))
    rule437 = ReplacementRule(pattern437, lambda g, e, h, d, c, x, f, b, a : With437(g, e, h, d, c, x, f, b, a))
    rubi.add(rule437)

    pattern438 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(d_ + x_**S(2)*WC('f', S(1)))*sqrt(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), )
    def With438(g, h, d, c, x, f, b, a):
        s = Rt(-S(4)*a*c + b**S(2), S(2))
        t = Rt(-S(4)*d*f, S(2))
        return sqrt(S(2)*a + x*(b + s))*sqrt(S(2)*d + t*x)*sqrt(S(2)*f*x + t)*sqrt(b + S(2)*c*x + s)*Int((g + h*x)/(sqrt(S(2)*a + x*(b + s))*sqrt(S(2)*d + t*x)*sqrt(S(2)*f*x + t)*sqrt(b + S(2)*c*x + s)), x)/(sqrt(d + f*x**S(2))*sqrt(a + b*x + c*x**S(2)))
    rule438 = ReplacementRule(pattern438, lambda g, h, d, c, x, f, b, a : With438(g, h, d, c, x, f, b, a))
    rubi.add(rule438)

    pattern439 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda b, c, e, f: ZeroQ(-b*f + c*e)), CustomConstraint(lambda d, c, f, b, a: ZeroQ(c**S(2)*d - f*(-S(3)*a*c + b**S(2)))), CustomConstraint(lambda g, h, c, b, a: ZeroQ(S(9)*a*c*h**S(2) - S(2)*b**S(2)*h**S(2) - b*c*g*h + c**S(2)*g**S(2))), CustomConstraint(lambda c, g, b, h: PositiveQ(-S(9)*c*h**S(2)/(-b*h + S(2)*c*g)**S(2))), )
    def With439(g, e, h, d, c, x, f, b, a):
        q = S(3)**(S(2)/3)*(-c*h**S(2)/(-b*h + S(2)*c*g)**S(2))**(S(1)/3)
        return -S(3)*h*q*log((-S(3)*h*(b + S(2)*c*x)/(-b*h + S(2)*c*g) + S(1))**(S(2)/3) + S(2)**(S(1)/3)*(S(3)*h*(b + S(2)*c*x)/(-b*h + S(2)*c*g) + S(1))**(S(1)/3))/(S(2)*f) + h*q*log(d + e*x + f*x**S(2))/(S(2)*f) - sqrt(S(3))*h*q*atan(S(2)**(S(2)/3)*sqrt(S(3))*(-S(3)*h*(b + S(2)*c*x)/(-b*h + S(2)*c*g) + S(1))**(S(2)/3)/(S(3)*(S(3)*h*(b + S(2)*c*x)/(-b*h + S(2)*c*g) + S(1))**(S(1)/3)) - sqrt(S(3))/S(3))/f
    rule439 = ReplacementRule(pattern439, lambda g, e, h, d, c, x, f, b, a : With439(g, e, h, d, c, x, f, b, a))
    rubi.add(rule439)

    pattern440 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)))**(S(1)/3)*(d_ + x_**S(2)*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(S(3)*a*f + c*d)), CustomConstraint(lambda c, g, h, a: ZeroQ(S(9)*a*h**S(2) + c*g**S(2))), CustomConstraint(lambda a: PositiveQ(a)))
    rule440 = ReplacementRule(pattern440, lambda g, h, d, c, x, f, a : S(2)**(S(1)/3)*h*log(d + f*x**S(2))/(S(4)*a**(S(1)/3)*f) - S(3)*S(2)**(S(1)/3)*h*log((S(1) - S(3)*h*x/g)**(S(2)/3) + S(2)**(S(1)/3)*(S(1) + S(3)*h*x/g)**(S(1)/3))/(S(4)*a**(S(1)/3)*f) - S(2)**(S(1)/3)*sqrt(S(3))*h*atan(S(2)**(S(2)/3)*sqrt(S(3))*(S(1) - S(3)*h*x/g)**(S(2)/3)/(S(3)*(S(1) + S(3)*h*x/g)**(S(1)/3)) - sqrt(S(3))/S(3))/(S(2)*a**(S(1)/3)*f))
    rubi.add(rule440)

    pattern441 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda b, c, e, f: ZeroQ(-b*f + c*e)), CustomConstraint(lambda d, c, f, b, a: ZeroQ(c**S(2)*d - f*(-S(3)*a*c + b**S(2)))), CustomConstraint(lambda g, h, c, b, a: ZeroQ(S(9)*a*c*h**S(2) - S(2)*b**S(2)*h**S(2) - b*c*g*h + c**S(2)*g**S(2))), CustomConstraint(lambda c, b, a: Not(PositiveQ(S(4)*a - b**S(2)/c))), )
    def With441(g, e, h, d, c, x, f, b, a):
        q = -c/(-S(4)*a*c + b**S(2))
        return (q*(a + b*x + c*x**S(2)))**(S(1)/3)*Int((g + h*x)/((d + e*x + f*x**S(2))*(a*q + b*q*x + c*q*x**S(2))**(S(1)/3)), x)/(a + b*x + c*x**S(2))**(S(1)/3)
    rule441 = ReplacementRule(pattern441, lambda g, e, h, d, c, x, f, b, a : With441(g, e, h, d, c, x, f, b, a))
    rubi.add(rule441)

    pattern442 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**S(2)*WC('c', S(1)))**(S(1)/3)*(d_ + x_**S(2)*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(S(3)*a*f + c*d)), CustomConstraint(lambda c, g, h, a: ZeroQ(S(9)*a*h**S(2) + c*g**S(2))), CustomConstraint(lambda a: Not(PositiveQ(a))))
    rule442 = ReplacementRule(pattern442, lambda g, h, d, c, x, f, a : (S(1) + c*x**S(2)/a)**(S(1)/3)*Int((g + h*x)/((S(1) + c*x**S(2)/a)**(S(1)/3)*(d + f*x**S(2))), x)/(a + c*x**S(2))**(S(1)/3))
    rubi.add(rule442)

    pattern443 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule443 = ReplacementRule(pattern443, lambda g, e, h, d, c, x, p, f, q, b, a : Int((g + h*x)*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule443)

    pattern444 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule444 = ReplacementRule(pattern444, lambda g, e, h, d, c, x, p, f, q, a : Int((a + c*x**S(2))**p*(g + h*x)*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule444)

    pattern445 = Pattern(Integral((u_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule445 = ReplacementRule(pattern445, lambda g, e, h, u, d, c, x, m, p, f, q, b, a : Subst(Int((g + h*x)**m*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule445)

    pattern446 = Pattern(Integral((u_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(u_**S(2)*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule446 = ReplacementRule(pattern446, lambda g, e, h, d, c, x, m, p, f, q, u, a : Subst(Int((a + c*x**S(2))**p*(g + h*x)**m*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule446)

    pattern447 = Pattern(Integral(u_**WC('p', S(1))*v_**WC('q', S(1))*z_**WC('m', S(1)), x_), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda z, x: LinearQ(z, x)), CustomConstraint(lambda x, v, u: QuadraticQ(List(u, v), x)), CustomConstraint(lambda z, x, v, u: Not(LinearMatchQ(z, x) & QuadraticMatchQ(List(u, v), x))))
    rule447 = ReplacementRule(pattern447, lambda x, v, m, p, q, z, u : Int(ExpandToSum(u, x)**p*ExpandToSum(v, x)**q*ExpandToSum(z, x)**m, x))
    rubi.add(rule447)

    pattern448 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(f_ + x_*WC('g', S(1)))**WC('n', S(1))*(x_*WC('i', S(1)) + WC('h', S(0)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, f, m: IntegerQ(m) | (PositiveQ(d) & PositiveQ(f))))
    rule448 = ReplacementRule(pattern448, lambda n, g, e, h, d, i, c, x, m, p, f, q, b, a : Int((h + i*x)**q*(d*f + e*g*x**S(2))**m*(a + b*x + c*x**S(2))**p, x))
    rubi.add(rule448)

    pattern449 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_*WC('i', S(1)) + WC('h', S(0)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda m: NegativeIntegerQ(m)))
    rule449 = ReplacementRule(pattern449, lambda n, g, e, h, d, i, c, x, m, p, f, q, b, a : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(h + i*x)**q*(a + b*x + c*x**S(2))**p, x), x))
    rubi.add(rule449)

    pattern450 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(f_ + x_*WC('g', S(1)))**n_*(x_*WC('i', S(1)) + WC('h', S(0)))**WC('q', S(1))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, g, e: ZeroQ(d*g + e*f)), CustomConstraint(lambda n, m: ZeroQ(m - n)))
    rule450 = ReplacementRule(pattern450, lambda n, g, e, h, d, i, c, x, m, p, f, q, b, a : (d + e*x)**FracPart(m)*(f + g*x)**FracPart(m)*(d*f + e*g*x**S(2))**(-FracPart(m))*Int((h + i*x)**q*(d*f + e*g*x**S(2))**m*(a + b*x + c*x**S(2))**p, x))
    rubi.add(rule450)

    pattern451 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, c, p: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda e, d, c, x, f, q, b, a: Not(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**S(2)), LeafCount(a + b*x + c*x**S(2)))))
    rule451 = ReplacementRule(pattern451, lambda C, e, B, A, d, c, x, p, f, q, b, a : (c/f)**p*Int((A + B*x + C*x**S(2))*(d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule451)

    pattern452 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, c, p: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda e, d, c, x, f, q, b, a: Not(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**S(2)), LeafCount(a + b*x + c*x**S(2)))))
    rule452 = ReplacementRule(pattern452, lambda C, e, A, d, c, x, p, f, q, b, a : (c/f)**p*Int((A + C*x**S(2))*(d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule452)

    pattern453 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda f, c: Not(PositiveQ(c/f))))
    rule453 = ReplacementRule(pattern453, lambda C, e, B, A, d, c, x, p, f, q, b, a : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*(d + e*x + f*x**S(2))**(-FracPart(p))*Int((A + B*x + C*x**S(2))*(d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule453)

    pattern454 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, c, a: ZeroQ(-a*f + c*d)), CustomConstraint(lambda d, e, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda f, c: Not(PositiveQ(c/f))))
    rule454 = ReplacementRule(pattern454, lambda C, e, A, d, c, x, p, f, q, b, a : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*(d + e*x + f*x**S(2))**(-FracPart(p))*Int((A + C*x**S(2))*(d + e*x + f*x**S(2))**(p + q), x))
    rubi.add(rule454)

    pattern455 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule455 = ReplacementRule(pattern455, lambda C, e, B, A, d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b + S(2)*c*x)**(S(2)*p)*(A + B*x + C*x**S(2))*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule455)

    pattern456 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule456 = ReplacementRule(pattern456, lambda C, e, A, d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((A + C*x**S(2))*(b + S(2)*c*x)**(S(2)*p)*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule456)

    pattern457 = Pattern(Integral((x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule457 = ReplacementRule(pattern457, lambda C, B, A, d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((b + S(2)*c*x)**(S(2)*p)*(d + f*x**S(2))**q*(A + B*x + C*x**S(2)), x))
    rubi.add(rule457)

    pattern458 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule458 = ReplacementRule(pattern458, lambda C, A, d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x)**(-S(2)*FracPart(p))*(a + b*x + c*x**S(2))**FracPart(p)*Int((A + C*x**S(2))*(b + S(2)*c*x)**(S(2)*p)*(d + f*x**S(2))**q, x))
    rubi.add(rule458)

    pattern459 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule459 = ReplacementRule(pattern459, lambda C, e, B, A, d, c, x, p, f, q, b, a : Int(ExpandIntegrand((A + B*x + C*x**S(2))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule459)

    pattern460 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule460 = ReplacementRule(pattern460, lambda C, e, A, d, c, x, p, f, q, b, a : Int(ExpandIntegrand((A + C*x**S(2))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule460)

    pattern461 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p, S(0)) | Greater(q, S(0))))
    rule461 = ReplacementRule(pattern461, lambda C, e, B, A, d, c, x, p, f, q, a : Int(ExpandIntegrand((a + c*x**S(2))**p*(A + B*x + C*x**S(2))*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule461)

    pattern462 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p, S(0)) | Greater(q, S(0))))
    rule462 = ReplacementRule(pattern462, lambda C, e, A, d, c, x, p, f, q, a : Int(ExpandIntegrand((A + C*x**S(2))*(a + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x))
    rubi.add(rule462)

    pattern463 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule463 = ReplacementRule(pattern463, lambda C, e, B, A, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*(A*b*c - S(2)*B*a*c + C*a*b - x*(-C*(-S(2)*a*c + b**S(2)) + c*(-S(2)*A*c + B*b)))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(-d*(C*(S(2)*a*c - b**S(2)*(p + S(2))) + c*(S(2)*p + S(3))*(-S(2)*A*c + B*b)) + e*q*(A*b*c - S(2)*B*a*c + C*a*b) - f*x**S(2)*(C*(S(2)*a*c*(S(2)*q + S(1)) - b**S(2)*(p + S(2)*q + S(2))) + c*(-S(2)*A*c + B*b)*(S(2)*p + S(2)*q + S(3))) + x*(-e*(C*(S(2)*a*c*(q + S(1)) - b**S(2)*(p + q + S(2))) + c*(-S(2)*A*c + B*b)*(S(2)*p + q + S(3))) + S(2)*f*q*(A*b*c - S(2)*B*a*c + C*a*b)), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule463)

    pattern464 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule464 = ReplacementRule(pattern464, lambda C, e, A, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*(A*b*c + C*a*b + x*(S(2)*A*c**S(2) + C*(-S(2)*a*c + b**S(2))))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(A*c*(b*e*q + S(2)*c*d*(S(2)*p + S(3))) - C*(-a*b*e*q + S(2)*a*c*d - b**S(2)*d*(p + S(2))) - f*x**S(2)*(-S(2)*A*c**S(2)*(S(2)*p + S(2)*q + S(3)) + C*(S(2)*a*c*(S(2)*q + S(1)) - b**S(2)*(p + S(2)*q + S(2)))) + x*(S(2)*A*c*(b*f*q + c*e*(S(2)*p + q + S(3))) + C*(S(2)*a*b*f*q - S(2)*a*c*e*(q + S(1)) + b**S(2)*e*(p + q + S(2)))), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule464)

    pattern465 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule465 = ReplacementRule(pattern465, lambda C, e, B, A, d, c, x, p, f, q, a : (a + c*x**S(2))**(p + S(1))*(B*a - x*(A*c - C*a))*(d + e*x + f*x**S(2))**q/(S(2)*a*c*(p + S(1))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(A*c*d*(S(2)*p + S(3)) - a*(B*e*q + C*d) - f*x**S(2)*(-A*c*(S(2)*p + S(2)*q + S(3)) + C*a*(S(2)*q + S(1))) + x*(A*c*e*(S(2)*p + q + S(3)) - a*(S(2)*B*f*q + C*e*(q + S(1)))), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule465)

    pattern466 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule466 = ReplacementRule(pattern466, lambda C, e, A, d, c, x, p, f, q, a : x*(a + c*x**S(2))**(p + S(1))*(-A*c + C*a)*(d + e*x + f*x**S(2))**q/(S(2)*a*c*(p + S(1))) + Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(-1))*Simp(A*c*d*(S(2)*p + S(3)) - C*a*d - f*x**S(2)*(-A*c*(S(2)*p + S(2)*q + S(3)) + C*a*(S(2)*q + S(1))) + x*(A*c*e*(S(2)*p + q + S(3)) - C*a*e*(q + S(1))), x), x)/(S(2)*a*c*(p + S(1))))
    rubi.add(rule466)

    pattern467 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule467 = ReplacementRule(pattern467, lambda C, B, A, d, c, x, p, f, q, b, a : (d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*(A*b*c - S(2)*B*a*c + C*a*b - x*(-C*(-S(2)*a*c + b**S(2)) + c*(-S(2)*A*c + B*b)))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((d + f*x**S(2))**(q + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-d*(C*(S(2)*a*c - b**S(2)*(p + S(2))) + c*(S(2)*p + S(3))*(-S(2)*A*c + B*b)) + S(2)*f*q*x*(A*b*c - S(2)*B*a*c + C*a*b) - f*x**S(2)*(C*(S(2)*a*c*(S(2)*q + S(1)) - b**S(2)*(p + S(2)*q + S(2))) + c*(-S(2)*A*c + B*b)*(S(2)*p + S(2)*q + S(3))), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule467)

    pattern468 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda q: Greater(q, S(0))))
    rule468 = ReplacementRule(pattern468, lambda C, A, d, c, x, p, f, q, b, a : (d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*(A*b*c + C*a*b + x*(S(2)*A*c**S(2) + C*(-S(2)*a*c + b**S(2))))/(c*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int((d + f*x**S(2))**(q + S(-1))*(a + b*x + c*x**S(2))**(p + S(1))*Simp(S(2)*A*c**S(2)*d*(S(2)*p + S(3)) - C*(S(2)*a*c*d - b**S(2)*d*(p + S(2))) - f*x**S(2)*(-S(2)*A*c**S(2)*(S(2)*p + S(2)*q + S(3)) + C*(S(2)*a*c*(S(2)*q + S(1)) - b**S(2)*(p + S(2)*q + S(2)))) + x*(S(2)*A*b*c*f*q + S(2)*C*a*b*f*q), x), x)/(c*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule468)

    pattern469 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, b, a: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule469 = ReplacementRule(pattern469, lambda C, e, B, A, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(1))*(c*x*(A*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) - B*(a*b*f - S(2)*a*c*e + b*c*d) + C*(-a*b*e - S(2)*a*(-a*f + c*d) + b**S(2)*d)) + (A*b - B*a)*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + (A*c - C*a)*(S(2)*a*c*e - b*(a*f + c*d)))/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))) + Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(-c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-B*c*e - C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(A*c*e + B*a*f + B*c*d + C*a*e)) - e*((A*b - B*a)*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + (A*c - C*a)*(S(2)*a*c*e - b*(a*f + c*d)))*(p + q + S(2)) - x*(S(2)*f*((A*b - B*a)*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + (A*c - C*a)*(S(2)*a*c*e - b*(a*f + c*d)))*(p + q + S(2)) - (b*f*(p + S(1)) - c*e*(S(2)*p + q + S(4)))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-B*c*e - C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(A*c*e + B*a*f + B*c*d + C*a*e))) + (p + S(1))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))*(-S(2)*A*c + B*b - S(2)*C*a) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-B*c*e - C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(A*c*e + B*a*f + B*c*d + C*a*e)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))))
    rubi.add(rule469)

    pattern470 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, b, a: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule470 = ReplacementRule(pattern470, lambda C, e, A, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(1))*(A*b*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + c*x*(A*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + C*(-a*b*e - S(2)*a*(-a*f + c*d) + b**S(2)*d)) + (A*c - C*a)*(S(2)*a*c*e - b*(a*f + c*d)))/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))) + Int((a + b*x + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(-c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(A*c*e + C*a*e)) - e*(A*b*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + (A*c - C*a)*(S(2)*a*c*e - b*(a*f + c*d)))*(p + q + S(2)) - x*(S(2)*f*(A*b*(b**S(2)*f + S(2)*c**S(2)*d - c*(S(2)*a*f + b*e)) + (A*c - C*a)*(S(2)*a*c*e - b*(a*f + c*d)))*(p + q + S(2)) - (b*f*(p + S(1)) - c*e*(S(2)*p + q + S(4)))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(A*c*e + C*a*e))) + (p + S(1))*(-S(2)*A*c - S(2)*C*a)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2)) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(A*c*e + C*a*e)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**S(2))))
    rubi.add(rule470)

    pattern471 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, a: NonzeroQ(a*c*e**S(2) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule471 = ReplacementRule(pattern471, lambda C, e, B, A, d, c, x, p, f, q, a : -(a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**(q + S(1))*(-B*a*(-S(2)*a*c*f + S(2)*c**S(2)*d) + S(2)*a*c*e*(A*c - C*a) + c*x*(A*(-S(2)*a*c*f + S(2)*c**S(2)*d) + S(2)*B*a*c*e - S(2)*C*a*(-a*f + c*d)))/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))) - Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(-c*f*x**S(2)*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-B*c*e - C*a*f + C*c*d))*(S(2)*p + S(2)*q + S(5)) - e*(-B*a*(-S(2)*a*c*f + S(2)*c**S(2)*d) + S(2)*a*c*e*(A*c - C*a))*(p + q + S(2)) - x*(c*e*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-B*c*e - C*a*f + C*c*d))*(S(2)*p + q + S(4)) + S(2)*f*(-B*a*(-S(2)*a*c*f + S(2)*c**S(2)*d) + S(2)*a*c*e*(A*c - C*a))*(p + q + S(2))) + (p + S(1))*(-S(2)*A*c - S(2)*C*a)*(a*c*e**S(2) + (-a*f + c*d)**S(2)) + (S(2)*A*c*(-a*f + c*d) - S(2)*a*(-B*c*e - C*a*f + C*c*d))*(a*f*(p + S(1)) - c*d*(p + S(2))), x), x)/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))))
    rubi.add(rule471)

    pattern472 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda e, d, c, f, a: NonzeroQ(a*c*e**S(2) + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule472 = ReplacementRule(pattern472, lambda C, e, A, d, c, x, p, f, q, a : -(a + c*x**S(2))**(p + S(1))*(S(2)*a*c*e*(A*c - C*a) + c*x*(A*(-S(2)*a*c*f + S(2)*c**S(2)*d) - S(2)*C*a*(-a*f + c*d)))*(d + e*x + f*x**S(2))**(q + S(1))/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))) - Int((a + c*x**S(2))**(p + S(1))*(d + e*x + f*x**S(2))**q*Simp(-S(2)*a*c*e**S(2)*(A*c - C*a)*(p + q + S(2)) - c*f*x**S(2)*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d))*(S(2)*p + S(2)*q + S(5)) - x*(S(4)*a*c*e*f*(A*c - C*a)*(p + q + S(2)) + c*e*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d))*(S(2)*p + q + S(4))) + (p + S(1))*(-S(2)*A*c - S(2)*C*a)*(a*c*e**S(2) + (-a*f + c*d)**S(2)) + (S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d))*(a*f*(p + S(1)) - c*d*(p + S(2))), x), x)/(S(4)*a*c*(p + S(1))*(a*c*e**S(2) + (-a*f + c*d)**S(2))))
    rubi.add(rule472)

    pattern473 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda d, c, f, b, a: NonzeroQ(b**S(2)*d*f + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule473 = ReplacementRule(pattern473, lambda C, B, A, d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(-b*(A*c - C*a)*(a*f + c*d) + c*x*(A*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) - B*(a*b*f + b*c*d) + C*(-S(2)*a*(-a*f + c*d) + b**S(2)*d)) + (A*b - B*a)*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d))/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))) + Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(B*a*f + B*c*d)) - x*(-b*f*(p + S(1))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(B*a*f + B*c*d)) + S(2)*f*(-b*(A*c - C*a)*(a*f + c*d) + (A*b - B*a)*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d))*(p + q + S(2))) + (p + S(1))*(b**S(2)*d*f + (-a*f + c*d)**S(2))*(-S(2)*A*c + B*b - S(2)*C*a) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d) - b*(B*a*f + B*c*d)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))))
    rubi.add(rule473)

    pattern474 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda d, c, f, b, a: NonzeroQ(b**S(2)*d*f + (-a*f + c*d)**S(2))), CustomConstraint(lambda q, p: Not(IntegerQ(q) & Less(q, S(-1)) & Not(IntegerQ(p)))))
    rule474 = ReplacementRule(pattern474, lambda C, A, d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(a + b*x + c*x**S(2))**(p + S(1))*(A*b*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) - b*(A*c - C*a)*(a*f + c*d) + c*x*(A*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) + C*(-S(2)*a*(-a*f + c*d) + b**S(2)*d)))/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))) + Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(1))*Simp(-c*f*x**S(2)*(S(2)*p + S(2)*q + S(5))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d)) - x*(-b*f*(p + S(1))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d)) + S(2)*f*(A*b*(-S(2)*a*c*f + b**S(2)*f + S(2)*c**S(2)*d) - b*(A*c - C*a)*(a*f + c*d))*(p + q + S(2))) + (p + S(1))*(-S(2)*A*c - S(2)*C*a)*(b**S(2)*d*f + (-a*f + c*d)**S(2)) + (a*f*(p + S(1)) - c*d*(p + S(2)))*(S(2)*A*c*(-a*f + c*d) - S(2)*a*(-C*a*f + C*c*d) + b**S(2)*(A*f + C*d)), x), x)/((p + S(1))*(-S(4)*a*c + b**S(2))*(b**S(2)*d*f + (-a*f + c*d)**S(2))))
    rubi.add(rule474)

    pattern475 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(3))))
    rule475 = ReplacementRule(pattern475, lambda C, e, B, A, d, c, x, p, f, q, b, a : (a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**(q + S(1))*(B*c*f*(S(2)*p + S(2)*q + S(3)) + S(2)*C*c*f*x*(p + q + S(1)) + C*(b*f*p - c*e*(S(2)*p + q + S(2))))/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))) - Int((a + b*x + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**q*Simp(p*(-a*e + b*d)*(C*(q + S(1))*(-b*f + c*e) - c*(-B*f + C*e)*(S(2)*p + S(2)*q + S(3))) + x**S(2)*(p*(-b*f + c*e)*(C*(q + S(1))*(-b*f + c*e) - c*(-B*f + C*e)*(S(2)*p + S(2)*q + S(3))) + (C*f**S(2)*p*(-S(4)*a*c + b**S(2)) - c**S(2)*(C*(-S(4)*d*f + e**S(2))*(S(2)*p + q + S(2)) + f*(S(2)*p + S(2)*q + S(3))*(S(2)*A*f - B*e + S(2)*C*d)))*(p + q + S(1))) + x*(S(2)*p*(-a*f + c*d)*(C*(q + S(1))*(-b*f + c*e) - c*(-B*f + C*e)*(S(2)*p + S(2)*q + S(3))) + (C*e*f*p*(-S(4)*a*c + b**S(2)) - b*c*(C*(-S(4)*d*f + e**S(2))*(S(2)*p + q + S(2)) + f*(S(2)*p + S(2)*q + S(3))*(S(2)*A*f - B*e + S(2)*C*d)))*(p + q + S(1))) + (C*b**S(2)*d*f*p + a*c*(C*(S(2)*d*f - e**S(2)*(S(2)*p + q + S(2))) + f*(-S(2)*A*f + B*e)*(S(2)*p + S(2)*q + S(3))))*(p + q + S(1)), x), x)/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))))
    rubi.add(rule475)

    pattern476 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(3))))
    rule476 = ReplacementRule(pattern476, lambda C, e, A, d, c, x, p, f, q, b, a : (S(2)*C*c*f*x*(p + q + S(1)) + C*(b*f*p - c*e*(S(2)*p + q + S(2))))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))) - Int((a + b*x + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**q*Simp(p*(-a*e + b*d)*(-C*c*e*(S(2)*p + S(2)*q + S(3)) + C*(q + S(1))*(-b*f + c*e)) + x**S(2)*(p*(-b*f + c*e)*(-C*c*e*(S(2)*p + S(2)*q + S(3)) + C*(q + S(1))*(-b*f + c*e)) + (C*f**S(2)*p*(-S(4)*a*c + b**S(2)) - c**S(2)*(C*(-S(4)*d*f + e**S(2))*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3))))*(p + q + S(1))) + x*(S(2)*p*(-a*f + c*d)*(-C*c*e*(S(2)*p + S(2)*q + S(3)) + C*(q + S(1))*(-b*f + c*e)) + (C*e*f*p*(-S(4)*a*c + b**S(2)) - b*c*(C*(-S(4)*d*f + e**S(2))*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3))))*(p + q + S(1))) + (C*b**S(2)*d*f*p + a*c*(-S(2)*A*f**S(2)*(S(2)*p + S(2)*q + S(3)) + C*(S(2)*d*f - e**S(2)*(S(2)*p + q + S(2)))))*(p + q + S(1)), x), x)/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))))
    rubi.add(rule476)

    pattern477 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(3))))
    rule477 = ReplacementRule(pattern477, lambda C, e, B, A, d, c, x, p, f, q, a : (a + c*x**S(2))**p*(d + e*x + f*x**S(2))**(q + S(1))*(B*c*f*(S(2)*p + S(2)*q + S(3)) - C*c*e*(S(2)*p + q + S(2)) + S(2)*C*c*f*x*(p + q + S(1)))/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))) - Int((a + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**q*Simp(a*c*(C*(S(2)*d*f - e**S(2)*(S(2)*p + q + S(2))) + f*(-S(2)*A*f + B*e)*(S(2)*p + S(2)*q + S(3)))*(p + q + S(1)) - a*e*p*(C*c*e*(q + S(1)) - c*(-B*f + C*e)*(S(2)*p + S(2)*q + S(3))) + x**S(2)*(c*e*p*(C*c*e*(q + S(1)) - c*(-B*f + C*e)*(S(2)*p + S(2)*q + S(3))) + (-S(4)*C*a*c*f**S(2)*p - c**S(2)*(C*(-S(4)*d*f + e**S(2))*(S(2)*p + q + S(2)) + f*(S(2)*p + S(2)*q + S(3))*(S(2)*A*f - B*e + S(2)*C*d)))*(p + q + S(1))) + x*(-S(4)*C*a*c*e*f*p*(p + q + S(1)) + S(2)*p*(-a*f + c*d)*(C*c*e*(q + S(1)) - c*(-B*f + C*e)*(S(2)*p + S(2)*q + S(3)))), x), x)/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))))
    rubi.add(rule477)

    pattern478 = Pattern(Integral((a_ + x_**S(2)*WC('c', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(3))))
    rule478 = ReplacementRule(pattern478, lambda C, e, A, d, c, x, p, f, q, a : (a + c*x**S(2))**p*(-C*c*e*(S(2)*p + q + S(2)) + S(2)*C*c*f*x*(p + q + S(1)))*(d + e*x + f*x**S(2))**(q + S(1))/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))) - Int((a + c*x**S(2))**(p + S(-1))*(d + e*x + f*x**S(2))**q*Simp(a*c*(-S(2)*A*f**S(2)*(S(2)*p + S(2)*q + S(3)) + C*(S(2)*d*f - e**S(2)*(S(2)*p + q + S(2))))*(p + q + S(1)) - a*e*p*(C*c*e*(q + S(1)) - C*c*e*(S(2)*p + S(2)*q + S(3))) + x**S(2)*(c*e*p*(C*c*e*(q + S(1)) - C*c*e*(S(2)*p + S(2)*q + S(3))) + (-S(4)*C*a*c*f**S(2)*p - c**S(2)*(C*(-S(4)*d*f + e**S(2))*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3))))*(p + q + S(1))) + x*(-S(4)*C*a*c*e*f*p*(p + q + S(1)) + S(2)*p*(-a*f + c*d)*(C*c*e*(q + S(1)) - C*c*e*(S(2)*p + S(2)*q + S(3)))), x), x)/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))))
    rubi.add(rule478)

    pattern479 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(3))))
    rule479 = ReplacementRule(pattern479, lambda C, B, A, d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(a + b*x + c*x**S(2))**p*(B*c*f*(S(2)*p + S(2)*q + S(3)) + C*b*f*p + S(2)*C*c*f*x*(p + q + S(1)))/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))) - Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(b*d*p*(B*c*f*(S(2)*p + S(2)*q + S(3)) - C*b*f*(q + S(1))) + x**S(2)*(-b*f*p*(B*c*f*(S(2)*p + S(2)*q + S(3)) - C*b*f*(q + S(1))) + (C*f**S(2)*p*(-S(4)*a*c + b**S(2)) - c**S(2)*(-S(4)*C*d*f*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3))))*(p + q + S(1))) + x*(-b*c*(-S(4)*C*d*f*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3)))*(p + q + S(1)) + S(2)*p*(-a*f + c*d)*(B*c*f*(S(2)*p + S(2)*q + S(3)) - C*b*f*(q + S(1)))) + (C*b**S(2)*d*f*p + a*c*(-S(2)*A*f**S(2)*(S(2)*p + S(2)*q + S(3)) + S(2)*C*d*f))*(p + q + S(1)), x), x)/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))))
    rubi.add(rule479)

    pattern480 = Pattern(Integral((d_ + x_**S(2)*WC('f', S(1)))**WC('q', S(1))*(x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda q, p: NonzeroQ(p + q + S(1))), CustomConstraint(lambda q, p: NonzeroQ(S(2)*p + S(2)*q + S(3))))
    rule480 = ReplacementRule(pattern480, lambda C, A, d, c, x, p, f, q, b, a : (d + f*x**S(2))**(q + S(1))*(C*b*f*p + S(2)*C*c*f*x*(p + q + S(1)))*(a + b*x + c*x**S(2))**p/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))) - Int((d + f*x**S(2))**q*(a + b*x + c*x**S(2))**(p + S(-1))*Simp(-C*b**S(2)*d*f*p*(q + S(1)) + x**S(2)*(C*b**S(2)*f**S(2)*p*(q + S(1)) + (C*f**S(2)*p*(-S(4)*a*c + b**S(2)) - c**S(2)*(-S(4)*C*d*f*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3))))*(p + q + S(1))) + x*(-S(2)*C*b*f*p*(q + S(1))*(-a*f + c*d) - b*c*(-S(4)*C*d*f*(S(2)*p + q + S(2)) + f*(S(2)*A*f + S(2)*C*d)*(S(2)*p + S(2)*q + S(3)))*(p + q + S(1))) + (C*b**S(2)*d*f*p + a*c*(-S(2)*A*f**S(2)*(S(2)*p + S(2)*q + S(3)) + S(2)*C*d*f))*(p + q + S(1)), x), x)/(S(2)*c*f**S(2)*(p + q + S(1))*(S(2)*p + S(2)*q + S(3))))
    rubi.add(rule480)

    pattern481 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, b, f, C, q, e, B, x, d, A, a: NonzeroQ(q)))
    def With481(C, e, B, A, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - a*b*e*f - S(2)*a*c*d*f + a*c*e**S(2) + b**S(2)*d*f - b*c*d*e + c**S(2)*d**S(2)
        return Int((-A*a*c*f + A*b**S(2)*f - A*b*c*e + A*c**S(2)*d - B*a*b*f + B*a*c*e + C*a**S(2)*f - C*a*c*d + c*x*(A*b*f - A*c*e - B*a*f + B*c*d + C*a*e - C*b*d))/(a + b*x + c*x**S(2)), x)/q + Int((A*a*f**S(2) - A*b*e*f - A*c*d*f + A*c*e**S(2) + B*b*d*f - B*c*d*e - C*a*d*f + C*c*d**S(2) - f*x*(A*b*f - A*c*e - B*a*f + B*c*d + C*a*e - C*b*d))/(d + e*x + f*x**S(2)), x)/q
    rule481 = ReplacementRule(pattern481, lambda C, e, B, A, d, c, x, f, b, a : With481(C, e, B, A, d, c, x, f, b, a))
    rubi.add(rule481)

    pattern482 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))), CustomConstraint(lambda c, b, f, C, q, e, x, d, A, a: NonzeroQ(q)))
    def With482(C, e, A, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - a*b*e*f - S(2)*a*c*d*f + a*c*e**S(2) + b**S(2)*d*f - b*c*d*e + c**S(2)*d**S(2)
        return Int((-A*a*c*f + A*b**S(2)*f - A*b*c*e + A*c**S(2)*d + C*a**S(2)*f - C*a*c*d + c*x*(A*b*f - A*c*e + C*a*e - C*b*d))/(a + b*x + c*x**S(2)), x)/q + Int((A*a*f**S(2) - A*b*e*f - A*c*d*f + A*c*e**S(2) - C*a*d*f + C*c*d**S(2) - f*x*(A*b*f - A*c*e + C*a*e - C*b*d))/(d + e*x + f*x**S(2)), x)/q
    rule482 = ReplacementRule(pattern482, lambda C, e, A, d, c, x, f, b, a : With482(C, e, A, d, c, x, f, b, a))
    rubi.add(rule482)

    pattern483 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((d_ + x_**S(2)*WC('f', S(1)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, f, C, q, B, x, d, A, a: NonzeroQ(q)))
    def With483(C, B, A, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - S(2)*a*c*d*f + b**S(2)*d*f + c**S(2)*d**S(2)
        return Int((A*a*f**S(2) - A*c*d*f + B*b*d*f - C*a*d*f + C*c*d**S(2) - f*x*(A*b*f - B*a*f + B*c*d - C*b*d))/(d + f*x**S(2)), x)/q + Int((-A*a*c*f + A*b**S(2)*f + A*c**S(2)*d - B*a*b*f + C*a**S(2)*f - C*a*c*d + c*x*(A*b*f - B*a*f + B*c*d - C*b*d))/(a + b*x + c*x**S(2)), x)/q
    rule483 = ReplacementRule(pattern483, lambda C, B, A, d, c, x, f, b, a : With483(C, B, A, d, c, x, f, b, a))
    rubi.add(rule483)

    pattern484 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))/((d_ + x_**S(2)*WC('f', S(1)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, f, C, q, x, d, A, a: NonzeroQ(q)))
    def With484(C, A, d, c, x, f, b, a):
        q = a**S(2)*f**S(2) - S(2)*a*c*d*f + b**S(2)*d*f + c**S(2)*d**S(2)
        return Int((A*a*f**S(2) - A*c*d*f - C*a*d*f + C*c*d**S(2) - f*x*(A*b*f - C*b*d))/(d + f*x**S(2)), x)/q + Int((-A*a*c*f + A*b**S(2)*f + A*c**S(2)*d + C*a**S(2)*f - C*a*c*d + c*x*(A*b*f - C*b*d))/(a + b*x + c*x**S(2)), x)/q
    rule484 = ReplacementRule(pattern484, lambda C, A, d, c, x, f, b, a : With484(C, A, d, c, x, f, b, a))
    rubi.add(rule484)

    pattern485 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))))
    rule485 = ReplacementRule(pattern485, lambda C, e, B, A, d, c, x, f, b, a : C*Int(1/sqrt(d + e*x + f*x**S(2)), x)/c + Int((A*c - C*a + x*(B*c - C*b))/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/c)
    rubi.add(rule485)

    pattern486 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))/((a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))))
    rule486 = ReplacementRule(pattern486, lambda C, e, A, d, c, x, f, b, a : C*Int(1/sqrt(d + e*x + f*x**S(2)), x)/c + Int((A*c - C*a - C*b*x)/((a + b*x + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/c)
    rubi.add(rule486)

    pattern487 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))))
    rule487 = ReplacementRule(pattern487, lambda C, e, B, A, d, c, x, f, a : C*Int(1/sqrt(d + e*x + f*x**S(2)), x)/c + Int((A*c + B*c*x - C*a)/((a + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/c)
    rubi.add(rule487)

    pattern488 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))/((a_ + x_**S(2)*WC('c', S(1)))*sqrt(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, f, e: NonzeroQ(-S(4)*d*f + e**S(2))))
    rule488 = ReplacementRule(pattern488, lambda C, e, A, d, c, x, f, a : C*Int(1/sqrt(d + e*x + f*x**S(2)), x)/c + (A*c - C*a)*Int(S(1)/((a + c*x**S(2))*sqrt(d + e*x + f*x**S(2))), x)/c)
    rubi.add(rule488)

    pattern489 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/(sqrt(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule489 = ReplacementRule(pattern489, lambda C, B, A, d, c, x, f, b, a : C*Int(1/sqrt(d + f*x**S(2)), x)/c + Int((A*c - C*a + x*(B*c - C*b))/(sqrt(d + f*x**S(2))*(a + b*x + c*x**S(2))), x)/c)
    rubi.add(rule489)

    pattern490 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))/(sqrt(x_**S(2)*WC('f', S(1)) + WC('d', S(0)))*(a_ + x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule490 = ReplacementRule(pattern490, lambda C, A, d, c, x, f, b, a : C*Int(1/sqrt(d + f*x**S(2)), x)/c + Int((A*c - C*a - C*b*x)/(sqrt(d + f*x**S(2))*(a + b*x + c*x**S(2))), x)/c)
    rubi.add(rule490)

    pattern491 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule491 = ReplacementRule(pattern491, lambda C, e, B, A, d, c, x, p, f, q, b, a : Int((A + B*x + C*x**S(2))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule491)

    pattern492 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule492 = ReplacementRule(pattern492, lambda C, e, A, d, c, x, p, f, q, b, a : Int((A + C*x**S(2))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule492)

    pattern493 = Pattern(Integral((x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule493 = ReplacementRule(pattern493, lambda C, e, B, A, d, c, x, p, f, q, a : Int((a + c*x**S(2))**p*(A + B*x + C*x**S(2))*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule493)

    pattern494 = Pattern(Integral((x_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(x_**S(2)*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**S(2)*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule494 = ReplacementRule(pattern494, lambda C, e, A, d, c, x, p, f, q, a : Int((A + C*x**S(2))*(a + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x))
    rubi.add(rule494)

    pattern495 = Pattern(Integral((u_**S(2)*WC('C', S(1)) + u_*WC('B', S(1)) + WC('A', S(0)))*(u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule495 = ReplacementRule(pattern495, lambda C, e, B, A, d, u, c, x, p, f, q, b, a : Subst(Int((A + B*x + C*x**S(2))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule495)

    pattern496 = Pattern(Integral((u_*WC('B', S(1)) + WC('A', S(0)))*(u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule496 = ReplacementRule(pattern496, lambda e, B, A, d, u, c, x, p, f, q, b, a : Subst(Int((A + B*x)*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule496)

    pattern497 = Pattern(Integral((u_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(u_**S(2)*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule497 = ReplacementRule(pattern497, lambda C, e, A, d, u, c, x, p, f, q, b, a : Subst(Int((A + C*x**S(2))*(a + b*x + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule497)

    pattern498 = Pattern(Integral((u_**S(2)*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('C', S(1)) + u_*WC('B', S(1)) + WC('A', S(0)))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule498 = ReplacementRule(pattern498, lambda C, e, B, A, d, c, x, p, f, q, u, a : Subst(Int((a + c*x**S(2))**p*(A + B*x + C*x**S(2))*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule498)

    pattern499 = Pattern(Integral((u_*WC('B', S(1)) + WC('A', S(0)))*(u_**S(2)*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule499 = ReplacementRule(pattern499, lambda e, B, A, d, c, x, p, f, q, u, a : Subst(Int((A + B*x)*(a + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule499)

    pattern500 = Pattern(Integral((u_**S(2)*WC('C', S(1)) + WC('A', S(0)))*(u_**S(2)*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**S(2)*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule500 = ReplacementRule(pattern500, lambda C, e, A, d, c, x, p, f, q, u, a : Subst(Int((A + C*x**S(2))*(a + c*x**S(2))**p*(d + e*x + f*x**S(2))**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule500)

    pattern501 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(0))), CustomConstraint(lambda p: IntegerQ(p)))
    rule501 = ReplacementRule(pattern501, lambda n2, n, c, x, p, b, a : Int(x**(S(2)*n*p)*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule501)

    pattern502 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)), )
    def With502(n2, n, c, x, p, b, a):
        k = Denominator(n)
        return k*Subst(Int(x**(k + S(-1))*(a + b*x**(k*n) + c*x**(S(2)*k*n))**p, x), x, x**(1/k))
    rule502 = ReplacementRule(pattern502, lambda n2, n, c, x, p, b, a : With502(n2, n, c, x, p, b, a))
    rubi.add(rule502)

    pattern503 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: ZeroQ(n*(S(2)*p + S(1)) + S(1))))
    rule503 = ReplacementRule(pattern503, lambda n2, n, c, x, p, b, a : x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a))
    rubi.add(rule503)

    pattern504 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: ZeroQ(S(2)*n*(p + S(1)) + S(1))), CustomConstraint(lambda n: NonzeroQ(n + S(1))))
    rule504 = ReplacementRule(pattern504, lambda n2, n, c, x, p, b, a : x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*(n + S(1))) - x*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(a*(S(2)*p + S(1))))
    rubi.add(rule504)

    pattern505 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: ZeroQ(S(2)*n*p + S(1)) | ZeroQ(n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda p: IntegerQ(p + S(1)/2)))
    rule505 = ReplacementRule(pattern505, lambda n2, n, c, x, p, b, a : sqrt(a + b*x**n + c*x**(S(2)*n))*Int((b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)/2), x)/(b + S(2)*c*x**n))
    rubi.add(rule505)

    pattern506 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: ZeroQ(S(2)*n*p + S(1)) | ZeroQ(n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda p: Not(IntegerQ(S(2)*p))))
    rule506 = ReplacementRule(pattern506, lambda n2, n, c, x, p, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b + S(2)*c*x**n)**(S(2)*p), x))
    rubi.add(rule506)

    pattern507 = Pattern(Integral(sqrt(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NonzeroQ(n + S(1))), CustomConstraint(lambda n: NonzeroQ(S(2)*n + S(1))), CustomConstraint(lambda n: NonzeroQ(S(3)*n + S(1))))
    rule507 = ReplacementRule(pattern507, lambda n2, n, c, x, b, a : b*n*x*sqrt(a + b*x**n + c*x**(S(2)*n))/((b + S(2)*c*x**n)*(n + S(1))) + x*sqrt(a + b*x**n + c*x**(S(2)*n))/(n + S(1)))
    rubi.add(rule507)

    pattern508 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule508 = ReplacementRule(pattern508, lambda n2, n, c, x, p, b, a : -Subst(Int((a + b*x**(-n) + c*x**(-S(2)*n))**p/x**S(2), x), x, 1/x))
    rubi.add(rule508)

    pattern509 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))))
    rule509 = ReplacementRule(pattern509, lambda n2, n, c, x, p, b, a : S(2)*a*n**S(2)*p*(S(2)*p + S(-1))*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((S(2)*n*p + S(1))*(n*(S(2)*p + S(-1)) + S(1))) + n*p*x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/((S(2)*n*p + S(1))*(n*(S(2)*p + S(-1)) + S(1))) + x*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*n*p + S(1)))
    rubi.add(rule509)

    pattern510 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*(p + S(1)) + S(1))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule510 = ReplacementRule(pattern510, lambda n2, n, c, x, p, b, a : -x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*n*(S(2)*p + S(1))) + x*(-n*(S(2)*p + S(1)) + S(-1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*a*n**S(2)*(p + S(1))*(S(2)*p + S(1))) + (S(2)*n*(p + S(1)) + S(1))*(n*(S(2)*p + S(1)) + S(1))*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(S(2)*a*n**S(2)*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule510)

    pattern511 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule511 = ReplacementRule(pattern511, lambda n2, n, c, x, p, b, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b/S(2) + c*x**n)**(S(2)*p), x))
    rubi.add(rule511)

    pattern512 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule512 = ReplacementRule(pattern512, lambda n2, n, c, x, p, b, a : -Subst(Int((a + b*x**(-n) + c*x**(-S(2)*n))**p/x**S(2), x), x, 1/x))
    rubi.add(rule512)

    pattern513 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule513 = ReplacementRule(pattern513, lambda n2, n, c, x, p, b, a : Int(ExpandIntegrand((a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule513)

    pattern514 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule514 = ReplacementRule(pattern514, lambda n2, n, c, x, p, b, a : n*p*Int((S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(S(2)*n*p + S(1)) + x*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*n*p + S(1)))
    rubi.add(rule514)

    pattern515 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule515 = ReplacementRule(pattern515, lambda n2, n, c, x, p, b, a : -x*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n*(n*(S(2)*p + S(3)) + S(1)) + n*(p + S(1))*(-S(4)*a*c + b**S(2))), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule515)

    pattern516 = Pattern(Integral(1/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With516(n2, n, c, x, b, a):
        q = Rt(a/c, S(2))
        return With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int((r - x**(n/S(2)))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r) + Int((r + x**(n/S(2)))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r))
    rule516 = ReplacementRule(pattern516, lambda n2, n, c, x, b, a : With516(n2, n, c, x, b, a))
    rubi.add(rule516)

    pattern517 = Pattern(Integral(1/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), )
    def With517(n2, n, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return c*Int(1/(b/S(2) + c*x**n - q/S(2)), x)/q - c*Int(1/(b/S(2) + c*x**n + q/S(2)), x)/q
    rule517 = ReplacementRule(pattern517, lambda n2, n, c, x, b, a : With517(n2, n, c, x, b, a))
    rubi.add(rule517)

    pattern518 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)), )
    def With518(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*sqrt(-c)*Int(S(1)/(sqrt(-b - S(2)*c*x**S(2) + q)*sqrt(b + S(2)*c*x**S(2) + q)), x)
    rule518 = ReplacementRule(pattern518, lambda c, x, b, a : With518(c, x, b, a))
    rubi.add(rule518)

    pattern519 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PositiveQ(c/a)), CustomConstraint(lambda b, a: NegativeQ(b/a)), )
    def With519(c, x, b, a):
        q = Rt(c/a, S(4))
        return sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(q**S(2)*x**S(2) + S(1))*EllipticF(S(2)*atan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)/(S(2)*q*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule519 = ReplacementRule(pattern519, lambda c, x, b, a : With519(c, x, b, a))
    rubi.add(rule519)

    pattern520 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda c, b, x, q, a: IntegerQ(q)))
    def With520(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt((S(2)*a + x**S(2)*(b + q))/q)*sqrt(-S(2)*a - x**S(2)*(b - q))*EllipticF(asin(sqrt(S(2))*x/sqrt((S(2)*a + x**S(2)*(b + q))/q)), (b + q)/(S(2)*q))/(S(2)*sqrt(-a)*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule520 = ReplacementRule(pattern520, lambda c, x, b, a : With520(c, x, b, a))
    rubi.add(rule520)

    pattern521 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), )
    def With521(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt((S(2)*a + x**S(2)*(b + q))/q)*sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))*EllipticF(asin(sqrt(S(2))*x/sqrt((S(2)*a + x**S(2)*(b + q))/q)), (b + q)/(S(2)*q))/(S(2)*sqrt(a/(S(2)*a + x**S(2)*(b + q)))*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule521 = ReplacementRule(pattern521, lambda c, x, b, a : With521(c, x, b, a))
    rubi.add(rule521)

    pattern522 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: PosQ((b + q)/a) & Not(PosQ((b - q)/a) & SimplerSqrtQ((b - q)/(S(2)*a), (b + q)/(S(2)*a)))))
    def With522(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))*(S(2)*a + x**S(2)*(b + q))*EllipticF(atan(x*Rt((b + q)/(S(2)*a), S(2))), S(2)*q/(b + q))/(S(2)*a*sqrt(a + b*x**S(2) + c*x**S(4))*Rt((b + q)/(S(2)*a), S(2)))
    rule522 = ReplacementRule(pattern522, lambda c, x, b, a : With522(c, x, b, a))
    rubi.add(rule522)

    pattern523 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: PosQ((b - q)/a)))
    def With523(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*a + x**S(2)*(b - q)))*(S(2)*a + x**S(2)*(b - q))*EllipticF(atan(x*Rt((b - q)/(S(2)*a), S(2))), -S(2)*q/(b - q))/(S(2)*a*sqrt(a + b*x**S(2) + c*x**S(4))*Rt((b - q)/(S(2)*a), S(2)))
    rule523 = ReplacementRule(pattern523, lambda c, x, b, a : With523(c, x, b, a))
    rubi.add(rule523)

    pattern524 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: NegQ((b + q)/a) & Not(NegQ((b - q)/a) & SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a)))))
    def With524(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))*EllipticF(asin(x*Rt((-b - q)/(S(2)*a), S(2))), (b - q)/(b + q))/(sqrt(a + b*x**S(2) + c*x**S(4))*Rt((-b - q)/(S(2)*a), S(2)))
    rule524 = ReplacementRule(pattern524, lambda c, x, b, a : With524(c, x, b, a))
    rubi.add(rule524)

    pattern525 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: NegQ((b - q)/a)))
    def With525(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))*EllipticF(asin(x*Rt((-b + q)/(S(2)*a), S(2))), (b + q)/(b - q))/(sqrt(a + b*x**S(2) + c*x**S(4))*Rt((-b + q)/(S(2)*a), S(2)))
    rule525 = ReplacementRule(pattern525, lambda c, x, b, a : With525(c, x, b, a))
    rubi.add(rule525)

    pattern526 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), )
    def With526(c, x, b, a):
        q = Rt(c/a, S(4))
        return sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(q**S(2)*x**S(2) + S(1))*EllipticF(S(2)*atan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)/(S(2)*q*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule526 = ReplacementRule(pattern526, lambda c, x, b, a : With526(c, x, b, a))
    rubi.add(rule526)

    pattern527 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: NegQ(c/a)), )
    def With527(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))*Int(S(1)/(sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)/sqrt(a + b*x**S(2) + c*x**S(4))
    rule527 = ReplacementRule(pattern527, lambda c, x, b, a : With527(c, x, b, a))
    rubi.add(rule527)

    pattern528 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)))
    rule528 = ReplacementRule(pattern528, lambda n2, n, c, x, p, b, a : a**IntPart(p)*(S(2)*c*x**n/(b - Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(S(2)*c*x**n/(b + Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((S(2)*c*x**n/(b - sqrt(-S(4)*a*c + b**S(2))) + S(1))**p*(S(2)*c*x**n/(b + sqrt(-S(4)*a*c + b**S(2))) + S(1))**p, x))
    rubi.add(rule528)

    pattern529 = Pattern(Integral((a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n: PosQ(n)))
    rule529 = ReplacementRule(pattern529, lambda n, mn, c, x, p, b, a : Int(x**(-n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule529)

    pattern530 = Pattern(Integral((a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: PosQ(n)))
    rule530 = ReplacementRule(pattern530, lambda n, mn, c, x, p, b, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(-n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule530)

    pattern531 = Pattern(Integral((a_ + u_**n_*WC('b', S(1)) + u_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule531 = ReplacementRule(pattern531, lambda n2, n, c, x, p, b, u, a : Subst(Int((a + b*x**n + c*x**(S(2)*n))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule531)

    pattern532 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule532 = ReplacementRule(pattern532, lambda n2, n, c, x, m, p, b, a : Subst(Int((a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule532)

    pattern533 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, m: Not(IntegerQ((m + S(1))/n))))
    rule533 = ReplacementRule(pattern533, lambda n2, n, d, c, x, m, p, b, a : Int(ExpandIntegrand((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule533)

    pattern534 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda p: NegativeIntegerQ(p)), CustomConstraint(lambda n: NegQ(n)))
    rule534 = ReplacementRule(pattern534, lambda n2, n, c, x, m, p, b, a : Int(x**(m + S(2)*n*p)*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule534)

    pattern535 = Pattern(Integral(sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))))
    rule535 = ReplacementRule(pattern535, lambda n2, n, c, x, b, a : b*sqrt(a + b*x**n + c*x**(S(2)*n))*log(x)/(b + S(2)*c*x**n) + sqrt(a + b*x**n + c*x**(S(2)*n))/n)
    rubi.add(rule535)

    pattern536 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))))
    rule536 = ReplacementRule(pattern536, lambda n2, n, c, x, p, b, a : a*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/x, x) + (S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(S(2)*n*(S(2)*p + S(-1))) + (a + b*x**n + c*x**(S(2)*n))**p/(S(2)*n*p))
    rubi.add(rule536)

    pattern537 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule537 = ReplacementRule(pattern537, lambda n2, n, c, x, p, b, a : Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1))/x, x)/a - (S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*n*(S(2)*p + S(1))) - (a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*a*n*(p + S(1))))
    rubi.add(rule537)

    pattern538 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule538 = ReplacementRule(pattern538, lambda n2, n, c, x, p, b, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b/S(2) + c*x**n)**(S(2)*p)/x, x))
    rubi.add(rule538)

    pattern539 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m, p: ZeroQ(m + n*(S(2)*p + S(1)) + S(1))))
    rule539 = ReplacementRule(pattern539, lambda n2, n, d, c, x, m, p, b, a : (d*x)**(m + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(b*d*(m + S(1))))
    rubi.add(rule539)

    pattern540 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))))
    rule540 = ReplacementRule(pattern540, lambda n2, n, d, c, x, m, b, a : sqrt(a + b*x**n + c*x**(S(2)*n))*Int((d*x)**m*(b + S(2)*c*x**n), x)/(b + S(2)*c*x**n))
    rubi.add(rule540)

    pattern541 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))))
    rule541 = ReplacementRule(pattern541, lambda n2, n, d, c, x, m, b, a : b*n*(d*x)**(m + S(1))*sqrt(a + b*x**n + c*x**(S(2)*n))/(d*(b + S(2)*c*x**n)*(m + S(1))*(m + n + S(1))) + (d*x)**(m + S(1))*sqrt(a + b*x**n + c*x**(S(2)*n))/(d*(m + n + S(1))))
    rubi.add(rule541)

    pattern542 = Pattern(Integral(x_**WC('m', S(1))/sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))))
    rule542 = ReplacementRule(pattern542, lambda n2, n, c, x, m, b, a : -b*Int(S(1)/(x*sqrt(a + b*x**n + c*x**(S(2)*n))), x)/(S(2)*a) - x**(m + S(1))*sqrt(a + b*x**n + c*x**(S(2)*n))/(a*n))
    rubi.add(rule542)

    pattern543 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m, p: ZeroQ(m + S(2)*n*(p + S(1)) + S(1))), CustomConstraint(lambda p: NonzeroQ(S(2)*p + S(1))))
    rule543 = ReplacementRule(pattern543, lambda n2, n, d, c, x, m, p, b, a : -(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*d*n*(S(2)*p + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*a*d*n*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule543)

    pattern544 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m - S(2)*n + S(1))), CustomConstraint(lambda p: NonzeroQ(p + S(3)/2)))
    rule544 = ReplacementRule(pattern544, lambda n2, n, c, x, m, p, b, a : -b*Int(x**(n + S(-1))*(a + b*x**n + c*x**(S(2)*n))**p, x)/(S(2)*c) + (a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*c*n*(p + S(1))))
    rubi.add(rule544)

    pattern545 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda n, m: Inequality(S(-1), LessEqual, m + n, Less, S(0))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda m: IntegerQ(m)))
    rule545 = ReplacementRule(pattern545, lambda n2, n, d, c, x, m, p, b, a : -b*d**(-n)*n**S(2)*p*(S(2)*p + S(-1))*Int((d*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((m + S(1))*(m + S(2)*n*p + S(1))) + n*p*(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d*(m + S(1))*(m + S(2)*n*p + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(2)*n*p + S(1))))
    rubi.add(rule545)

    pattern546 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda n, m: Less(m + n, S(-1))), CustomConstraint(lambda n, m, p: Not(NegativeIntegerQ((m + S(2)*n*(p + S(1)) + S(1))/n) & Greater(p + (m + S(2)*n*(p + S(1)) + S(1))/n, S(0)))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda m: IntegerQ(m)))
    rule546 = ReplacementRule(pattern546, lambda n2, n, d, c, x, m, p, b, a : S(2)*c*d**(-S(2)*n)*n**S(2)*p*(S(2)*p + S(-1))*Int((d*x)**(m + S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((m + S(1))*(m + n + S(1))) + n*p*(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d*(m + S(1))*(m + n + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p*(m - n*(S(2)*p + S(-1)) + S(1))/(d*(m + S(1))*(m + n + S(1))))
    rubi.add(rule546)

    pattern547 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda n, m, p: Not(NegativeIntegerQ((m + S(2)*n*(p + S(1)) + S(1))/n) & Greater(p + (m + S(2)*n*(p + S(1)) + S(1))/n, S(0)))), CustomConstraint(lambda n, m, p: Not(PositiveIntegerQ(m) & IntegerQ((m + S(1))/n) & Less(S(-1) + (m + S(1))/n, S(2)*p))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule547 = ReplacementRule(pattern547, lambda n2, n, d, c, x, m, p, b, a : S(2)*a*n**S(2)*p*(S(2)*p + S(-1))*Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))) + n*p*(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(2)*n*p + S(1))))
    rubi.add(rule547)

    pattern548 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule548 = ReplacementRule(pattern548, lambda n2, n, d, c, x, m, p, b, a : -d**n*(m - n + S(1))*(m + n*(S(2)*p + S(1)) + S(1))*Int((d*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(b*n**S(2)*(p + S(1))*(S(2)*p + S(1))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))/(b*n**S(2)*(p + S(1))*(S(2)*p + S(1))) - (d*x)**(m + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(b*d*n*(S(2)*p + S(1))))
    rubi.add(rule548)

    pattern549 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule549 = ReplacementRule(pattern549, lambda n2, n, d, c, x, m, p, b, a : d**(S(2)*n)*(m - S(2)*n + S(1))*(m - n + S(1))*Int((d*x)**(m - S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(S(2)*c*n**S(2)*(p + S(1))*(S(2)*p + S(1))) - d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*c*n*(S(2)*p + S(1))) - d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(m - S(2)*n*p - S(3)*n + S(1))/(S(2)*c*n**S(2)*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule549)

    pattern550 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule550 = ReplacementRule(pattern550, lambda n2, n, d, c, x, m, p, b, a : (m + S(2)*n*(p + S(1)) + S(1))*(m + n*(S(2)*p + S(1)) + S(1))*Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(S(2)*a*n**S(2)*(p + S(1))*(S(2)*p + S(1))) - (d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*d*n*(S(2)*p + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-m - n*(S(2)*p + S(1)) + S(-1))/(S(2)*a*d*n**S(2)*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule550)

    pattern551 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(S(2)*p) | PositiveIntegerQ((m + S(1))/n)))
    rule551 = ReplacementRule(pattern551, lambda n2, n, d, c, x, m, p, b, a : -b*d**n*(m - n + S(1))*Int((d*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**p, x)/(S(2)*c*(m + S(2)*n*p + S(1))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*c*(m + S(2)*n*p + S(1))))
    rubi.add(rule551)

    pattern552 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(S(2)*p) | PositiveIntegerQ((m + S(1))/n)))
    rule552 = ReplacementRule(pattern552, lambda n2, n, d, c, x, m, p, b, a : -S(2)*c*d**(-n)*(m + n*(S(2)*p + S(1)) + S(1))*Int((d*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**p, x)/(b*(m + S(1))) + (d*x)**(m + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(b*d*(m + S(1))))
    rubi.add(rule552)

    pattern553 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule553 = ReplacementRule(pattern553, lambda n2, n, c, x, m, p, b, a : -Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule553)

    pattern554 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), )
    def With554(n2, n, d, c, x, m, p, b, a):
        k = Denominator(m)
        return -k*Subst(Int(x**(-k*(m + S(1)) + S(-1))*(a + b*d**(-n)*x**(-k*n) + c*d**(-S(2)*n)*x**(-S(2)*k*n))**p, x), x, (d*x)**(-S(1)/k))/d
    rule554 = ReplacementRule(pattern554, lambda n2, n, d, c, x, m, p, b, a : With554(n2, n, d, c, x, m, p, b, a))
    rubi.add(rule554)

    pattern555 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: Not(RationalQ(m))))
    rule555 = ReplacementRule(pattern555, lambda n2, n, d, c, x, m, p, b, a : -d**IntPart(m)*(d*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule555)

    pattern556 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule556 = ReplacementRule(pattern556, lambda n2, n, d, c, x, m, p, b, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d*x)**m*(b/S(2) + c*x**n)**(S(2)*p), x))
    rubi.add(rule556)

    pattern557 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule557 = ReplacementRule(pattern557, lambda n2, n, c, x, m, p, b, a : Subst(Int(x**(S(-1) + (m + S(1))/n)*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule557)

    pattern558 = Pattern(Integral((d_*x_)**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule558 = ReplacementRule(pattern558, lambda n2, n, d, c, x, m, p, b, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule558)

    pattern559 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda c, n, b, p, k, m, x, a: Unequal(k, S(1))))
    def With559(n2, n, c, x, m, p, b, a):
        k = GCD(m + S(1), n)
        return Subst(Int(x**(S(-1) + (m + S(1))/k)*(a + b*x**(n/k) + c*x**(S(2)*n/k))**p, x), x, x**k)/k
    rule559 = ReplacementRule(pattern559, lambda n2, n, c, x, m, p, b, a : With559(n2, n, c, x, m, p, b, a))
    rubi.add(rule559)

    pattern560 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)), )
    def With560(n2, n, d, c, x, m, p, b, a):
        k = Denominator(m)
        return k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(a + b*d**(-n)*x**(k*n) + c*d**(-S(2)*n)*x**(S(2)*k*n))**p, x), x, (d*x)**(1/k))/d
    rule560 = ReplacementRule(pattern560, lambda n2, n, d, c, x, m, p, b, a : With560(n2, n, d, c, x, m, p, b, a))
    rubi.add(rule560)

    pattern561 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: Unequal(m + S(2)*n*p + S(1), S(0))), CustomConstraint(lambda n, m, p: Unequal(m + n*(S(2)*p + S(-1)) + S(1), S(0))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule561 = ReplacementRule(pattern561, lambda n2, n, d, c, x, m, p, b, a : -d**n*n*p*Int((d*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(a*b*(m - n + S(1)) - x**n*(S(2)*a*c*(m + n*(S(2)*p + S(-1)) + S(1)) - b**S(2)*(m + n*(p + S(-1)) + S(1))), x), x)/(c*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(b*n*p + c*x**n*(m + n*(S(2)*p + S(-1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**p/(c*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))))
    rubi.add(rule561)

    pattern562 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule562 = ReplacementRule(pattern562, lambda n2, n, d, c, x, m, p, b, a : -d**(-n)*n*p*Int((d*x)**(m + n)*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(m + S(1)) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(1))))
    rubi.add(rule562)

    pattern563 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule563 = ReplacementRule(pattern563, lambda n2, n, d, c, x, m, p, b, a : n*p*Int((d*x)**m*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(m + S(2)*n*p + S(1)) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(2)*n*p + S(1))))
    rubi.add(rule563)

    pattern564 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule564 = ReplacementRule(pattern564, lambda n2, n, d, c, x, m, p, b, a : -d**n*Int((d*x)**(m - n)*(b*(m - n + S(1)) + S(2)*c*x**n*(m + S(2)*n*(p + S(1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(n*(p + S(1))*(-S(4)*a*c + b**S(2))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule564)

    pattern565 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule565 = ReplacementRule(pattern565, lambda n2, n, d, c, x, m, p, b, a : d**(S(2)*n)*Int((d*x)**(m - S(2)*n)*(S(2)*a*(m - S(2)*n + S(1)) + b*x**n*(m + n*(S(2)*p + S(1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(n*(p + S(1))*(-S(4)*a*c + b**S(2))) - d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule565)

    pattern566 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule566 = ReplacementRule(pattern566, lambda n2, n, d, c, x, m, p, b, a : Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1)) + b*c*x**n*(m + S(2)*n*p + S(3)*n + S(1)), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n)/(a*d*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule566)

    pattern567 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule567 = ReplacementRule(pattern567, lambda n2, n, d, c, x, m, p, b, a : -d**(S(2)*n)*Int((d*x)**(m - S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**p*Simp(a*(m - S(2)*n + S(1)) + b*x**n*(m + n*(p + S(-1)) + S(1)), x), x)/(c*(m + S(2)*n*p + S(1))) + d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(m + S(2)*n*p + S(1))))
    rubi.add(rule567)

    pattern568 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule568 = ReplacementRule(pattern568, lambda n2, n, d, c, x, m, p, b, a : -d**(-n)*Int((d*x)**(m + n)*(b*(m + n*(p + S(1)) + S(1)) + c*x**n*(m + S(2)*n*(p + S(1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**p, x)/(a*(m + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(a*d*(m + S(1))))
    rubi.add(rule568)

    pattern569 = Pattern(Integral((x_*WC('d', S(1)))**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule569 = ReplacementRule(pattern569, lambda n2, n, d, c, x, m, b, a : -d**(-n)*Int((d*x)**(m + n)*(b + c*x**n)/(a + b*x**n + c*x**(S(2)*n)), x)/a + (d*x)**(m + S(1))/(a*d*(m + S(1))))
    rubi.add(rule569)

    pattern570 = Pattern(Integral(x_**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n, m: Greater(m, S(3)*n + S(-1))))
    rule570 = ReplacementRule(pattern570, lambda n2, n, c, x, m, b, a : Int(PolynomialDivide(x**m, a + b*x**n + c*x**(S(2)*n), x), x))
    rubi.add(rule570)

    pattern571 = Pattern(Integral((x_*WC('d', S(1)))**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule571 = ReplacementRule(pattern571, lambda n2, n, d, c, x, m, b, a : -d**(S(2)*n)*Int((d*x)**(m - S(2)*n)*(a + b*x**n)/(a + b*x**n + c*x**(S(2)*n)), x)/c + d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))/(c*(m - S(2)*n + S(1))))
    rubi.add(rule571)

    pattern572 = Pattern(Integral(x_**S(2)/(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NegativeQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PosQ(a*c)), )
    def With572(c, x, b, a):
        q = Rt(a/c, S(2))
        return -Int((q - x**S(2))/(a + b*x**S(2) + c*x**S(4)), x)/S(2) + Int((q + x**S(2))/(a + b*x**S(2) + c*x**S(4)), x)/S(2)
    rule572 = ReplacementRule(pattern572, lambda c, x, b, a : With572(c, x, b, a))
    rubi.add(rule572)

    pattern573 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(n/S(2), m)), CustomConstraint(lambda n, m: Inequality(S(3)*n/S(2), LessEqual, m, Less, S(2)*n)), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With573(n2, n, c, x, m, b, a):
        q = Rt(a/c, S(2))
        return With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), -Int(x**(m - S(3)*n/S(2))*(q - r*x**(n/S(2)))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*r) + Int(x**(m - S(3)*n/S(2))*(q + r*x**(n/S(2)))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*r))
    rule573 = ReplacementRule(pattern573, lambda n2, n, c, x, m, b, a : With573(n2, n, c, x, m, b, a))
    rubi.add(rule573)

    pattern574 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(n/S(2), m)), CustomConstraint(lambda n, m: Inequality(n/S(2), LessEqual, m, Less, S(3)*n/S(2))), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With574(n2, n, c, x, m, b, a):
        q = Rt(a/c, S(2))
        return With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int(x**(m - n/S(2))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*r) - Int(x**(m - n/S(2))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*r))
    rule574 = ReplacementRule(pattern574, lambda n2, n, c, x, m, b, a : With574(n2, n, c, x, m, b, a))
    rubi.add(rule574)

    pattern575 = Pattern(Integral((x_*WC('d', S(1)))**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: GreaterEqual(m, n)), )
    def With575(n2, n, d, c, x, m, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -d**n*(b/q + S(-1))*Int((d*x)**(m - n)/(b/S(2) + c*x**n - q/S(2)), x)/S(2) + d**n*(b/q + S(1))*Int((d*x)**(m - n)/(b/S(2) + c*x**n + q/S(2)), x)/S(2)
    rule575 = ReplacementRule(pattern575, lambda n2, n, d, c, x, m, b, a : With575(n2, n, d, c, x, m, b, a))
    rubi.add(rule575)

    pattern576 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), )
    def With576(n2, n, d, c, x, m, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return c*Int((d*x)**m/(b/S(2) + c*x**n - q/S(2)), x)/q - c*Int((d*x)**m/(b/S(2) + c*x**n + q/S(2)), x)/q
    rule576 = ReplacementRule(pattern576, lambda n2, n, d, c, x, m, b, a : With576(n2, n, d, c, x, m, b, a))
    rubi.add(rule576)

    pattern577 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)), )
    def With577(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*sqrt(-c)*Int(x**S(2)/(sqrt(-b - S(2)*c*x**S(2) + q)*sqrt(b + S(2)*c*x**S(2) + q)), x)
    rule577 = ReplacementRule(pattern577, lambda c, x, b, a : With577(c, x, b, a))
    rubi.add(rule577)

    pattern578 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PositiveQ(c/a)), CustomConstraint(lambda b, a: NegativeQ(b/a)), )
    def With578(c, x, b, a):
        q = Rt(c/a, S(2))
        return -Int((-q*x**S(2) + S(1))/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q
    rule578 = ReplacementRule(pattern578, lambda c, x, b, a : With578(c, x, b, a))
    rubi.add(rule578)

    pattern579 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), )
    def With579(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (-b + q)*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + Int((b + S(2)*c*x**S(2) - q)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)
    rule579 = ReplacementRule(pattern579, lambda c, x, b, a : With579(c, x, b, a))
    rubi.add(rule579)

    pattern580 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: PosQ((b + q)/a) & Not(PosQ((b - q)/a) & SimplerSqrtQ((b - q)/(S(2)*a), (b + q)/(S(2)*a)))))
    def With580(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return x*(b + S(2)*c*x**S(2) + q)/(S(2)*c*sqrt(a + b*x**S(2) + c*x**S(4))) - sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))*(S(2)*a + x**S(2)*(b + q))*EllipticE(atan(x*Rt((b + q)/(S(2)*a), S(2))), S(2)*q/(b + q))*Rt((b + q)/(S(2)*a), S(2))/(S(2)*c*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule580 = ReplacementRule(pattern580, lambda c, x, b, a : With580(c, x, b, a))
    rubi.add(rule580)

    pattern581 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: PosQ((b - q)/a)))
    def With581(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return x*(b + S(2)*c*x**S(2) - q)/(S(2)*c*sqrt(a + b*x**S(2) + c*x**S(4))) - sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*a + x**S(2)*(b - q)))*(S(2)*a + x**S(2)*(b - q))*EllipticE(atan(x*Rt((b - q)/(S(2)*a), S(2))), -S(2)*q/(b - q))*Rt((b - q)/(S(2)*a), S(2))/(S(2)*c*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule581 = ReplacementRule(pattern581, lambda c, x, b, a : With581(c, x, b, a))
    rubi.add(rule581)

    pattern582 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: NegQ((b + q)/a) & Not(NegQ((b - q)/a) & SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a)))))
    def With582(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (-b - q)*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + Int((b + S(2)*c*x**S(2) + q)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)
    rule582 = ReplacementRule(pattern582, lambda c, x, b, a : With582(c, x, b, a))
    rubi.add(rule582)

    pattern583 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, q, a: NegQ((b - q)/a)))
    def With583(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (-b + q)*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + Int((b + S(2)*c*x**S(2) - q)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)
    rule583 = ReplacementRule(pattern583, lambda c, x, b, a : With583(c, x, b, a))
    rubi.add(rule583)

    pattern584 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), )
    def With584(c, x, b, a):
        q = Rt(c/a, S(2))
        return -Int((-q*x**S(2) + S(1))/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q
    rule584 = ReplacementRule(pattern584, lambda c, x, b, a : With584(c, x, b, a))
    rubi.add(rule584)

    pattern585 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: NegQ(c/a)), )
    def With585(c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))*Int(x**S(2)/(sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)/sqrt(a + b*x**S(2) + c*x**S(4))
    rule585 = ReplacementRule(pattern585, lambda c, x, b, a : With585(c, x, b, a))
    rubi.add(rule585)

    pattern586 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule586 = ReplacementRule(pattern586, lambda n2, n, c, x, m, p, b, a : -Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule586)

    pattern587 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), )
    def With587(n2, n, d, c, x, m, p, b, a):
        k = Denominator(m)
        return -k*Subst(Int(x**(-k*(m + S(1)) + S(-1))*(a + b*d**(-n)*x**(-k*n) + c*d**(-S(2)*n)*x**(-S(2)*k*n))**p, x), x, (d*x)**(-S(1)/k))/d
    rule587 = ReplacementRule(pattern587, lambda n2, n, d, c, x, m, p, b, a : With587(n2, n, d, c, x, m, p, b, a))
    rubi.add(rule587)

    pattern588 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: Not(RationalQ(m))))
    rule588 = ReplacementRule(pattern588, lambda n2, n, d, c, x, m, p, b, a : -d**IntPart(m)*(d*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule588)

    pattern589 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)), )
    def With589(n2, n, c, x, m, p, b, a):
        k = Denominator(n)
        return k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(a + b*x**(k*n) + c*x**(S(2)*k*n))**p, x), x, x**(1/k))
    rule589 = ReplacementRule(pattern589, lambda n2, n, c, x, m, p, b, a : With589(n2, n, c, x, m, p, b, a))
    rubi.add(rule589)

    pattern590 = Pattern(Integral((d_*x_)**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)))
    rule590 = ReplacementRule(pattern590, lambda n2, n, d, c, x, m, p, b, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule590)

    pattern591 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(n/(m + S(1)))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule591 = ReplacementRule(pattern591, lambda n2, n, c, x, m, p, b, a : Subst(Int((a + b*x**(n/(m + S(1))) + c*x**(S(2)*n/(m + S(1))))**p, x), x, x**(m + S(1)))/(m + S(1)))
    rubi.add(rule591)

    pattern592 = Pattern(Integral((d_*x_)**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(n/(m + S(1)))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule592 = ReplacementRule(pattern592, lambda n2, n, d, c, x, m, p, b, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule592)

    pattern593 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), )
    def With593(n2, n, d, c, x, m, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*c*Int((d*x)**m/(b + S(2)*c*x**n - q), x)/q - S(2)*c*Int((d*x)**m/(b + S(2)*c*x**n + q), x)/q
    rule593 = ReplacementRule(pattern593, lambda n2, n, d, c, x, m, b, a : With593(n2, n, d, c, x, m, b, a))
    rubi.add(rule593)

    pattern594 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1))))
    rule594 = ReplacementRule(pattern594, lambda n2, n, d, c, x, m, p, b, a : Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1)) + b*c*x**n*(m + S(2)*n*p + S(3)*n + S(1)), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n)/(a*d*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule594)

    pattern595 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)))
    rule595 = ReplacementRule(pattern595, lambda n2, n, d, c, x, m, p, b, a : a**IntPart(p)*(S(2)*c*x**n/(b - Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(S(2)*c*x**n/(b + Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d*x)**m*(S(2)*c*x**n/(b - sqrt(-S(4)*a*c + b**S(2))) + S(1))**p*(S(2)*c*x**n/(b + sqrt(-S(4)*a*c + b**S(2))) + S(1))**p, x))
    rubi.add(rule595)

    pattern596 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n: PosQ(n)))
    rule596 = ReplacementRule(pattern596, lambda n, mn, c, x, m, p, b, a : Int(x**(m - n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule596)

    pattern597 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: PosQ(n)))
    rule597 = ReplacementRule(pattern597, lambda n, mn, c, x, m, p, b, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(m - n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule597)

    pattern598 = Pattern(Integral((d_*x_)**WC('m', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)))
    rule598 = ReplacementRule(pattern598, lambda n, mn, d, c, x, m, p, b, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**(-n) + c*x**n)**p, x))
    rubi.add(rule598)

    pattern599 = Pattern(Integral(x_**WC('m', S(1))*(v_**n_*WC('b', S(1)) + v_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda x, v: LinearQ(v, x)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda x, v: NonzeroQ(v - x)))
    rule599 = ReplacementRule(pattern599, lambda n2, n, c, x, v, m, p, b, a : Coefficient(v, x, S(1))**(-m + S(-1))*Subst(Int(SimplifyIntegrand((x - Coefficient(v, x, S(0)))**m*(a + b*x**n + c*x**(S(2)*n))**p, x), x), x, v))
    rubi.add(rule599)

    pattern600 = Pattern(Integral(u_**WC('m', S(1))*(v_**n_*WC('b', S(1)) + v_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda x, v, u: LinearPairQ(u, v, x)))
    rule600 = ReplacementRule(pattern600, lambda n2, n, u, c, x, v, m, p, b, a : u**m*v**(-m)*Subst(Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x), x, v)/Coefficient(v, x, S(1)))
    rubi.add(rule600)

    pattern601 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule601 = ReplacementRule(pattern601, lambda n2, n, e, d, c, x, p, q, b, a : Int(x**(n*(S(2)*p + q))*(d*x**(-n) + e)**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule601)

    pattern602 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule602 = ReplacementRule(pattern602, lambda n2, n, e, d, c, x, p, q, a : Int(x**(n*(S(2)*p + q))*(a*x**(-S(2)*n) + c)**p*(d*x**(-n) + e)**q, x))
    rubi.add(rule602)

    pattern603 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule603 = ReplacementRule(pattern603, lambda n2, n, e, d, c, x, p, q, b, a : -Subst(Int((d + e*x**(-n))**q*(a + b*x**(-n) + c*x**(-S(2)*n))**p/x**S(2), x), x, 1/x))
    rubi.add(rule603)

    pattern604 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule604 = ReplacementRule(pattern604, lambda n2, n, e, d, c, x, p, q, a : -Subst(Int((a + c*x**(-S(2)*n))**p*(d + e*x**(-n))**q/x**S(2), x), x, 1/x))
    rubi.add(rule604)

    pattern605 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)), )
    def With605(n2, n, e, d, c, x, p, q, b, a):
        g = Denominator(n)
        return g*Subst(Int(x**(g + S(-1))*(d + e*x**(g*n))**q*(a + b*x**(g*n) + c*x**(S(2)*g*n))**p, x), x, x**(1/g))
    rule605 = ReplacementRule(pattern605, lambda n2, n, e, d, c, x, p, q, b, a : With605(n2, n, e, d, c, x, p, q, b, a))
    rubi.add(rule605)

    pattern606 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)), )
    def With606(n2, n, e, d, c, x, p, q, a):
        g = Denominator(n)
        return g*Subst(Int(x**(g + S(-1))*(a + c*x**(S(2)*g*n))**p*(d + e*x**(g*n))**q, x), x, x**(1/g))
    rule606 = ReplacementRule(pattern606, lambda n2, n, e, d, c, x, p, q, a : With606(n2, n, e, d, c, x, p, q, a))
    rubi.add(rule606)

    pattern607 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: ZeroQ(n*(S(2)*p + S(1)) + S(1))))
    rule607 = ReplacementRule(pattern607, lambda n2, n, e, d, c, x, p, b : e*Int(x**(-n)*(b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/c + x**(-S(2)*n*(p + S(1)))*(b*e - c*d)*(b*x**n + c*x**(S(2)*n))**(p + S(1))/(b*c*n*(p + S(1))))
    rubi.add(rule607)

    pattern608 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, e, d, c, p, b: ZeroQ(b*e*(n*p + S(1)) - c*d*(n*(S(2)*p + S(1)) + S(1)))))
    rule608 = ReplacementRule(pattern608, lambda n2, n, e, d, c, x, p, b : e*x**(-n + S(1))*(b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule608)

    pattern609 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, e, d, c, p, b: NonzeroQ(b*e*(n*p + S(1)) - c*d*(n*(S(2)*p + S(1)) + S(1)))))
    rule609 = ReplacementRule(pattern609, lambda n2, n, e, d, c, x, p, b : e*x**(-n + S(1))*(b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(n*(S(2)*p + S(1)) + S(1))) - (b*e*(n*p + S(1)) - c*d*(n*(S(2)*p + S(1)) + S(1)))*Int((b*x**n + c*x**(S(2)*n))**p, x)/(c*(n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule609)

    pattern610 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule610 = ReplacementRule(pattern610, lambda n2, n, e, d, c, x, p, q, b : x**(-n*FracPart(p))*(b + c*x**n)**(-FracPart(p))*(b*x**n + c*x**(S(2)*n))**FracPart(p)*Int(x**(n*p)*(b + c*x**n)**p*(d + e*x**n)**q, x))
    rubi.add(rule610)

    pattern611 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule611 = ReplacementRule(pattern611, lambda n2, n, e, d, c, x, p, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b + S(2)*c*x**n)**(S(2)*p)*(d + e*x**n)**q, x))
    rubi.add(rule611)

    pattern612 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule612 = ReplacementRule(pattern612, lambda n2, n, e, d, c, x, p, q, b, a : Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule612)

    pattern613 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule613 = ReplacementRule(pattern613, lambda n2, n, e, d, c, x, p, q, a : Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule613)

    pattern614 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule614 = ReplacementRule(pattern614, lambda n2, n, e, d, c, x, p, q, b, a : (d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule614)

    pattern615 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule615 = ReplacementRule(pattern615, lambda n2, n, e, d, c, x, p, q, a : (a + c*x**(S(2)*n))**FracPart(p)*(d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule615)

    pattern616 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: PositiveIntegerQ(q)))
    rule616 = ReplacementRule(pattern616, lambda n2, n, e, d, c, x, q, b, a : Int(ExpandIntegrand((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule616)

    pattern617 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: PositiveIntegerQ(q)))
    rule617 = ReplacementRule(pattern617, lambda n2, n, e, d, c, x, q, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))*(d + e*x**n)**q, x), x))
    rubi.add(rule617)

    pattern618 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule618 = ReplacementRule(pattern618, lambda n2, n, e, d, c, x, q, b, a : x*(d + e*x**n)**(q + S(1))*(-a*e**S(2) + b*d*e - c*d**S(2))/(d*e**S(2)*n*(q + S(1))) + Int((d + e*x**n)**(q + S(1))*Simp(a*e**S(2)*(n*(q + S(1)) + S(1)) - b*d*e + c*d**S(2) + c*d*e*n*x**n*(q + S(1)), x), x)/(d*e**S(2)*n*(q + S(1))))
    rubi.add(rule618)

    pattern619 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule619 = ReplacementRule(pattern619, lambda n2, n, e, d, c, x, q, a : x*(d + e*x**n)**(q + S(1))*(-a*e**S(2) - c*d**S(2))/(d*e**S(2)*n*(q + S(1))) + Int((d + e*x**n)**(q + S(1))*Simp(a*e**S(2)*(n*(q + S(1)) + S(1)) + c*d**S(2) + c*d*e*n*x**n*(q + S(1)), x), x)/(d*e**S(2)*n*(q + S(1))))
    rubi.add(rule619)

    pattern620 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule620 = ReplacementRule(pattern620, lambda n2, n, e, d, c, x, q, b, a : c*x**(n + S(1))*(d + e*x**n)**(q + S(1))/(e*(n*(q + S(2)) + S(1))) + Int((d + e*x**n)**q*(a*e*(n*(q + S(2)) + S(1)) - x**n*(-b*e*(n*(q + S(2)) + S(1)) + c*d*(n + S(1)))), x)/(e*(n*(q + S(2)) + S(1))))
    rubi.add(rule620)

    pattern621 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule621 = ReplacementRule(pattern621, lambda n2, n, e, d, c, x, q, a : c*x**(n + S(1))*(d + e*x**n)**(q + S(1))/(e*(n*(q + S(2)) + S(1))) + Int((d + e*x**n)**q*(a*e*(n*(q + S(2)) + S(1)) - c*d*x**n*(n + S(1))), x)/(e*(n*(q + S(2)) + S(1))))
    rubi.add(rule621)

    pattern622 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda d, e: PosQ(d*e)), )
    def With622(n2, n, e, d, c, x, a):
        q = Rt(S(2)*d*e, S(2))
        return e**S(2)*Int(1/(d + e*x**n - q*x**(n/S(2))), x)/(S(2)*c) + e**S(2)*Int(1/(d + e*x**n + q*x**(n/S(2))), x)/(S(2)*c)
    rule622 = ReplacementRule(pattern622, lambda n2, n, e, d, c, x, a : With622(n2, n, e, d, c, x, a))
    rubi.add(rule622)

    pattern623 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda d, e: NegQ(d*e)), )
    def With623(n2, n, e, d, c, x, a):
        q = Rt(-S(2)*d*e, S(2))
        return d*Int((d - q*x**(n/S(2)))/(d - e*x**n - q*x**(n/S(2))), x)/(S(2)*a) + d*Int((d + q*x**(n/S(2)))/(d - e*x**n + q*x**(n/S(2))), x)/(S(2)*a)
    rule623 = ReplacementRule(pattern623, lambda n2, n, e, d, c, x, a : With623(n2, n, e, d, c, x, a))
    rubi.add(rule623)

    pattern624 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, c, e, a: NonzeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: PosQ(a*c)), )
    def With624(e, d, c, x, a):
        q = Rt(a*c, S(2))
        return (-a*e + d*q)*Int((-c*x**S(2) + q)/(a + c*x**S(4)), x)/(S(2)*a*c) + (a*e + d*q)*Int((c*x**S(2) + q)/(a + c*x**S(4)), x)/(S(2)*a*c)
    rule624 = ReplacementRule(pattern624, lambda e, d, c, x, a : With624(e, d, c, x, a))
    rubi.add(rule624)

    pattern625 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, c, e, a: NonzeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda c, a: PosQ(a*c)), )
    def With625(n2, n, e, d, c, x, a):
        q = Rt(a/c, S(4))
        return sqrt(S(2))*Int((sqrt(S(2))*d*q - x**(n/S(2))*(d - e*q**S(2)))/(q**S(2) - sqrt(S(2))*q*x**(n/S(2)) + x**n), x)/(S(4)*c*q**S(3)) + sqrt(S(2))*Int((sqrt(S(2))*d*q + x**(n/S(2))*(d - e*q**S(2)))/(q**S(2) + sqrt(S(2))*q*x**(n/S(2)) + x**n), x)/(S(4)*c*q**S(3))
    rule625 = ReplacementRule(pattern625, lambda n2, n, e, d, c, x, a : With625(n2, n, e, d, c, x, a))
    rubi.add(rule625)

    pattern626 = Pattern(Integral((d_ + x_**S(3)*WC('e', S(1)))/(a_ + x_**S(6)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), )
    def With626(e, d, c, x, a):
        q = Rt(c/a, S(6))
        return Int((d*q**S(2) - e*x)/(q**S(2)*x**S(2) + S(1)), x)/(S(3)*a*q**S(2)) + Int((S(2)*d*q**S(2) - x*(sqrt(S(3))*d*q**S(3) - e))/(q**S(2)*x**S(2) - sqrt(S(3))*q*x + S(1)), x)/(S(6)*a*q**S(2)) + Int((S(2)*d*q**S(2) + x*(sqrt(S(3))*d*q**S(3) + e))/(q**S(2)*x**S(2) + sqrt(S(3))*q*x + S(1)), x)/(S(6)*a*q**S(2))
    rule626 = ReplacementRule(pattern626, lambda e, d, c, x, a : With626(e, d, c, x, a))
    rubi.add(rule626)

    pattern627 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: NegQ(a*c)), CustomConstraint(lambda n: IntegerQ(n)), )
    def With627(n2, n, e, d, c, x, a):
        q = Rt(-a/c, S(2))
        return (d/S(2) - e*q/S(2))*Int(1/(a - c*q*x**n), x) + (d/S(2) + e*q/S(2))*Int(1/(a + c*q*x**n), x)
    rule627 = ReplacementRule(pattern627, lambda n2, n, e, d, c, x, a : With627(n2, n, e, d, c, x, a))
    rubi.add(rule627)

    pattern628 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, c, a: Not(IntegerQ(n)) | PosQ(a*c)))
    rule628 = ReplacementRule(pattern628, lambda n2, n, e, d, c, x, a : d*Int(1/(a + c*x**(S(2)*n)), x) + e*Int(x**n/(a + c*x**(S(2)*n)), x))
    rubi.add(rule628)

    pattern629 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda e, d, c, b, a: PositiveQ(-b/c + S(2)*d/e) | (ZeroQ(d - e*Rt(a/c, S(2))) & Not(NegativeQ(-b/c + S(2)*d/e)))), )
    def With629(n2, n, e, d, c, x, b, a):
        q = Rt(-b/c + S(2)*d/e, S(2))
        return e**S(2)*Int(1/(d - e*q*x**(n/S(2)) + e*x**n), x)/(S(2)*c) + e**S(2)*Int(1/(d + e*q*x**(n/S(2)) + e*x**n), x)/(S(2)*c)
    rule629 = ReplacementRule(pattern629, lambda n2, n, e, d, c, x, b, a : With629(n2, n, e, d, c, x, b, a))
    rubi.add(rule629)

    pattern630 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), )
    def With630(n2, n, e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (e/S(2) - (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n + q/S(2)), x) + (e/S(2) + (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n - q/S(2)), x)
    rule630 = ReplacementRule(pattern630, lambda n2, n, e, d, c, x, b, a : With630(n2, n, e, d, c, x, b, a))
    rubi.add(rule630)

    pattern631 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda c, b, a: Not(PositiveQ(-S(4)*a*c + b**S(2)))), )
    def With631(n2, n, e, d, c, x, b, a):
        q = Rt(a/c, S(2))
        return With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int((d*r - x**(n/S(2))*(d - e*q))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r) + Int((d*r + x**(n/S(2))*(d - e*q))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r))
    rule631 = ReplacementRule(pattern631, lambda n2, n, e, d, c, x, b, a : With631(n2, n, e, d, c, x, b, a))
    rubi.add(rule631)

    pattern632 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, c, b, a: Not(PositiveIntegerQ(n/S(2))) | PosQ(-S(4)*a*c + b**S(2))), )
    def With632(n2, n, e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (e/S(2) - (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n + q/S(2)), x) + (e/S(2) + (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n - q/S(2)), x)
    rule632 = ReplacementRule(pattern632, lambda n2, n, e, d, c, x, b, a : With632(n2, n, e, d, c, x, b, a))
    rubi.add(rule632)

    pattern633 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda c, b, a: NegQ(-S(4)*a*c + b**S(2))), )
    def With633(n2, n, e, d, c, x, b, a):
        q = Rt(a/c, S(2))
        return With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int((d*r - x**(n/S(2))*(d - e*q))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r) + Int((d*r + x**(n/S(2))*(d - e*q))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r))
    rule633 = ReplacementRule(pattern633, lambda n2, n, e, d, c, x, b, a : With633(n2, n, e, d, c, x, b, a))
    rubi.add(rule633)

    pattern634 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: IntegerQ(q)))
    rule634 = ReplacementRule(pattern634, lambda n2, n, e, d, c, x, q, b, a : Int(ExpandIntegrand((d + e*x**n)**q/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule634)

    pattern635 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: IntegerQ(q)))
    rule635 = ReplacementRule(pattern635, lambda n2, n, e, d, c, x, q, a : Int(ExpandIntegrand((d + e*x**n)**q/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule635)

    pattern636 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule636 = ReplacementRule(pattern636, lambda n2, n, e, d, c, x, q, b, a : e**S(2)*Int((d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int((d + e*x**n)**(q + S(1))*(-b*e + c*d - c*e*x**n)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule636)

    pattern637 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule637 = ReplacementRule(pattern637, lambda n2, n, e, d, c, x, q, a : c*Int((d - e*x**n)*(d + e*x**n)**(q + S(1))/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)) + e**S(2)*Int((d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule637)

    pattern638 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: Not(IntegerQ(q))), )
    def With638(n2, n, e, d, c, x, q, b, a):
        r = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*c*Int((d + e*x**n)**q/(b + S(2)*c*x**n - r), x)/r - S(2)*c*Int((d + e*x**n)**q/(b + S(2)*c*x**n + r), x)/r
    rule638 = ReplacementRule(pattern638, lambda n2, n, e, d, c, x, q, b, a : With638(n2, n, e, d, c, x, q, b, a))
    rubi.add(rule638)

    pattern639 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: Not(IntegerQ(q))), )
    def With639(n2, n, e, d, c, x, q, a):
        r = Rt(-a*c, S(2))
        return -c*Int((d + e*x**n)**q/(-c*x**n + r), x)/(S(2)*r) - c*Int((d + e*x**n)**q/(c*x**n + r), x)/(S(2)*r)
    rule639 = ReplacementRule(pattern639, lambda n2, n, e, d, c, x, q, a : With639(n2, n, e, d, c, x, q, a))
    rubi.add(rule639)

    pattern640 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + n + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule640 = ReplacementRule(pattern640, lambda n2, n, e, d, c, x, p, b, a : n*p*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(-a*b*e + S(2)*a*c*d*(S(2)*n*p + n + S(1)) + x**n*(S(2)*a*c*e*(S(2)*n*p + S(1)) - b**S(2)*e*(n*p + S(1)) + b*c*d*(S(2)*n*p + n + S(1))), x), x)/(c*(S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))) + x*(a + b*x**n + c*x**(S(2)*n))**p*(b*e*n*p + c*d*(S(2)*n*p + n + S(1)) + c*e*x**n*(S(2)*n*p + S(1)))/(c*(S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))))
    rubi.add(rule640)

    pattern641 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + n + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule641 = ReplacementRule(pattern641, lambda n2, n, e, d, c, x, p, a : S(2)*a*n*p*Int((a + c*x**(S(2)*n))**(p + S(-1))*(d*(S(2)*n*p + n + S(1)) + e*x**n*(S(2)*n*p + S(1))), x)/((S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))) + x*(a + c*x**(S(2)*n))**p*(d*(S(2)*n*p + n + S(1)) + e*x**n*(S(2)*n*p + S(1)))/((S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))))
    rubi.add(rule641)

    pattern642 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule642 = ReplacementRule(pattern642, lambda n2, n, e, d, c, x, p, b, a : -x*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-a*b*e - S(2)*a*c*d + b**S(2)*d + c*x**n*(-S(2)*a*e + b*d))/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-a*b*e - S(2)*a*c*d*(S(2)*n*p + S(2)*n + S(1)) + b**S(2)*d*(n*p + n + S(1)) + c*x**n*(-S(2)*a*e + b*d)*(S(2)*n*p + S(3)*n + S(1)), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule642)

    pattern643 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule643 = ReplacementRule(pattern643, lambda n2, n, e, d, c, x, p, a : -x*(a + c*x**(S(2)*n))**(p + S(1))*(d + e*x**n)/(S(2)*a*n*(p + S(1))) + Int((a + c*x**(S(2)*n))**(p + S(1))*(d*(S(2)*n*p + S(2)*n + S(1)) + e*x**n*(S(2)*n*p + S(3)*n + S(1))), x)/(S(2)*a*n*(p + S(1))))
    rubi.add(rule643)

    pattern644 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)), )
    def With644(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*sqrt(-c)*Int((d + e*x**S(2))/(sqrt(-b - S(2)*c*x**S(2) + q)*sqrt(b + S(2)*c*x**S(2) + q)), x)
    rule644 = ReplacementRule(pattern644, lambda e, d, c, x, b, a : With644(e, d, c, x, b, a))
    rubi.add(rule644)

    pattern645 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: NegativeQ(c)), )
    def With645(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return sqrt(-c)*Int((d + e*x**S(2))/(sqrt(-c*x**S(2) + q)*sqrt(c*x**S(2) + q)), x)
    rule645 = ReplacementRule(pattern645, lambda e, d, c, x, a : With645(e, d, c, x, a))
    rubi.add(rule645)

    pattern646 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PositiveQ(c/a)), CustomConstraint(lambda b, a: NegativeQ(b/a)), CustomConstraint(lambda c, b, x, d, q, a, e: ZeroQ(d*q**S(2) + e)))
    def With646(e, d, c, x, b, a):
        q = Rt(c/a, S(4))
        return d*sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(q**S(2)*x**S(2) + S(1))*EllipticE(S(2)*atan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)/(q*sqrt(a + b*x**S(2) + c*x**S(4))) - d*x*sqrt(a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1)))
    rule646 = ReplacementRule(pattern646, lambda e, d, c, x, b, a : With646(e, d, c, x, b, a))
    rubi.add(rule646)

    pattern647 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PositiveQ(c/a)), CustomConstraint(lambda b, a: NegativeQ(b/a)), CustomConstraint(lambda c, b, x, d, q, a, e: NonzeroQ(d*q + e)))
    def With647(e, d, c, x, b, a):
        q = Rt(c/a, S(2))
        return -e*Int((-q*x**S(2) + S(1))/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + (d*q + e)*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q
    rule647 = ReplacementRule(pattern647, lambda e, d, c, x, b, a : With647(e, d, c, x, b, a))
    rubi.add(rule647)

    pattern648 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda c, b, x, d, q, a, e: ZeroQ(S(2)*c*d - e*(b - q))))
    def With648(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -e*q*sqrt((S(2)*a + x**S(2)*(b + q))/q)*sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))*EllipticE(asin(sqrt(S(2))*x/sqrt((S(2)*a + x**S(2)*(b + q))/q)), (b + q)/(S(2)*q))/(S(2)*c*sqrt(a/(S(2)*a + x**S(2)*(b + q)))*sqrt(a + b*x**S(2) + c*x**S(4))) + e*x*(b + S(2)*c*x**S(2) + q)/(S(2)*c*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule648 = ReplacementRule(pattern648, lambda e, d, c, x, b, a : With648(e, d, c, x, b, a))
    rubi.add(rule648)

    pattern649 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda c, x, d, q, a, e: IntegerQ(q) & ZeroQ(c*d + e*q)))
    def With649(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return -sqrt(S(2))*e*q*sqrt((a + q*x**S(2))/q)*sqrt(-a + q*x**S(2))*EllipticE(asin(sqrt(S(2))*x/sqrt((a + q*x**S(2))/q)), S(1)/2)/(c*sqrt(-a)*sqrt(a + c*x**S(4))) + e*x*(c*x**S(2) + q)/(c*sqrt(a + c*x**S(4)))
    rule649 = ReplacementRule(pattern649, lambda e, d, c, x, a : With649(e, d, c, x, a))
    rubi.add(rule649)

    pattern650 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda c, x, d, q, a, e: ZeroQ(c*d + e*q)))
    def With650(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return -sqrt(S(2))*e*q*sqrt((a + q*x**S(2))/q)*sqrt((a - q*x**S(2))/(a + q*x**S(2)))*EllipticE(asin(sqrt(S(2))*x/sqrt((a + q*x**S(2))/q)), S(1)/2)/(c*sqrt(a/(a + q*x**S(2)))*sqrt(a + c*x**S(4))) + e*x*(c*x**S(2) + q)/(c*sqrt(a + c*x**S(4)))
    rule650 = ReplacementRule(pattern650, lambda e, d, c, x, a : With650(e, d, c, x, a))
    rubi.add(rule650)

    pattern651 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda c, b, x, d, q, a, e: NonzeroQ(S(2)*c*d - e*(b - q))))
    def With651(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return e*Int((b + S(2)*c*x**S(2) - q)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + (S(2)*c*d - e*(b - q))*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)
    rule651 = ReplacementRule(pattern651, lambda e, d, c, x, b, a : With651(e, d, c, x, b, a))
    rubi.add(rule651)

    pattern652 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda c, x, d, q, a, e: NonzeroQ(c*d + e*q)))
    def With652(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return -e*Int((-c*x**S(2) + q)/sqrt(a + c*x**S(4)), x)/c + (c*d + e*q)*Int(1/sqrt(a + c*x**S(4)), x)/c
    rule652 = ReplacementRule(pattern652, lambda e, d, c, x, a : With652(e, d, c, x, a))
    rubi.add(rule652)

    pattern653 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, d, q, a, e: PosQ((b + q)/a) | PosQ((b - q)/a)))
    def With653(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return d*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x) + e*Int(x**S(2)/sqrt(a + b*x**S(2) + c*x**S(4)), x)
    rule653 = ReplacementRule(pattern653, lambda e, d, c, x, b, a : With653(e, d, c, x, b, a))
    rubi.add(rule653)

    pattern654 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: PositiveQ(-a*c)))
    rule654 = ReplacementRule(pattern654, lambda e, d, c, x, a : d*Int(1/sqrt(a + c*x**S(4)), x) + e*Int(x**S(2)/sqrt(a + c*x**S(4)), x))
    rubi.add(rule654)

    pattern655 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, d, q, a, e: NegQ((b + q)/a) & ZeroQ(S(2)*c*d - e*(b + q)) & Not(SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a)))))
    def With655(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -a*e*sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))*EllipticE(asin(x*Rt((-b - q)/(S(2)*a), S(2))), (b - q)/(b + q))*Rt((-b - q)/(S(2)*a), S(2))/(c*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule655 = ReplacementRule(pattern655, lambda e, d, c, x, b, a : With655(e, d, c, x, b, a))
    rubi.add(rule655)

    pattern656 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, d, q, a, e: NegQ((b + q)/a) & NonzeroQ(S(2)*c*d - e*(b + q)) & Not(SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a)))))
    def With656(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return e*Int((b + S(2)*c*x**S(2) + q)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + (S(2)*c*d - e*(b + q))*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)
    rule656 = ReplacementRule(pattern656, lambda e, d, c, x, b, a : With656(e, d, c, x, b, a))
    rubi.add(rule656)

    pattern657 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, d, q, a, e: NegQ((b - q)/a) & ZeroQ(S(2)*c*d - e*(b - q))))
    def With657(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -a*e*sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))*EllipticE(asin(x*Rt((-b + q)/(S(2)*a), S(2))), (b + q)/(b - q))*Rt((-b + q)/(S(2)*a), S(2))/(c*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule657 = ReplacementRule(pattern657, lambda e, d, c, x, b, a : With657(e, d, c, x, b, a))
    rubi.add(rule657)

    pattern658 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, b, x, d, q, a, e: NegQ((b - q)/a) & NonzeroQ(S(2)*c*d - e*(b - q))))
    def With658(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return e*Int((b + S(2)*c*x**S(2) - q)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + (S(2)*c*d - e*(b - q))*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)
    rule658 = ReplacementRule(pattern658, lambda e, d, c, x, b, a : With658(e, d, c, x, b, a))
    rubi.add(rule658)

    pattern659 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), CustomConstraint(lambda c, b, x, d, q, a, e: ZeroQ(d*q**S(2) + e)))
    def With659(e, d, c, x, b, a):
        q = Rt(c/a, S(4))
        return d*sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(q**S(2)*x**S(2) + S(1))*EllipticE(S(2)*atan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)/(q*sqrt(a + b*x**S(2) + c*x**S(4))) - d*x*sqrt(a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1)))
    rule659 = ReplacementRule(pattern659, lambda e, d, c, x, b, a : With659(e, d, c, x, b, a))
    rubi.add(rule659)

    pattern660 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: PosQ(c/a)), CustomConstraint(lambda c, x, d, q, a, e: ZeroQ(d*q**S(2) + e)))
    def With660(e, d, c, x, a):
        q = Rt(c/a, S(4))
        return d*sqrt((a + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(q**S(2)*x**S(2) + S(1))*EllipticE(S(2)*atan(q*x), S(1)/2)/(q*sqrt(a + c*x**S(4))) - d*x*sqrt(a + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1)))
    rule660 = ReplacementRule(pattern660, lambda e, d, c, x, a : With660(e, d, c, x, a))
    rubi.add(rule660)

    pattern661 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), CustomConstraint(lambda c, b, x, d, q, a, e: NonzeroQ(d*q + e)))
    def With661(e, d, c, x, b, a):
        q = Rt(c/a, S(2))
        return -e*Int((-q*x**S(2) + S(1))/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + (d*q + e)*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/q
    rule661 = ReplacementRule(pattern661, lambda e, d, c, x, b, a : With661(e, d, c, x, b, a))
    rubi.add(rule661)

    pattern662 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: PosQ(c/a)), CustomConstraint(lambda c, x, d, q, a, e: NonzeroQ(d*q + e)))
    def With662(e, d, c, x, a):
        q = Rt(c/a, S(2))
        return -e*Int((-q*x**S(2) + S(1))/sqrt(a + c*x**S(4)), x)/q + (d*q + e)*Int(1/sqrt(a + c*x**S(4)), x)/q
    rule662 = ReplacementRule(pattern662, lambda e, d, c, x, a : With662(e, d, c, x, a))
    rubi.add(rule662)

    pattern663 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: NegQ(c/a)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a: PositiveQ(a)))
    rule663 = ReplacementRule(pattern663, lambda e, d, c, x, a : d*Int(sqrt(S(1) + e*x**S(2)/d)/sqrt(S(1) - e*x**S(2)/d), x)/sqrt(a))
    rubi.add(rule663)

    pattern664 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: NegQ(c/a)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a: Not(PositiveQ(a))))
    rule664 = ReplacementRule(pattern664, lambda e, d, c, x, a : sqrt(S(1) + c*x**S(4)/a)*Int((d + e*x**S(2))/sqrt(S(1) + c*x**S(4)/a), x)/sqrt(a + c*x**S(4)))
    rubi.add(rule664)

    pattern665 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: NegQ(c/a)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), )
    def With665(e, d, c, x, a):
        q = Rt(-c/a, S(2))
        return e*Int((q*x**S(2) + S(1))/sqrt(a + c*x**S(4)), x)/q + (d*q - e)*Int(1/sqrt(a + c*x**S(4)), x)/q
    rule665 = ReplacementRule(pattern665, lambda e, d, c, x, a : With665(e, d, c, x, a))
    rubi.add(rule665)

    pattern666 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: NegQ(c/a)), )
    def With666(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))*Int((d + e*x**S(2))/(sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)/sqrt(a + b*x**S(2) + c*x**S(4))
    rule666 = ReplacementRule(pattern666, lambda e, d, c, x, b, a : With666(e, d, c, x, b, a))
    rubi.add(rule666)

    pattern667 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule667 = ReplacementRule(pattern667, lambda n2, n, e, d, c, x, p, b, a : Int(ExpandIntegrand((d + e*x**n)*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule667)

    pattern668 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)))
    rule668 = ReplacementRule(pattern668, lambda n2, n, e, d, c, x, p, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p*(d + e*x**n), x), x))
    rubi.add(rule668)

    pattern669 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, q, p: NonzeroQ(S(2)*n*p + n*q + S(1))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(PositiveIntegerQ(q))))
    rule669 = ReplacementRule(pattern669, lambda n2, n, e, d, c, x, p, q, b, a : c**p*x**(S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(S(2)*n*p + n*q + S(1))) + Int((d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(S(2)*n*p - n + S(1))/(e*(S(2)*n*p + n*q + S(1))) - c**p*x**(S(2)*n*p) + (a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule669)

    pattern670 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, q, p: NonzeroQ(S(2)*n*p + n*q + S(1))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(PositiveIntegerQ(q))))
    rule670 = ReplacementRule(pattern670, lambda n2, n, e, d, c, x, p, q, a : c**p*x**(S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(S(2)*n*p + n*q + S(1))) + Int((d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(S(2)*n*p - n + S(1))/(e*(S(2)*n*p + n*q + S(1))) - c**p*x**(S(2)*n*p) + (a + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule670)

    pattern671 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule671 = ReplacementRule(pattern671, lambda e, d, c, x, b, a : (a*e**S(2) - b*d*e + c*d**S(2))*Int(S(1)/((d + e*x**S(2))*sqrt(a + b*x**S(2) + c*x**S(4))), x)/e**S(2) - Int((-b*e + c*d - c*e*x**S(2))/sqrt(a + b*x**S(2) + c*x**S(4)), x)/e**S(2))
    rubi.add(rule671)

    pattern672 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)))/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule672 = ReplacementRule(pattern672, lambda e, d, c, x, a : -c*Int((d - e*x**S(2))/sqrt(a + c*x**S(4)), x)/e**S(2) + (a*e**S(2) + c*d**S(2))*Int(S(1)/(sqrt(a + c*x**S(4))*(d + e*x**S(2))), x)/e**S(2))
    rubi.add(rule672)

    pattern673 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**(S(3)/2)/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), )
    def With673(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return -(a*e**S(2) - b*d*e + c*d**S(2))**S(2)*Int((b + S(2)*c*x**S(2) + q)/((d + e*x**S(2))*sqrt(a + b*x**S(2) + c*x**S(4))), x)/(e**S(3)*(S(2)*c*d - e*(b + q))) - Int(Simp(-c**S(2)*e**S(3)*x**S(6) + c*e**S(2)*x**S(4)*(-S(2)*b*e + c*d) - S(2)*c*(a*e**S(2) - b*d*e + c*d**S(2))**S(2)/(S(2)*c*d - e*(b + q)) - e*x**S(2)*(b**S(2)*e**S(2) + c**S(2)*d**S(2) - S(2)*c*e*(-a*e + b*d)) + (-b*e + c*d)*(S(2)*a*e**S(2) - b*d*e + c*d**S(2)), x)/sqrt(a + b*x**S(2) + c*x**S(4)), x)/e**S(4)
    rule673 = ReplacementRule(pattern673, lambda e, d, c, x, b, a : With673(e, d, c, x, b, a))
    rubi.add(rule673)

    pattern674 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**(S(3)/2)/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: PositiveQ(-a*c)), )
    def With674(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return -c*Int(Simp(c*d*e**S(2)*x**S(4) - c*e**S(3)*x**S(6) + d*(S(2)*a*e**S(2) + c*d**S(2)) - e*x**S(2)*(S(2)*a*e**S(2) + c*d**S(2)) - (a*e**S(2) + c*d**S(2))**S(2)/(c*d - e*q), x)/sqrt(a + c*x**S(4)), x)/e**S(4) - (a*e**S(2) + c*d**S(2))**S(2)*Int((c*x**S(2) + q)/(sqrt(a + c*x**S(4))*(d + e*x**S(2))), x)/(e**S(3)*(c*d - e*q))
    rule674 = ReplacementRule(pattern674, lambda e, d, c, x, a : With674(e, d, c, x, a))
    rubi.add(rule674)

    pattern675 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p + S(-1)/2)))
    rule675 = ReplacementRule(pattern675, lambda e, d, c, x, p, b, a : a*Int((a + b*x**S(2) + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x) + b*Int(x**S(2)*(a + b*x**S(2) + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x) + c*Int(x**S(4)*(a + b*x**S(2) + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x))
    rubi.add(rule675)

    pattern676 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p + S(-1)/2)))
    rule676 = ReplacementRule(pattern676, lambda e, d, c, x, p, a : a*Int((a + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x) + c*Int(x**S(4)*(a + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x))
    rubi.add(rule676)

    pattern677 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)), )
    def With677(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*sqrt(-c)*Int(S(1)/((d + e*x**S(2))*sqrt(-b - S(2)*c*x**S(2) + q)*sqrt(b + S(2)*c*x**S(2) + q)), x)
    rule677 = ReplacementRule(pattern677, lambda e, d, c, x, b, a : With677(e, d, c, x, b, a))
    rubi.add(rule677)

    pattern678 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: NegativeQ(c)), )
    def With678(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return sqrt(-c)*Int(S(1)/((d + e*x**S(2))*sqrt(-c*x**S(2) + q)*sqrt(c*x**S(2) + q)), x)
    rule678 = ReplacementRule(pattern678, lambda e, d, c, x, a : With678(e, d, c, x, a))
    rubi.add(rule678)

    pattern679 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: Not(NegativeQ(c))), )
    def With679(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*c*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c*d - e*(b - q)) - e*Int((b + S(2)*c*x**S(2) - q)/((d + e*x**S(2))*sqrt(a + b*x**S(2) + c*x**S(4))), x)/(S(2)*c*d - e*(b - q))
    rule679 = ReplacementRule(pattern679, lambda e, d, c, x, b, a : With679(e, d, c, x, b, a))
    rubi.add(rule679)

    pattern680 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: PositiveQ(-a*c)), CustomConstraint(lambda c: Not(NegativeQ(c))), )
    def With680(e, d, c, x, a):
        q = Rt(-a*c, S(2))
        return c*Int(1/sqrt(a + c*x**S(4)), x)/(c*d + e*q) + e*Int((-c*x**S(2) + q)/(sqrt(a + c*x**S(4))*(d + e*x**S(2))), x)/(c*d + e*q)
    rule680 = ReplacementRule(pattern680, lambda e, d, c, x, a : With680(e, d, c, x, a))
    rubi.add(rule680)

    pattern681 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), CustomConstraint(lambda c, b, x, d, q, a, e: NonzeroQ(-d*q**S(2) + e)))
    def With681(e, d, c, x, b, a):
        q = Rt(c/a, S(4))
        return -q**S(2)*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(-d*q**S(2) + e) + atan(x*sqrt((a*e**S(2) - b*d*e + c*d**S(2))/(d*e))/sqrt(a + b*x**S(2) + c*x**S(4)))/(S(2)*d*sqrt((a*e**S(2) - b*d*e + c*d**S(2))/(d*e))) + sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(d*q**S(2) + e)*(q**S(2)*x**S(2) + S(1))*EllipticPi(-(-d*q**S(2) + e)**S(2)/(S(4)*d*e*q**S(2)), S(2)*atan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)/(S(4)*d*q*(-d*q**S(2) + e)*sqrt(a + b*x**S(2) + c*x**S(4)))
    rule681 = ReplacementRule(pattern681, lambda e, d, c, x, b, a : With681(e, d, c, x, b, a))
    rubi.add(rule681)

    pattern682 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c, a: PosQ(c/a)), CustomConstraint(lambda c, x, d, q, a, e: NonzeroQ(-d*q**S(2) + e)))
    def With682(e, d, c, x, a):
        q = Rt(c/a, S(4))
        return -q**S(2)*Int(1/sqrt(a + c*x**S(4)), x)/(-d*q**S(2) + e) + atan(x*sqrt((a*e**S(2) + c*d**S(2))/(d*e))/sqrt(a + c*x**S(4)))/(S(2)*d*sqrt((a*e**S(2) + c*d**S(2))/(d*e))) + sqrt((a + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))*(d*q**S(2) + e)*(q**S(2)*x**S(2) + S(1))*EllipticPi(-(-d*q**S(2) + e)**S(2)/(S(4)*d*e*q**S(2)), S(2)*atan(q*x), S(1)/2)/(S(4)*d*q*sqrt(a + c*x**S(4))*(-d*q**S(2) + e))
    rule682 = ReplacementRule(pattern682, lambda e, d, c, x, a : With682(e, d, c, x, a))
    rubi.add(rule682)

    pattern683 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: NegQ(c/a)), CustomConstraint(lambda a: PositiveQ(a)), )
    def With683(e, d, c, x, a):
        q = Rt(-c/a, S(4))
        return EllipticPi(-e/(d*q**S(2)), asin(q*x), S(-1))/(sqrt(a)*d*q)
    rule683 = ReplacementRule(pattern683, lambda e, d, c, x, a : With683(e, d, c, x, a))
    rubi.add(rule683)

    pattern684 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, a: NegQ(c/a)), CustomConstraint(lambda a: Not(PositiveQ(a))))
    rule684 = ReplacementRule(pattern684, lambda e, d, c, x, a : sqrt(S(1) + c*x**S(4)/a)*Int(S(1)/(sqrt(S(1) + c*x**S(4)/a)*(d + e*x**S(2))), x)/sqrt(a + c*x**S(4)))
    rubi.add(rule684)

    pattern685 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, a: NegQ(c/a)), )
    def With685(e, d, c, x, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))*Int(S(1)/((d + e*x**S(2))*sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)/sqrt(a + b*x**S(2) + c*x**S(4))
    rule685 = ReplacementRule(pattern685, lambda e, d, c, x, b, a : With685(e, d, c, x, b, a))
    rubi.add(rule685)

    pattern686 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1)/2)))
    rule686 = ReplacementRule(pattern686, lambda e, d, c, x, p, b, a : -x*(a + b*x**S(2) + c*x**S(4))**(p + S(1))*(S(3)*a*b*c*e - S(2)*a*c**S(2)*d - b**S(3)*e + b**S(2)*c*d + c*x**S(2)*(S(2)*a*c*e - b**S(2)*e + b*c*d))/(S(2)*a*(p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) - Int((a + b*x**S(2) + c*x**S(4))**(p + S(1))*Simp(-a*b*c*d*e*(S(8)*p + S(11)) + S(2)*a*c*(S(4)*a*e**S(2)*(p + S(1)) + c*d**S(2)*(S(4)*p + S(5))) + b**S(3)*d*e*(S(2)*p + S(3)) - b**S(2)*(S(2)*a*e**S(2)*(p + S(1)) + c*d**S(2)*(S(2)*p + S(3))) - c*e*x**S(4)*(S(4)*p + S(7))*(S(2)*a*c*e - b**S(2)*e + b*c*d) - x**S(2)*(S(4)*a*c**S(2)*d*e - b**S(3)*e**S(2)*(S(2)*p + S(3)) - S(2)*b**S(2)*c*d*e*(p + S(2)) + b*c*(a*e**S(2)*(S(8)*p + S(11)) + c*d**S(2)*(S(4)*p + S(7)))), x)/(d + e*x**S(2)), x)/(S(2)*a*(p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule686)

    pattern687 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1)/2)))
    rule687 = ReplacementRule(pattern687, lambda e, d, c, x, p, a : x*(a + c*x**S(4))**(p + S(1))*(-S(2)*a*c**S(2)*d + S(2)*a*c**S(2)*e*x**S(2))/(S(8)*a**S(2)*c*(p + S(1))*(a*e**S(2) + c*d**S(2))) + Int((a + c*x**S(4))**(p + S(1))*Simp(-S(4)*a*c**S(2)*d*e*x**S(2) - S(2)*a*c**S(2)*e**S(2)*x**S(4)*(S(4)*p + S(7)) + S(2)*a*c*(S(4)*a*e**S(2)*(p + S(1)) + c*d**S(2)*(S(4)*p + S(5))), x)/(d + e*x**S(2)), x)/(S(8)*a**S(2)*c*(p + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule687)

    pattern688 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))**S(2)*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule688 = ReplacementRule(pattern688, lambda e, d, c, x, b, a : -c*Int((d + e*x**S(2))/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*d*(a*e**S(2) - b*d*e + c*d**S(2))) + e**S(2)*x*sqrt(a + b*x**S(2) + c*x**S(4))/(S(2)*d*(d + e*x**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) + (a*e**S(2) - S(2)*b*d*e + S(3)*c*d**S(2))*Int(S(1)/((d + e*x**S(2))*sqrt(a + b*x**S(2) + c*x**S(4))), x)/(S(2)*d*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule688)

    pattern689 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule689 = ReplacementRule(pattern689, lambda e, d, c, x, a : -c*Int((d + e*x**S(2))/sqrt(a + c*x**S(4)), x)/(S(2)*d*(a*e**S(2) + c*d**S(2))) + e**S(2)*x*sqrt(a + c*x**S(4))/(S(2)*d*(d + e*x**S(2))*(a*e**S(2) + c*d**S(2))) + (a*e**S(2) + S(3)*c*d**S(2))*Int(S(1)/(sqrt(a + c*x**S(4))*(d + e*x**S(2))), x)/(S(2)*d*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule689)

    pattern690 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))**q_*(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p + S(-1)/2)), CustomConstraint(lambda q: NegativeIntegerQ(q)), )
    def With690(e, d, c, x, p, q, b, a):
        r = Rt(-S(4)*a*c + b**S(2), S(2))
        return a**IntPart(p)*(S(2)*c*x**S(2)/(b - r) + S(1))**(-FracPart(p))*(S(2)*c*x**S(2)/(b + r) + S(1))**(-FracPart(p))*(a + b*x**S(2) + c*x**S(4))**FracPart(p)*Int((d + e*x**S(2))**q*(S(2)*c*x**S(2)/(b - r) + S(1))**p*(S(2)*c*x**S(2)/(b + r) + S(1))**p, x)
    rule690 = ReplacementRule(pattern690, lambda e, d, c, x, p, q, b, a : With690(e, d, c, x, p, q, b, a))
    rubi.add(rule690)

    pattern691 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**p_*(d_ + x_**S(2)*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p + S(-1)/2)), CustomConstraint(lambda q: NegativeIntegerQ(q)), )
    def With691(e, d, c, x, p, q, a):
        r = Rt(-a*c, S(2))
        return a**IntPart(p)*(a + c*x**S(4))**FracPart(p)*(-c*x**S(2)/r + S(1))**(-FracPart(p))*(c*x**S(2)/r + S(1))**(-FracPart(p))*Int((d + e*x**S(2))**q*(-c*x**S(2)/r + S(1))**p*(c*x**S(2)/r + S(1))**p, x)
    rule691 = ReplacementRule(pattern691, lambda e, d, c, x, p, q, a : With691(e, d, c, x, p, q, a))
    rubi.add(rule691)

    pattern692 = Pattern(Integral(S(1)/(sqrt(d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + c*d)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule692 = ReplacementRule(pattern692, lambda e, d, c, x, b, a : EllipticF(S(2)*asin(x*Rt(-e/d, S(2))), b*d/(S(4)*a*e))/(S(2)*sqrt(a)*sqrt(d)*Rt(-e/d, S(2))))
    rubi.add(rule692)

    pattern693 = Pattern(Integral(S(1)/(sqrt(d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + c*d)), CustomConstraint(lambda d, a: Not(PositiveQ(a) & PositiveQ(d))))
    rule693 = ReplacementRule(pattern693, lambda e, d, c, x, b, a : sqrt((a + b*x**S(2) + c*x**S(4))/a)*sqrt((d + e*x**S(2))/d)*Int(S(1)/(sqrt(S(1) + e*x**S(2)/d)*sqrt(S(1) + b*x**S(2)/a + c*x**S(4)/a)), x)/(sqrt(d + e*x**S(2))*sqrt(a + b*x**S(2) + c*x**S(4))))
    rubi.add(rule693)

    pattern694 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))/sqrt(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + c*d)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule694 = ReplacementRule(pattern694, lambda e, d, c, x, b, a : sqrt(a)*EllipticE(S(2)*asin(x*Rt(-e/d, S(2))), b*d/(S(4)*a*e))/(S(2)*sqrt(d)*Rt(-e/d, S(2))))
    rubi.add(rule694)

    pattern695 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))/sqrt(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, c, e, b: ZeroQ(-b*e + c*d)), CustomConstraint(lambda d, a: Not(PositiveQ(a) & PositiveQ(d))))
    rule695 = ReplacementRule(pattern695, lambda e, d, c, x, b, a : sqrt((d + e*x**S(2))/d)*sqrt(a + b*x**S(2) + c*x**S(4))*Int(sqrt(S(1) + b*x**S(2)/a + c*x**S(4)/a)/sqrt(S(1) + e*x**S(2)/d), x)/(sqrt((a + b*x**S(2) + c*x**S(4))/a)*sqrt(d + e*x**S(2))))
    rubi.add(rule695)

    pattern696 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, q, p: PositiveIntegerQ(p) | (PositiveIntegerQ(q) & Not(IntegerQ(n))) | (IntegersQ(p, q) & Not(IntegerQ(n)))))
    rule696 = ReplacementRule(pattern696, lambda n2, n, e, d, c, x, p, q, b, a : Int(ExpandIntegrand((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule696)

    pattern697 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, q, p: PositiveIntegerQ(p) | (PositiveIntegerQ(q) & Not(IntegerQ(n))) | (IntegersQ(p, q) & Not(IntegerQ(n)))))
    rule697 = ReplacementRule(pattern697, lambda n2, n, e, d, c, x, p, q, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x))
    rubi.add(rule697)

    pattern698 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda n, p: Not(IntegersQ(n, S(2)*p))))
    rule698 = ReplacementRule(pattern698, lambda n2, n, e, d, c, x, p, q, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p, (d/(d**S(2) - e**S(2)*x**(S(2)*n)) - e*x**n/(d**S(2) - e**S(2)*x**(S(2)*n)))**(-q), x), x))
    rubi.add(rule698)

    pattern699 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, q: Not(IntegersQ(n, q))))
    rule699 = ReplacementRule(pattern699, lambda n2, n, e, d, c, x, p, q, b, a : Int((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule699)

    pattern700 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, q: Not(IntegersQ(n, q))))
    rule700 = ReplacementRule(pattern700, lambda n2, n, e, d, c, x, p, q, a : Int((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule700)

    pattern701 = Pattern(Integral((d_ + u_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + u_**n2_*WC('c', S(1)) + u_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule701 = ReplacementRule(pattern701, lambda n2, n, e, u, d, c, x, p, q, b, a : Subst(Int((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule701)

    pattern702 = Pattern(Integral((a_ + u_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + u_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule702 = ReplacementRule(pattern702, lambda n2, n, e, d, c, x, p, q, u, a : Subst(Int((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule702)

    pattern703 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)))
    rule703 = ReplacementRule(pattern703, lambda n2, n, mn, e, d, c, x, p, q, b, a : Int(x**(-n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule703)

    pattern704 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: IntegerQ(q)))
    rule704 = ReplacementRule(pattern704, lambda n2, a, e, d, c, x, p, q, mn : Int(x**(mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule704)

    pattern705 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule705 = ReplacementRule(pattern705, lambda n2, n, mn, e, d, c, x, p, q, b, a : Int(x**(S(2)*n*p)*(d + e*x**(-n))**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule705)

    pattern706 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule706 = ReplacementRule(pattern706, lambda n2, a, e, d, c, x, p, q, mn : Int(x**(-S(2)*mn*p)*(d + e*x**mn)**q*(a*x**(S(2)*mn) + c)**p, x))
    rubi.add(rule706)

    pattern707 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: PosQ(n)))
    rule707 = ReplacementRule(pattern707, lambda n2, n, mn, e, d, c, x, p, q, b, a : x**(n*FracPart(q))*(d + e*x**(-n))**FracPart(q)*(d*x**n + e)**(-FracPart(q))*Int(x**(-n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule707)

    pattern708 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n2: PosQ(n2)))
    rule708 = ReplacementRule(pattern708, lambda n2, a, e, d, c, x, p, q, mn : x**(-mn*FracPart(q))*(d + e*x**mn)**FracPart(q)*(d*x**(-mn) + e)**(-FracPart(q))*Int(x**(mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule708)

    pattern709 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n: NegQ(n)))
    rule709 = ReplacementRule(pattern709, lambda n2, n, mn, e, d, c, x, p, q, b, a : x**(-S(2)*n*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*(a*x**(-S(2)*n) + b*x**(-n) + c)**(-FracPart(p))*Int(x**(S(2)*n*p)*(d + e*x**(-n))**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule709)

    pattern710 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n2: NegQ(n2)))
    rule710 = ReplacementRule(pattern710, lambda n2, a, e, d, c, x, p, q, mn : x**(-n2*FracPart(p))*(a + c*x**n2)**FracPart(p)*(a*x**(S(2)*mn) + c)**(-FracPart(p))*Int(x**(n2*p)*(d + e*x**mn)**q*(a*x**(S(2)*mn) + c)**p, x))
    rubi.add(rule710)

    pattern711 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule711 = ReplacementRule(pattern711, lambda n, mn, e, d, c, x, p, q, b, a : Int(x**(-n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule711)

    pattern712 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule712 = ReplacementRule(pattern712, lambda n, mn, e, d, c, x, p, q, b, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(-n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule712)

    pattern713 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule713 = ReplacementRule(pattern713, lambda n2, n, r, g, e, d, c, x, p, f, q, b, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b + S(2)*c*x**n)**(S(2)*p)*(d + e*x**n)**q*(f + g*x**n)**r, x))
    rubi.add(rule713)

    pattern714 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule714 = ReplacementRule(pattern714, lambda n2, n, r, g, e, d, c, x, p, f, q, b, a : Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule714)

    pattern715 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule715 = ReplacementRule(pattern715, lambda n2, n, r, g, e, d, c, x, p, f, q, a : Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule715)

    pattern716 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule716 = ReplacementRule(pattern716, lambda n2, n, r, g, e, d, c, x, p, f, q, b, a : (d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule716)

    pattern717 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule717 = ReplacementRule(pattern717, lambda n2, n, r, g, e, d, c, x, p, f, q, a : (a + c*x**(S(2)*n))**FracPart(p)*(d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule717)

    pattern718 = Pattern(Integral((x_**S(2)*WC('g', S(1)) + WC('f', S(0)))/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, b, a: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda c: Not(NegativeQ(c))), CustomConstraint(lambda c, b, f, g, q, e, x, d, a: NonzeroQ(S(2)*c*f - g*(b - q))))
    def With718(g, e, d, c, x, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (S(2)*c*f - g*(b - q))*Int(1/sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c*d - e*(b - q)) - (-d*g + e*f)*Int((b + S(2)*c*x**S(2) - q)/((d + e*x**S(2))*sqrt(a + b*x**S(2) + c*x**S(4))), x)/(S(2)*c*d - e*(b - q))
    rule718 = ReplacementRule(pattern718, lambda g, e, d, c, x, f, b, a : With718(g, e, d, c, x, f, b, a))
    rubi.add(rule718)

    pattern719 = Pattern(Integral((f_ + x_**S(2)*WC('g', S(1)))/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, a: PositiveQ(-a*c)), CustomConstraint(lambda d, c, e, a: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c: Not(NegativeQ(c))), CustomConstraint(lambda c, f, g, q, e, x, d, a: NonzeroQ(c*f + g*q)))
    def With719(g, e, d, c, x, f, a):
        q = Rt(-a*c, S(2))
        return (c*f + g*q)*Int(1/sqrt(a + c*x**S(4)), x)/(c*d + e*q) + (-d*g + e*f)*Int((-c*x**S(2) + q)/(sqrt(a + c*x**S(4))*(d + e*x**S(2))), x)/(c*d + e*q)
    rule719 = ReplacementRule(pattern719, lambda g, e, d, c, x, f, a : With719(g, e, d, c, x, f, a))
    rubi.add(rule719)

    pattern720 = Pattern(Integral((d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda non2, n: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, e2, d1, d2: ZeroQ(d1*e2 + d2*e1)), CustomConstraint(lambda d1, q, d2: IntegerQ(q) | (PositiveQ(d1) & PositiveQ(d2))))
    rule720 = ReplacementRule(pattern720, lambda n2, n, non2, c, x, e2, d1, p, e1, d2, q, b, a : Int((d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule720)

    pattern721 = Pattern(Integral((d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda non2, n: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, e2, d1, d2: ZeroQ(d1*e2 + d2*e1)))
    rule721 = ReplacementRule(pattern721, lambda n2, n, non2, c, x, e2, d1, p, e1, d2, q, b, a : (d1 + e1*x**(n/S(2)))**FracPart(q)*(d2 + e2*x**(n/S(2)))**FracPart(q)*(d1*d2 + e1*e2*x**n)**(-FracPart(q))*Int((d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule721)

    pattern722 = Pattern(Integral((A_ + x_**WC('m', S(1))*WC('B', S(1)))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule722 = ReplacementRule(pattern722, lambda n2, n, e, B, A, d, c, x, m, p, q, b, a : A*Int((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x) + B*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule722)

    pattern723 = Pattern(Integral((A_ + x_**WC('m', S(1))*WC('B', S(1)))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule723 = ReplacementRule(pattern723, lambda n2, n, e, B, A, d, c, x, m, p, q, a : A*Int((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x) + B*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule723)

    pattern724 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule724 = ReplacementRule(pattern724, lambda n2, n, e, c, x, m, p, f, q, b, a : e**(S(1) - (m + S(1))/n)*f**m*Subst(Int((e*x)**(q + S(-1) + (m + S(1))/n)*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule724)

    pattern725 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule725 = ReplacementRule(pattern725, lambda n2, n, e, c, x, m, p, f, q, a : e**(S(1) - (m + S(1))/n)*f**m*Subst(Int((e*x)**(q + S(-1) + (m + S(1))/n)*(a + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule725)

    pattern726 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: Not(IntegerQ((m + S(1))/n))))
    rule726 = ReplacementRule(pattern726, lambda n2, n, e, c, x, m, p, f, q, b, a : e**IntPart(q)*f**m*x**(-n*FracPart(q))*(e*x**n)**FracPart(q)*Int(x**(m + n*q)*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule726)

    pattern727 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: Not(IntegerQ((m + S(1))/n))))
    rule727 = ReplacementRule(pattern727, lambda n2, n, e, c, x, m, p, f, q, a : e**IntPart(q)*f**m*x**(-n*FracPart(q))*(e*x**n)**FracPart(q)*Int(x**(m + n*q)*(a + c*x**(S(2)*n))**p, x))
    rubi.add(rule727)

    pattern728 = Pattern(Integral((f_*x_)**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule728 = ReplacementRule(pattern728, lambda n2, n, e, c, x, m, p, f, q, b, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule728)

    pattern729 = Pattern(Integral((f_*x_)**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule729 = ReplacementRule(pattern729, lambda n2, n, e, c, x, m, p, f, q, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(e*x**n)**q*(a + c*x**(S(2)*n))**p, x))
    rubi.add(rule729)

    pattern730 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule730 = ReplacementRule(pattern730, lambda n2, n, e, d, c, x, m, p, q, b, a : Subst(Int((d + e*x)**q*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule730)

    pattern731 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule731 = ReplacementRule(pattern731, lambda n2, n, e, d, c, x, m, p, q, a : Subst(Int((a + c*x**S(2))**p*(d + e*x)**q, x), x, x**n)/n)
    rubi.add(rule731)

    pattern732 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule732 = ReplacementRule(pattern732, lambda n2, n, e, d, c, x, m, p, q, b, a : Int(x**(m + n*(S(2)*p + q))*(d*x**(-n) + e)**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule732)

    pattern733 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule733 = ReplacementRule(pattern733, lambda n2, n, e, d, c, x, m, p, q, a : Int(x**(m + n*(S(2)*p + q))*(a*x**(-S(2)*n) + c)**p*(d*x**(-n) + e)**q, x))
    rubi.add(rule733)

    pattern734 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n, (m + S(1))/n)))
    rule734 = ReplacementRule(pattern734, lambda n2, n, e, d, c, x, m, p, q, b, a : Subst(Int(x**(S(-1) + (m + S(1))/n)*(d + e*x)**q*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule734)

    pattern735 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule735 = ReplacementRule(pattern735, lambda n2, n, e, d, c, x, m, p, f, q, b, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((f*x)**m*(b/S(2) + c*x**n)**(S(2)*p)*(d + e*x**n)**q, x))
    rubi.add(rule735)

    pattern736 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule736 = ReplacementRule(pattern736, lambda n2, n, e, d, c, x, m, p, q, b, a : Subst(Int(x**(S(-1) + (m + S(1))/n)*(d + e*x)**q*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule736)

    pattern737 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule737 = ReplacementRule(pattern737, lambda n2, n, e, d, c, x, m, p, q, a : Subst(Int(x**(S(-1) + (m + S(1))/n)*(a + c*x**S(2))**p*(d + e*x)**q, x), x, x**n)/n)
    rubi.add(rule737)

    pattern738 = Pattern(Integral((f_*x_)**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule738 = ReplacementRule(pattern738, lambda n2, n, e, d, c, x, m, p, f, q, b, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule738)

    pattern739 = Pattern(Integral((f_*x_)**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ((m + S(1))/n)))
    rule739 = ReplacementRule(pattern739, lambda n2, n, e, d, c, x, m, p, f, q, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule739)

    pattern740 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule740 = ReplacementRule(pattern740, lambda n2, n, e, d, c, x, m, p, f, q, b, a : Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule740)

    pattern741 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule741 = ReplacementRule(pattern741, lambda n2, n, e, d, c, x, m, p, f, q, a : Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule741)

    pattern742 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda e, d, c, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule742 = ReplacementRule(pattern742, lambda n2, n, e, d, c, x, m, p, f, q, b, a : (d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule742)

    pattern743 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, c, e, a: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule743 = ReplacementRule(pattern743, lambda n2, n, e, d, c, x, m, p, f, q, a : (a + c*x**(S(2)*n))**FracPart(p)*(d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule743)

    pattern744 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule744 = ReplacementRule(pattern744, lambda n2, n, e, d, c, x, m, p, q, b, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p - (m - Mod(m, n))/n)*Int(x**Mod(m, n)*(d + e*x**n)**(q + S(1))*ExpandToSum((e**(S(2)*p + (m - Mod(m, n))/n)*n*x**(m - Mod(m, n))*(q + S(1))*(a + b*x**n + c*x**(S(2)*n))**p - (-d)**(S(-1) + (m - Mod(m, n))/n)*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1)))*(a*e**S(2) - b*d*e + c*d**S(2))**p)/(d + e*x**n), x), x)/(n*(q + S(1))))
    rubi.add(rule744)

    pattern745 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule745 = ReplacementRule(pattern745, lambda n2, n, e, d, c, x, m, p, q, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p - (m - Mod(m, n))/n)*Int(x**Mod(m, n)*(d + e*x**n)**(q + S(1))*ExpandToSum((e**(S(2)*p + (m - Mod(m, n))/n)*n*x**(m - Mod(m, n))*(a + c*x**(S(2)*n))**p*(q + S(1)) - (-d)**(S(-1) + (m - Mod(m, n))/n)*(a*e**S(2) + c*d**S(2))**p*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1))))/(d + e*x**n), x), x)/(n*(q + S(1))))
    rubi.add(rule745)

    pattern746 = Pattern(Integral(x_**m_*(d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Less(m, S(0))))
    rule746 = ReplacementRule(pattern746, lambda n2, n, e, d, c, x, m, p, q, b, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p)*(-d)**(S(-1) + (m - Mod(m, n))/n)*Int(x**m*(d + e*x**n)**(q + S(1))*ExpandToSum((e**(S(2)*p)*n*(-d)**(S(1) + (-m + Mod(m, n))/n)*(q + S(1))*(a + b*x**n + c*x**(S(2)*n))**p - e**((-m + Mod(m, n))/n)*x**(-m + Mod(m, n))*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1)))*(a*e**S(2) - b*d*e + c*d**S(2))**p)/(d + e*x**n), x), x)/(n*(q + S(1))))
    rubi.add(rule746)

    pattern747 = Pattern(Integral(x_**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Less(m, S(0))))
    rule747 = ReplacementRule(pattern747, lambda n2, n, e, d, c, x, m, p, q, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p)*(-d)**(S(-1) + (m - Mod(m, n))/n)*Int(x**m*(d + e*x**n)**(q + S(1))*ExpandToSum((e**(S(2)*p)*n*(-d)**(S(1) + (-m + Mod(m, n))/n)*(a + c*x**(S(2)*n))**p*(q + S(1)) - e**((-m + Mod(m, n))/n)*x**(-m + Mod(m, n))*(a*e**S(2) + c*d**S(2))**p*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1))))/(d + e*x**n), x), x)/(n*(q + S(1))))
    rubi.add(rule747)

    pattern748 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda n, p: Greater(S(2)*n*p, n + S(-1))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda n, m, q, p: NonzeroQ(m + S(2)*n*p + n*q + S(1))))
    rule748 = ReplacementRule(pattern748, lambda n2, n, e, d, c, x, m, p, f, q, b, a : c**p*f**(-S(2)*n*p + n + S(-1))*(f*x)**(m + S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(m + S(2)*n*p + n*q + S(1))) + Int((f*x)**m*(d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(m + S(2)*n*p - n + S(1)) + e*(-c**p*x**(S(2)*n*p) + (a + b*x**n + c*x**(S(2)*n))**p)*(m + S(2)*n*p + n*q + S(1)), x), x)/(e*(m + S(2)*n*p + n*q + S(1))))
    rubi.add(rule748)

    pattern749 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda n, p: Greater(S(2)*n*p, n + S(-1))), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda n, m, q, p: NonzeroQ(m + S(2)*n*p + n*q + S(1))))
    rule749 = ReplacementRule(pattern749, lambda n2, n, e, d, c, x, m, p, f, q, a : c**p*f**(-S(2)*n*p + n + S(-1))*(f*x)**(m + S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(m + S(2)*n*p + n*q + S(1))) + Int((f*x)**m*(d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(m + S(2)*n*p - n + S(1)) + e*(-c**p*x**(S(2)*n*p) + (a + c*x**(S(2)*n))**p)*(m + S(2)*n*p + n*q + S(1)), x), x)/(e*(m + S(2)*n*p + n*q + S(1))))
    rubi.add(rule749)

    pattern750 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)))
    rule750 = ReplacementRule(pattern750, lambda n2, n, e, d, c, x, m, p, f, q, b, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule750)

    pattern751 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)))
    rule751 = ReplacementRule(pattern751, lambda n2, n, e, d, c, x, m, p, f, q, a : Int(ExpandIntegrand((f*x)**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x))
    rubi.add(rule751)

    pattern752 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda c, n, b, p, k, q, m, e, x, d, a: Unequal(k, S(1))))
    def With752(n2, n, e, d, c, x, m, p, q, b, a):
        k = GCD(m + S(1), n)
        return Subst(Int(x**(S(-1) + (m + S(1))/k)*(d + e*x**(n/k))**q*(a + b*x**(n/k) + c*x**(S(2)*n/k))**p, x), x, x**k)/k
    rule752 = ReplacementRule(pattern752, lambda n2, n, e, d, c, x, m, p, q, b, a : With752(n2, n, e, d, c, x, m, p, q, b, a))
    rubi.add(rule752)

    pattern753 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda c, n, p, k, q, m, e, x, d, a: Unequal(k, S(1))))
    def With753(n2, n, e, d, c, x, m, p, q, a):
        k = GCD(m + S(1), n)
        return Subst(Int(x**(S(-1) + (m + S(1))/k)*(a + c*x**(S(2)*n/k))**p*(d + e*x**(n/k))**q, x), x, x**k)/k
    rule753 = ReplacementRule(pattern753, lambda n2, n, e, d, c, x, m, p, q, a : With753(n2, n, e, d, c, x, m, p, q, a))
    rubi.add(rule753)

    pattern754 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)), )
    def With754(n2, n, e, d, c, x, m, p, f, q, b, a):
        k = Denominator(m)
        return k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(d + e*f**(-n)*x**(k*n))**q*(a + b*f**(-n)*x**(k*n) + c*f**(-S(2)*n)*x**(S(2)*k*n))**p, x), x, (f*x)**(1/k))/f
    rule754 = ReplacementRule(pattern754, lambda n2, n, e, d, c, x, m, p, f, q, b, a : With754(n2, n, e, d, c, x, m, p, f, q, b, a))
    rubi.add(rule754)

    pattern755 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)), )
    def With755(n2, n, e, d, c, x, m, p, f, q, a):
        k = Denominator(m)
        return k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(a + c*x**(S(2)*k*n)/f)**p*(d + e*x**(k*n)/f)**q, x), x, (f*x)**(1/k))/f
    rule755 = ReplacementRule(pattern755, lambda n2, n, e, d, c, x, m, p, f, q, a : With755(n2, n, e, d, c, x, m, p, f, q, a))
    rubi.add(rule755)

    pattern756 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: Unequal(m + n*(S(2)*p + S(1)) + S(1), S(0))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule756 = ReplacementRule(pattern756, lambda n2, n, e, d, c, x, m, p, f, b, a : f**(-n)*n*p*Int((f*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(S(2)*a*e*(m + S(1)) - b*d*(m + n*(S(2)*p + S(1)) + S(1)) + x**n*(b*e*(m + S(1)) - S(2)*c*d*(m + n*(S(2)*p + S(1)) + S(1))), x), x)/((m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(d*(m + n*(S(2)*p + S(1)) + S(1)) + e*x**n*(m + S(1)))*(a + b*x**n + c*x**(S(2)*n))**p/(f*(m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule756)

    pattern757 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: Unequal(m + n*(S(2)*p + S(1)) + S(1), S(0))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule757 = ReplacementRule(pattern757, lambda n2, n, e, d, c, x, m, p, f, a : S(2)*f**(-n)*n*p*Int((f*x)**(m + n)*(a + c*x**(S(2)*n))**(p + S(-1))*(a*e*(m + S(1)) - c*d*x**n*(m + n*(S(2)*p + S(1)) + S(1))), x)/((m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**p*(d*(m + n*(S(2)*p + S(1)) + S(1)) + e*x**n*(m + S(1)))/(f*(m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule757)

    pattern758 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule758 = ReplacementRule(pattern758, lambda n2, n, e, d, c, x, m, p, f, b, a : n*p*Int((f*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(-a*b*e*(m + S(1)) + S(2)*a*c*d*(m + n*(S(2)*p + S(1)) + S(1)) + x**n*(S(2)*a*c*e*(m + S(2)*n*p + S(1)) - b**S(2)*e*(m + n*p + S(1)) + b*c*d*(m + n*(S(2)*p + S(1)) + S(1))), x), x)/(c*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p*(b*e*n*p + c*d*(m + n*(S(2)*p + S(1)) + S(1)) + c*e*x**n*(m + S(2)*n*p + S(1)))/(c*f*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule758)

    pattern759 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule759 = ReplacementRule(pattern759, lambda n2, n, e, d, c, x, m, p, f, a : S(2)*a*n*p*Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(-1))*Simp(d*(m + n*(S(2)*p + S(1)) + S(1)) + e*x**n*(m + S(2)*n*p + S(1)), x), x)/((m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**p*(c*d*(m + n*(S(2)*p + S(1)) + S(1)) + c*e*x**n*(m + S(2)*n*p + S(1)))/(c*f*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule759)

    pattern760 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule760 = ReplacementRule(pattern760, lambda n2, n, e, d, c, x, m, p, f, b, a : f**n*Int((f*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(x**n*(b*e - S(2)*c*d)*(m + S(2)*n*p + S(2)*n + S(1)) + (-S(2)*a*e + b*d)*(-m + n + S(-1)), x), x)/(n*(p + S(1))*(-S(4)*a*c + b**S(2))) + f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*e + b*d - x**n*(b*e - S(2)*c*d))/(n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule760)

    pattern761 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule761 = ReplacementRule(pattern761, lambda n2, n, e, d, c, x, m, p, f, a : f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**(p + S(1))*(a*e*(-m + n + S(-1)) + c*d*x**n*(m + S(2)*n*p + S(2)*n + S(1))), x)/(S(2)*a*c*n*(p + S(1))) + f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + c*x**(S(2)*n))**(p + S(1))*(a*e - c*d*x**n)/(S(2)*a*c*n*(p + S(1))))
    rubi.add(rule761)

    pattern762 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule762 = ReplacementRule(pattern762, lambda n2, n, e, d, c, x, m, p, f, b, a : Int((f*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-a*b*e*(m + S(1)) + c*x**n*(-S(2)*a*e + b*d)*(m + n*(S(2)*p + S(3)) + S(1)) + d*(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1))), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-a*b*e + c*x**n*(-S(2)*a*e + b*d) + d*(-S(2)*a*c + b**S(2)))/(a*f*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule762)

    pattern763 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule763 = ReplacementRule(pattern763, lambda n2, n, e, d, c, x, m, p, f, a : Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(1))*Simp(d*(m + S(2)*n*(p + S(1)) + S(1)) + e*x**n*(m + n*(S(2)*p + S(3)) + S(1)), x), x)/(S(2)*a*n*(p + S(1))) - (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**(p + S(1))*(d + e*x**n)/(S(2)*a*f*n*(p + S(1))))
    rubi.add(rule763)

    pattern764 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule764 = ReplacementRule(pattern764, lambda n2, n, e, d, c, x, m, p, f, b, a : e*f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(m + n*(S(2)*p + S(1)) + S(1))) - f**n*Int((f*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**p*Simp(a*e*(m - n + S(1)) + x**n*(b*e*(m + n*p + S(1)) - c*d*(m + n*(S(2)*p + S(1)) + S(1))), x), x)/(c*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule764)

    pattern765 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule765 = ReplacementRule(pattern765, lambda n2, n, e, d, c, x, m, p, f, a : e*f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + c*x**(S(2)*n))**(p + S(1))/(c*(m + n*(S(2)*p + S(1)) + S(1))) - f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**p*(a*e*(m - n + S(1)) - c*d*x**n*(m + n*(S(2)*p + S(1)) + S(1))), x)/(c*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule765)

    pattern766 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule766 = ReplacementRule(pattern766, lambda n2, n, e, d, c, x, m, p, f, b, a : d*(f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(a*f*(m + S(1))) + f**(-n)*Int((f*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**p*Simp(a*e*(m + S(1)) - b*d*(m + n*(p + S(1)) + S(1)) - c*d*x**n*(m + S(2)*n*(p + S(1)) + S(1)), x), x)/(a*(m + S(1))))
    rubi.add(rule766)

    pattern767 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule767 = ReplacementRule(pattern767, lambda n2, n, e, d, c, x, m, p, f, a : d*(f*x)**(m + S(1))*(a + c*x**(S(2)*n))**(p + S(1))/(a*f*(m + S(1))) + f**(-n)*Int((f*x)**(m + n)*(a + c*x**(S(2)*n))**p*(a*e*(m + S(1)) - c*d*x**n*(m + S(2)*n*(p + S(1)) + S(1))), x)/(a*(m + S(1))))
    rubi.add(rule767)

    pattern768 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NegativeQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegersQ(m, n/S(2))), CustomConstraint(lambda n, m: Less(S(0), m, n)), CustomConstraint(lambda c, a: PosQ(a*c)), CustomConstraint(lambda c, n, b, f, q, m, e, x, d, r: Not(NegativeQ(-b*c + S(2)*c*q))))
    def With768(n2, n, e, d, c, x, m, f, b, a):
        q = Rt(a*c, S(2))
        return With(List(Set(r, Rt(-b*c + S(2)*c*q, S(2)))), c*Int((f*x)**m*Simp(d*r - x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*Simp(d*r + x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r))
    rule768 = ReplacementRule(pattern768, lambda n2, n, e, d, c, x, m, f, b, a : With768(n2, n, e, d, c, x, m, f, b, a))
    rubi.add(rule768)

    pattern769 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a: PositiveQ(a*c)), CustomConstraint(lambda n, m: IntegersQ(m, n/S(2))), CustomConstraint(lambda n, m: Less(S(0), m, n)), CustomConstraint(lambda c, n, f, q, m, e, x, d, r: Not(NegativeQ(S(2)*c*q))))
    def With769(n2, n, e, d, c, x, m, f, a):
        q = Rt(a*c, S(2))
        return With(List(Set(r, Rt(S(2)*c*q, S(2)))), c*Int((f*x)**m*Simp(d*r - x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*Simp(d*r + x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r))
    rule769 = ReplacementRule(pattern769, lambda n2, n, e, d, c, x, m, f, a : With769(n2, n, e, d, c, x, m, f, a))
    rubi.add(rule769)

    pattern770 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**S(2)*WC('e', S(1)))/(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, e: PositiveQ(d/e)), CustomConstraint(lambda d, b, c, e: PosQ(c*(-b*e + S(2)*c*d)/e)), )
    def With770(e, d, c, x, m, f, b, a):
        r = Rt(c*(-b*e + S(2)*c*d)/e, S(2))
        return e*Int((f*x)**m/(c*d/e + c*x**S(2) - r*x), x)/S(2) + e*Int((f*x)**m/(c*d/e + c*x**S(2) + r*x), x)/S(2)
    rule770 = ReplacementRule(pattern770, lambda e, d, c, x, m, f, b, a : With770(e, d, c, x, m, f, b, a))
    rubi.add(rule770)

    pattern771 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**S(2)*WC('e', S(1)))/(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, c, e, a: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, e: PositiveQ(d/e)), )
    def With771(e, d, c, x, m, f, a):
        r = Rt(S(2)*c**S(2)*d/e, S(2))
        return e*Int((f*x)**m/(c*d/e + c*x**S(2) - r*x), x)/S(2) + e*Int((f*x)**m/(c*d/e + c*x**S(2) + r*x), x)/S(2)
    rule771 = ReplacementRule(pattern771, lambda e, d, c, x, m, f, a : With771(e, d, c, x, m, f, a))
    rubi.add(rule771)

    pattern772 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NegativeQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: IntegerQ(n/S(2))), CustomConstraint(lambda n: Greater(n, S(2))), CustomConstraint(lambda c, a: PosQ(a*c)), CustomConstraint(lambda c, n, b, f, q, m, e, x, d, r: Not(NegativeQ(-b*c + S(2)*c*q))))
    def With772(n2, n, e, d, c, x, m, f, b, a):
        q = Rt(a*c, S(2))
        return With(List(Set(r, Rt(-b*c + S(2)*c*q, S(2)))), c*Int((f*x)**m*(d*r - x**(n/S(2))*(c*d - e*q))/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*(d*r + x**(n/S(2))*(c*d - e*q))/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r))
    rule772 = ReplacementRule(pattern772, lambda n2, n, e, d, c, x, m, f, b, a : With772(n2, n, e, d, c, x, m, f, b, a))
    rubi.add(rule772)

    pattern773 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: IntegerQ(n/S(2))), CustomConstraint(lambda n: Greater(n, S(2))), CustomConstraint(lambda c, a: PositiveQ(a*c)), CustomConstraint(lambda c, n, f, q, m, e, x, d, r: Not(NegativeQ(S(2)*c*q))))
    def With773(n2, n, e, d, c, x, m, f, a):
        q = Rt(a*c, S(2))
        return With(List(Set(r, Rt(S(2)*c*q, S(2)))), c*Int((f*x)**m*(d*r - x**(n/S(2))*(c*d - e*q))/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*(d*r + x**(n/S(2))*(c*d - e*q))/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r))
    rule773 = ReplacementRule(pattern773, lambda n2, n, e, d, c, x, m, f, a : With773(n2, n, e, d, c, x, m, f, a))
    rubi.add(rule773)

    pattern774 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), )
    def With774(n2, n, e, d, c, x, m, f, b, a):
        q = Rt(-S(4)*a*c + b**S(2), S(2))
        return (e/S(2) - (-b*e + S(2)*c*d)/(S(2)*q))*Int((f*x)**m/(b/S(2) + c*x**n + q/S(2)), x) + (e/S(2) + (-b*e + S(2)*c*d)/(S(2)*q))*Int((f*x)**m/(b/S(2) + c*x**n - q/S(2)), x)
    rule774 = ReplacementRule(pattern774, lambda n2, n, e, d, c, x, m, f, b, a : With774(n2, n, e, d, c, x, m, f, b, a))
    rubi.add(rule774)

    pattern775 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), )
    def With775(n2, n, e, d, c, x, m, f, a):
        q = Rt(-a*c, S(2))
        return (-c*d/(S(2)*q) - e/S(2))*Int((f*x)**m/(-c*x**n + q), x) + (-c*d/(S(2)*q) + e/S(2))*Int((f*x)**m/(c*x**n + q), x)
    rule775 = ReplacementRule(pattern775, lambda n2, n, e, d, c, x, m, f, a : With775(n2, n, e, d, c, x, m, f, a))
    rubi.add(rule775)

    pattern776 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: IntegerQ(m)))
    rule776 = ReplacementRule(pattern776, lambda n2, n, e, d, c, x, m, f, q, b, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule776)

    pattern777 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: IntegerQ(m)))
    rule777 = ReplacementRule(pattern777, lambda n2, n, e, d, c, x, m, f, q, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule777)

    pattern778 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule778 = ReplacementRule(pattern778, lambda n2, n, e, d, c, x, m, f, q, b, a : Int(ExpandIntegrand((f*x)**m, (d + e*x**n)**q/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule778)

    pattern779 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule779 = ReplacementRule(pattern779, lambda n2, n, e, d, c, x, m, f, q, a : Int(ExpandIntegrand((f*x)**m, (d + e*x**n)**q/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule779)

    pattern780 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule780 = ReplacementRule(pattern780, lambda n2, n, e, d, c, x, m, f, q, b, a : f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**(q + S(-1))*(-b*e + c*d + c*e*x**n), x)/c**S(2) - f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**(q + S(-1))*Simp(a*(-b*e + c*d) + x**n*(a*c*e - b**S(2)*e + b*c*d), x)/(a + b*x**n + c*x**(S(2)*n)), x)/c**S(2))
    rubi.add(rule780)

    pattern781 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule781 = ReplacementRule(pattern781, lambda n2, n, e, d, c, x, m, f, q, a : -a*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q/(a + c*x**(S(2)*n)), x)/c + f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q, x)/c)
    rubi.add(rule781)

    pattern782 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule782 = ReplacementRule(pattern782, lambda n2, n, e, d, c, x, m, f, q, b, a : e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1)), x)/c - f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1))*Simp(a*e - x**n*(-b*e + c*d), x)/(a + b*x**n + c*x**(S(2)*n)), x)/c)
    rubi.add(rule782)

    pattern783 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule783 = ReplacementRule(pattern783, lambda n2, n, e, d, c, x, m, f, q, a : e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1)), x)/c - f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1))*Simp(a*e - c*d*x**n, x)/(a + c*x**(S(2)*n)), x)/c)
    rubi.add(rule783)

    pattern784 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule784 = ReplacementRule(pattern784, lambda n2, n, e, d, c, x, m, f, q, b, a : d*Int((f*x)**m*(d + e*x**n)**(q + S(-1)), x)/a - f**(-n)*Int((f*x)**(m + n)*(d + e*x**n)**(q + S(-1))*Simp(-a*e + b*d + c*d*x**n, x)/(a + b*x**n + c*x**(S(2)*n)), x)/a)
    rubi.add(rule784)

    pattern785 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule785 = ReplacementRule(pattern785, lambda n2, n, e, d, c, x, m, f, q, a : d*Int((f*x)**m*(d + e*x**n)**(q + S(-1)), x)/a + f**(-n)*Int((f*x)**(m + n)*(d + e*x**n)**(q + S(-1))*Simp(a*e - c*d*x**n, x)/(a + c*x**(S(2)*n)), x)/a)
    rubi.add(rule785)

    pattern786 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule786 = ReplacementRule(pattern786, lambda n2, n, e, d, c, x, m, f, q, b, a : d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) - f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**(q + S(1))*Simp(a*d + x**n*(-a*e + b*d), x)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule786)

    pattern787 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule787 = ReplacementRule(pattern787, lambda n2, n, e, d, c, x, m, f, q, a : -a*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d - e*x**n)*(d + e*x**n)**(q + S(1))/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)) + d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule787)

    pattern788 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule788 = ReplacementRule(pattern788, lambda n2, n, e, d, c, x, m, f, q, b, a : -d*e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(1))*Simp(a*e + c*d*x**n, x)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule788)

    pattern789 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule789 = ReplacementRule(pattern789, lambda n2, n, e, d, c, x, m, f, q, a : -d*e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(1))*Simp(a*e + c*d*x**n, x)/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule789)

    pattern790 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule790 = ReplacementRule(pattern790, lambda n2, n, e, d, c, x, m, f, q, b, a : e**S(2)*Int((f*x)**m*(d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int((f*x)**m*(d + e*x**n)**(q + S(1))*Simp(-b*e + c*d - c*e*x**n, x)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule790)

    pattern791 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule791 = ReplacementRule(pattern791, lambda n2, n, e, d, c, x, m, f, q, a : c*Int((f*x)**m*(d - e*x**n)*(d + e*x**n)**(q + S(1))/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)) + e**S(2)*Int((f*x)**m*(d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule791)

    pattern792 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m: IntegerQ(m)))
    rule792 = ReplacementRule(pattern792, lambda n2, n, e, d, c, x, m, f, q, b, a : Int(ExpandIntegrand((d + e*x**n)**q, (f*x)**m/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule792)

    pattern793 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m: IntegerQ(m)))
    rule793 = ReplacementRule(pattern793, lambda n2, n, e, d, c, x, m, f, q, a : Int(ExpandIntegrand((d + e*x**n)**q, (f*x)**m/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule793)

    pattern794 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule794 = ReplacementRule(pattern794, lambda n2, n, e, d, c, x, m, f, q, b, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q, 1/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule794)

    pattern795 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda m: Not(IntegerQ(m))))
    rule795 = ReplacementRule(pattern795, lambda n2, n, e, d, c, x, m, f, q, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q, 1/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule795)

    pattern796 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: Less(m, -n)))
    rule796 = ReplacementRule(pattern796, lambda n2, n, e, d, c, x, m, p, f, b, a : Int((f*x)**m*(a*d + x**n*(-a*e + b*d))*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/d**S(2) + f**(-S(2)*n)*(a*e**S(2) - b*d*e + c*d**S(2))*Int((f*x)**(m + S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/d**S(2))
    rubi.add(rule796)

    pattern797 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: Less(m, -n)))
    rule797 = ReplacementRule(pattern797, lambda n2, n, e, d, c, x, m, p, f, a : a*Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(-1))*(d - e*x**n), x)/d**S(2) + f**(-S(2)*n)*(a*e**S(2) + c*d**S(2))*Int((f*x)**(m + S(2)*n)*(a + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/d**S(2))
    rubi.add(rule797)

    pattern798 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule798 = ReplacementRule(pattern798, lambda n2, n, e, d, c, x, m, p, f, b, a : Int((f*x)**m*(a*e + c*d*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(d*e) - f**(-n)*(a*e**S(2) - b*d*e + c*d**S(2))*Int((f*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/(d*e))
    rubi.add(rule798)

    pattern799 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule799 = ReplacementRule(pattern799, lambda n2, n, e, d, c, x, m, p, f, a : Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(-1))*(a*e + c*d*x**n), x)/(d*e) - f**(-n)*(a*e**S(2) + c*d**S(2))*Int((f*x)**(m + n)*(a + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/(d*e))
    rubi.add(rule799)

    pattern800 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n)))
    rule800 = ReplacementRule(pattern800, lambda n2, n, e, d, c, x, m, p, f, b, a : d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) - b*d*e + c*d**S(2)) - f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a*d + x**n*(-a*e + b*d))*(a + b*x**n + c*x**(S(2)*n))**p, x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule800)

    pattern801 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n)))
    rule801 = ReplacementRule(pattern801, lambda n2, n, e, d, c, x, m, p, f, a : -a*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a + c*x**(S(2)*n))**p*(d - e*x**n), x)/(a*e**S(2) + c*d**S(2)) + d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule801)

    pattern802 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule802 = ReplacementRule(pattern802, lambda n2, n, e, d, c, x, m, p, f, b, a : -d*e*f**n*Int((f*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) - b*d*e + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(a*e + c*d*x**n)*(a + b*x**n + c*x**(S(2)*n))**p, x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule802)

    pattern803 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, p: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule803 = ReplacementRule(pattern803, lambda n2, n, e, d, c, x, m, p, f, a : -d*e*f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**p*(a*e + c*d*x**n), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule803)

    pattern804 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q: PositiveIntegerQ(q) | IntegersQ(m, q)))
    rule804 = ReplacementRule(pattern804, lambda n2, n, e, d, c, x, m, p, f, q, b, a : Int(ExpandIntegrand((a + b*x**n + c*x**(S(2)*n))**p, (f*x)**m*(d + e*x**n)**q, x), x))
    rubi.add(rule804)

    pattern805 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q: PositiveIntegerQ(q) | IntegersQ(m, q)))
    rule805 = ReplacementRule(pattern805, lambda n2, n, e, d, c, x, m, p, f, q, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p, (f*x)**m*(d + e*x**n)**q, x), x))
    rubi.add(rule805)

    pattern806 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule806 = ReplacementRule(pattern806, lambda n2, n, e, d, c, x, m, p, q, b, a : -Subst(Int(x**(-m + S(-2))*(d + e*x**(-n))**q*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule806)

    pattern807 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule807 = ReplacementRule(pattern807, lambda n2, n, e, d, c, x, m, p, q, a : -Subst(Int(x**(-m + S(-2))*(a + c*x**(-S(2)*n))**p*(d + e*x**(-n))**q, x), x, 1/x))
    rubi.add(rule807)

    pattern808 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), )
    def With808(n2, n, e, d, c, x, m, p, f, q, b, a):
        g = Denominator(m)
        return -g*Subst(Int(x**(-g*(m + S(1)) + S(-1))*(d + e*f**(-n)*x**(-g*n))**q*(a + b*f**(-n)*x**(-g*n) + c*f**(-S(2)*n)*x**(-S(2)*g*n))**p, x), x, (f*x)**(-S(1)/g))/f
    rule808 = ReplacementRule(pattern808, lambda n2, n, e, d, c, x, m, p, f, q, b, a : With808(n2, n, e, d, c, x, m, p, f, q, b, a))
    rubi.add(rule808)

    pattern809 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), )
    def With809(n2, n, e, d, c, x, m, p, f, q, a):
        g = Denominator(m)
        return -g*Subst(Int(x**(-g*(m + S(1)) + S(-1))*(a + c*f**(-S(2)*n)*x**(-S(2)*g*n))**p*(d + e*f**(-n)*x**(-g*n))**q, x), x, (f*x)**(-S(1)/g))/f
    rule809 = ReplacementRule(pattern809, lambda n2, n, e, d, c, x, m, p, f, q, a : With809(n2, n, e, d, c, x, m, p, f, q, a))
    rubi.add(rule809)

    pattern810 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: Not(RationalQ(m))))
    rule810 = ReplacementRule(pattern810, lambda n2, n, e, d, c, x, m, p, f, q, b, a : -f**IntPart(m)*(f*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(d + e*x**(-n))**q*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule810)

    pattern811 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: Not(RationalQ(m))))
    rule811 = ReplacementRule(pattern811, lambda n2, n, e, d, c, x, m, p, f, q, a : -f**IntPart(m)*(f*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(a + c*x**(-S(2)*n))**p*(d + e*x**(-n))**q, x), x, 1/x))
    rubi.add(rule811)

    pattern812 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)), )
    def With812(n2, n, e, d, c, x, m, p, q, b, a):
        g = Denominator(n)
        return g*Subst(Int(x**(g*(m + S(1)) + S(-1))*(d + e*x**(g*n))**q*(a + b*x**(g*n) + c*x**(S(2)*g*n))**p, x), x, x**(1/g))
    rule812 = ReplacementRule(pattern812, lambda n2, n, e, d, c, x, m, p, q, b, a : With812(n2, n, e, d, c, x, m, p, q, b, a))
    rubi.add(rule812)

    pattern813 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)), )
    def With813(n2, n, e, d, c, x, m, p, q, a):
        g = Denominator(n)
        return g*Subst(Int(x**(g*(m + S(1)) + S(-1))*(a + c*x**(S(2)*g*n))**p*(d + e*x**(g*n))**q, x), x, x**(1/g))
    rule813 = ReplacementRule(pattern813, lambda n2, n, e, d, c, x, m, p, q, a : With813(n2, n, e, d, c, x, m, p, q, a))
    rubi.add(rule813)

    pattern814 = Pattern(Integral((f_*x_)**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)))
    rule814 = ReplacementRule(pattern814, lambda n2, n, e, d, c, x, m, p, f, q, b, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule814)

    pattern815 = Pattern(Integral((f_*x_)**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)))
    rule815 = ReplacementRule(pattern815, lambda n2, n, e, d, c, x, m, p, f, q, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule815)

    pattern816 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(n/(m + S(1)))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule816 = ReplacementRule(pattern816, lambda n2, n, e, d, c, x, m, p, q, b, a : Subst(Int((d + e*x**(n/(m + S(1))))**q*(a + b*x**(n/(m + S(1))) + c*x**(S(2)*n/(m + S(1))))**p, x), x, x**(m + S(1)))/(m + S(1)))
    rubi.add(rule816)

    pattern817 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(n/(m + S(1)))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule817 = ReplacementRule(pattern817, lambda n2, n, e, d, c, x, m, p, q, a : Subst(Int((a + c*x**(S(2)*n/(m + S(1))))**p*(d + e*x**(n/(m + S(1))))**q, x), x, x**(m + S(1)))/(m + S(1)))
    rubi.add(rule817)

    pattern818 = Pattern(Integral((f_*x_)**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(n/(m + S(1)))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule818 = ReplacementRule(pattern818, lambda n2, n, e, d, c, x, m, p, f, q, b, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule818)

    pattern819 = Pattern(Integral((f_*x_)**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(n/(m + S(1)))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule819 = ReplacementRule(pattern819, lambda n2, n, e, d, c, x, m, p, f, q, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule819)

    pattern820 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), )
    def With820(n2, n, e, d, c, x, m, f, q, b, a):
        r = Rt(-S(4)*a*c + b**S(2), S(2))
        return S(2)*c*Int((f*x)**m*(d + e*x**n)**q/(b + S(2)*c*x**n - r), x)/r - S(2)*c*Int((f*x)**m*(d + e*x**n)**q/(b + S(2)*c*x**n + r), x)/r
    rule820 = ReplacementRule(pattern820, lambda n2, n, e, d, c, x, m, f, q, b, a : With820(n2, n, e, d, c, x, m, f, q, b, a))
    rubi.add(rule820)

    pattern821 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), )
    def With821(n2, n, e, d, c, x, m, f, q, a):
        r = Rt(-a*c, S(2))
        return -c*Int((f*x)**m*(d + e*x**n)**q/(-c*x**n + r), x)/(S(2)*r) - c*Int((f*x)**m*(d + e*x**n)**q/(c*x**n + r), x)/(S(2)*r)
    rule821 = ReplacementRule(pattern821, lambda n2, n, e, d, c, x, m, f, q, a : With821(n2, n, e, d, c, x, m, f, q, a))
    rubi.add(rule821)

    pattern822 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1))))
    rule822 = ReplacementRule(pattern822, lambda n2, n, e, d, c, x, m, p, f, b, a : Int((f*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-a*b*e*(m + S(1)) + c*x**n*(-S(2)*a*e + b*d)*(m + n*(S(2)*p + S(3)) + S(1)) + d*(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1))), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-a*b*e + c*x**n*(-S(2)*a*e + b*d) + d*(-S(2)*a*c + b**S(2)))/(a*f*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule822)

    pattern823 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1))))
    rule823 = ReplacementRule(pattern823, lambda n2, n, e, d, c, x, m, p, f, a : Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(1))*Simp(d*(m + S(2)*n*(p + S(1)) + S(1)) + e*x**n*(m + n*(S(2)*p + S(3)) + S(1)), x), x)/(S(2)*a*n*(p + S(1))) - (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**(p + S(1))*(d + e*x**n)/(S(2)*a*f*n*(p + S(1))))
    rubi.add(rule823)

    pattern824 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda q, p: PositiveIntegerQ(p) | PositiveIntegerQ(q)))
    rule824 = ReplacementRule(pattern824, lambda n2, n, e, d, c, x, m, p, f, q, b, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule824)

    pattern825 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q, p: PositiveIntegerQ(p) | PositiveIntegerQ(q)))
    rule825 = ReplacementRule(pattern825, lambda n2, n, e, d, c, x, m, p, f, q, a : Int(ExpandIntegrand((f*x)**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x))
    rubi.add(rule825)

    pattern826 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)))
    rule826 = ReplacementRule(pattern826, lambda n2, n, e, d, c, x, m, p, f, q, a : f**m*Int(ExpandIntegrand(x**m*(a + c*x**(S(2)*n))**p, (d/(d**S(2) - e**S(2)*x**(S(2)*n)) - e*x**n/(d**S(2) - e**S(2)*x**(S(2)*n)))**(-q), x), x))
    rubi.add(rule826)

    pattern827 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda f, m: Not(IntegerQ(m) | PositiveQ(f))))
    rule827 = ReplacementRule(pattern827, lambda n2, n, e, d, c, x, m, p, f, q, a : x**(-m)*(f*x)**m*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule827)

    pattern828 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)))
    rule828 = ReplacementRule(pattern828, lambda n2, n, e, d, c, x, m, p, f, q, b, a : Int((f*x)**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule828)

    pattern829 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)))
    rule829 = ReplacementRule(pattern829, lambda n2, n, e, d, c, x, m, p, f, q, a : Int((f*x)**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule829)

    pattern830 = Pattern(Integral(u_**WC('m', S(1))*(d_ + v_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + v_**n_*WC('b', S(1)) + v_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, v, u: LinearPairQ(u, v, x)))
    rule830 = ReplacementRule(pattern830, lambda n2, n, e, u, d, c, x, v, m, p, q, b, a : u**m*v**(-m)*Subst(Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x, v)/Coefficient(v, x, S(1)))
    rubi.add(rule830)

    pattern831 = Pattern(Integral(u_**WC('m', S(1))*(a_ + v_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + v_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, v, u: LinearPairQ(u, v, x)))
    rule831 = ReplacementRule(pattern831, lambda n2, n, e, d, c, x, v, m, p, q, u, a : u**m*v**(-m)*Subst(Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x, v)/Coefficient(v, x, S(1)))
    rubi.add(rule831)

    pattern832 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)))
    rule832 = ReplacementRule(pattern832, lambda n2, n, mn, e, d, c, x, m, p, q, b, a : Int(x**(m - n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule832)

    pattern833 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: IntegerQ(q)))
    rule833 = ReplacementRule(pattern833, lambda n2, a, e, d, c, x, m, p, q, mn : Int(x**(m + mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule833)

    pattern834 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule834 = ReplacementRule(pattern834, lambda n2, n, mn, e, d, c, x, m, p, q, b, a : Int(x**(m + S(2)*n*p)*(d + e*x**(-n))**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule834)

    pattern835 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule835 = ReplacementRule(pattern835, lambda n2, a, e, d, c, x, m, p, q, mn : Int(x**(m - S(2)*mn*p)*(d + e*x**mn)**q*(a*x**(S(2)*mn) + c)**p, x))
    rubi.add(rule835)

    pattern836 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule836 = ReplacementRule(pattern836, lambda n2, n, mn, e, d, c, x, m, p, q, b, a : x**(n*FracPart(q))*(d + e*x**(-n))**FracPart(q)*(d*x**n + e)**(-FracPart(q))*Int(x**(m - n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule836)

    pattern837 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: Not(IntegerQ(q))), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule837 = ReplacementRule(pattern837, lambda n2, a, e, d, c, x, m, p, q, mn : x**(-mn*FracPart(q))*(d + e*x**mn)**FracPart(q)*(d*x**(-mn) + e)**(-FracPart(q))*Int(x**(m + mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule837)

    pattern838 = Pattern(Integral((f_*x_)**m_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)))
    rule838 = ReplacementRule(pattern838, lambda n2, n, mn, e, d, c, x, m, p, f, q, b, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**mn)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule838)

    pattern839 = Pattern(Integral((f_*x_)**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)))
    rule839 = ReplacementRule(pattern839, lambda n2, a, e, d, c, x, m, p, f, q, mn : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**mn)**q, x))
    rubi.add(rule839)

    pattern840 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule840 = ReplacementRule(pattern840, lambda n, mn, e, d, c, x, m, p, q, b, a : Int(x**(m - n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule840)

    pattern841 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule841 = ReplacementRule(pattern841, lambda n, mn, e, d, c, x, m, p, q, b, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(m - n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule841)

    pattern842 = Pattern(Integral((f_*x_)**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)))
    rule842 = ReplacementRule(pattern842, lambda n, mn, e, d, c, x, m, p, f, q, b, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**(-n) + c*x**n)**p, x))
    rubi.add(rule842)

    pattern843 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda non2, n: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, e2, d1, d2: ZeroQ(d1*e2 + d2*e1)), CustomConstraint(lambda d1, q, d2: IntegerQ(q) | (PositiveQ(d1) & PositiveQ(d2))))
    rule843 = ReplacementRule(pattern843, lambda n2, a, n, non2, c, x, m, d1, p, e1, f, d2, q, b, e2 : Int((f*x)**m*(d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule843)

    pattern844 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, n: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda non2, n: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, e2, d1, d2: ZeroQ(d1*e2 + d2*e1)))
    rule844 = ReplacementRule(pattern844, lambda n2, a, n, non2, c, x, m, d1, p, e1, f, d2, q, b, e2 : (d1 + e1*x**(n/S(2)))**FracPart(q)*(d2 + e2*x**(n/S(2)))**FracPart(q)*(d1*d2 + e1*e2*x**n)**(-FracPart(q))*Int((f*x)**m*(d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule844)

    pattern845 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, q: ZeroQ(n - q)), CustomConstraint(lambda n, r: ZeroQ(-n + r)))
    rule845 = ReplacementRule(pattern845, lambda n, r, c, x, p, q, b, a : Int((x**n*(a + b + c))**p, x))
    rubi.add(rule845)

    pattern846 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: IntegerQ(p)))
    rule846 = ReplacementRule(pattern846, lambda n, r, c, x, p, q, b, a : Int(x**(p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule846)

    pattern847 = Pattern(Integral(sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule847 = ReplacementRule(pattern847, lambda n, r, c, x, q, b, a : x**(-q/S(2))*sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q))*Int(x**(q/S(2))*sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)/sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)))
    rubi.add(rule847)

    pattern848 = Pattern(Integral(1/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule848 = ReplacementRule(pattern848, lambda n, r, c, x, q, b, a : x**(q/S(2))*sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))*Int(x**(-q/S(2))/sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)/sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule848)

    pattern849 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, q, p: NonzeroQ(p*(S(2)*n - q) + S(1))))
    rule849 = ReplacementRule(pattern849, lambda n, r, c, x, p, q, b, a : p*(n - q)*Int(x**q*(S(2)*a + b*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(p*(S(2)*n - q) + S(1)) + x*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(p*(S(2)*n - q) + S(1)))
    rubi.add(rule849)

    pattern850 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule850 = ReplacementRule(pattern850, lambda n, r, c, x, p, q, b, a : -x**(-q + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(-q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(b*c*x**(n - q)*(p*q + (n - q)*(S(2)*p + S(3)) + S(1)) + (n - q)*(p + S(1))*(-S(4)*a*c + b**S(2)) + (-S(2)*a*c + b**S(2))*(p*q + S(1))), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule850)

    pattern851 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule851 = ReplacementRule(pattern851, lambda n, r, c, x, p, q, b, a : x**(-p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**(-p)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Int(x**(p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule851)

    pattern852 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)))
    rule852 = ReplacementRule(pattern852, lambda n, r, c, x, p, q, b, a : Int((a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x))
    rubi.add(rule852)

    pattern853 = Pattern(Integral((u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule853 = ReplacementRule(pattern853, lambda n, r, u, c, x, p, q, b, a : Subst(Int((a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule853)

    pattern854 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, q: ZeroQ(-n + q)), CustomConstraint(lambda n, r: ZeroQ(-n + r)))
    rule854 = ReplacementRule(pattern854, lambda n, r, c, x, m, p, q, b, a : Int(x**m*(x**n*(a + b + c))**p, x))
    rubi.add(rule854)

    pattern855 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule855 = ReplacementRule(pattern855, lambda n, r, c, x, m, p, q, b, a : Int(x**(m + p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule855)

    pattern856 = Pattern(Integral(x_**WC('m', S(1))/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda n, m, q: (ZeroQ(m + S(-1)) & ZeroQ(n + S(-3)) & ZeroQ(q + S(-2))) | (ZeroQ(n + S(-3)) & ZeroQ(q + S(-1)) & (ZeroQ(m + S(-5)/2) | ZeroQ(m + S(-3)/2) | ZeroQ(m + S(-1)/2) | ZeroQ(m + S(1)/2)))))
    rule856 = ReplacementRule(pattern856, lambda n, r, c, x, m, q, b, a : x**(q/S(2))*sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))*Int(x**(m - q/S(2))/sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)/sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule856)

    pattern857 = Pattern(Integral(x_**WC('m', S(1))/(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m - S(3)*n/S(2) + S(3)/2)), CustomConstraint(lambda n, q: ZeroQ(-n + q + S(1))), CustomConstraint(lambda n, r: ZeroQ(-n + r + S(-1))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule857 = ReplacementRule(pattern857, lambda n, r, c, x, m, q, b, a : -S(2)*x**(n/S(2) + S(-1)/2)*(b + S(2)*c*x)/((-S(4)*a*c + b**S(2))*sqrt(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))))
    rubi.add(rule857)

    pattern858 = Pattern(Integral(x_**WC('m', S(1))/(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m - S(3)*n/S(2) + S(1)/2)), CustomConstraint(lambda n, q: ZeroQ(-n + q + S(1))), CustomConstraint(lambda n, r: ZeroQ(-n + r + S(-1))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule858 = ReplacementRule(pattern858, lambda n, r, c, x, m, q, b, a : x**(n/S(2) + S(-1)/2)*(S(4)*a + S(2)*b*x)/((-S(4)*a*c + b**S(2))*sqrt(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))))
    rubi.add(rule858)

    pattern859 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda n, m, p: Equal(m + p*(n + S(-1)) + S(-1), S(0))))
    rule859 = ReplacementRule(pattern859, lambda n, r, c, x, m, p, q, b, a : -b*Int(x**(m + S(-1))*(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))**p, x)/(S(2)*c) + x**(m - n)*(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))**(p + S(1))/(S(2)*c*(p + S(1))))
    rubi.add(rule859)

    pattern860 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, q, p: Equal(m + p*q + S(1), n - q)))
    rule860 = ReplacementRule(pattern860, lambda n, r, c, x, m, p, q, b, a : -p*(-S(4)*a*c + b**S(2))*Int(x**(m + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(S(2)*c*(S(2)*p + S(1))) + x**(m - n + q + S(1))*(b + S(2)*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(S(2)*c*(n - q)*(S(2)*p + S(1))))
    rubi.add(rule860)

    pattern861 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, q, p: Greater(m + p*q + S(1), n - q)), CustomConstraint(lambda n, m, q, p: Unequal(m + p*(S(2)*n - q) + S(1), S(0))), CustomConstraint(lambda n, m, q, p: Unequal(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1), S(0))))
    rule861 = ReplacementRule(pattern861, lambda n, r, c, x, m, p, q, b, a : p*(n - q)*Int(x**(m - n + S(2)*q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*Simp(-a*b*(m - n + p*q + q + S(1)) + x**(n - q)*(S(2)*a*c*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1)) - b**S(2)*(m + p*q + (n - q)*(p + S(-1)) + S(1))), x), x)/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1))) + x**(m - n + q + S(1))*(b*p*(n - q) + c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1))))
    rubi.add(rule861)

    pattern862 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, q, p: LessEqual(m + p*q + S(1), -n + q + S(1))), CustomConstraint(lambda m, q, p: NonzeroQ(m + p*q + S(1))))
    rule862 = ReplacementRule(pattern862, lambda n, r, c, x, m, p, q, b, a : -p*(n - q)*Int(x**(m + n)*(b + S(2)*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(m + p*q + S(1)) + x**(m + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(m + p*q + S(1)))
    rubi.add(rule862)

    pattern863 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, q, p: Greater(m + p*q + S(1), -n + q)), CustomConstraint(lambda n, m, q, p: Unequal(m + p*(S(2)*n - q) + S(1), S(0))))
    rule863 = ReplacementRule(pattern863, lambda n, r, c, x, m, p, q, b, a : p*(n - q)*Int(x**(m + q)*(S(2)*a + b*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(m + p*(S(2)*n - q) + S(1)) + x**(m + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(m + p*(S(2)*n - q) + S(1)))
    rubi.add(rule863)

    pattern864 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, q, p: Equal(m + p*q + S(1), (-n + q)*(S(2)*p + S(3)))))
    rule864 = ReplacementRule(pattern864, lambda n, r, c, x, m, p, q, b, a : -x**(m - q + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + (S(2)*a*c - b**S(2)*(p + S(2)))*Int(x**(m - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1)), x)/(a*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule864)

    pattern865 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, q, p: Greater(m + p*q + S(1), S(2)*n - S(2)*q)))
    rule865 = ReplacementRule(pattern865, lambda n, r, c, x, m, p, q, b, a : -x**(m - S(2)*n + q + S(1))*(S(2)*a + b*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - S(2)*n + q)*(S(2)*a*(m - S(2)*n + p*q + S(2)*q + S(1)) + b*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1)), x)/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule865)

    pattern866 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, q, p: Less(m + p*q + S(1), n - q)))
    rule866 = ReplacementRule(pattern866, lambda n, r, c, x, m, p, q, b, a : -x**(m - q + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*a*c*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + b**S(2)*(m + p*q + (n - q)*(p + S(1)) + S(1)) + b*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(3)) + S(1))), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule866)

    pattern867 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, q, p: Less(n - q, m + p*q + S(1), S(2)*n - S(2)*q)))
    rule867 = ReplacementRule(pattern867, lambda n, r, c, x, m, p, q, b, a : x**(m - n + S(1))*(b + S(2)*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int(x**(m - n)*(b*(m - n + p*q + q + S(1)) + S(2)*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1)), x)/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule867)

    pattern868 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, m, q, p: Equal(m + p*q + S(1), S(2)*n - S(2)*q)))
    rule868 = ReplacementRule(pattern868, lambda n, r, c, x, m, p, q, b, a : -b*Int(x**(m - n + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(S(2)*c) + x**(m - S(2)*n + q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(S(2)*c*(n - q)*(p + S(1))))
    rubi.add(rule868)

    pattern869 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, m, q, p: Equal(m + p*q + S(1), -S(2)*(n - q)*(p + S(1)))))
    rule869 = ReplacementRule(pattern869, lambda n, r, c, x, m, p, q, b, a : -b*Int(x**(m + n - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(S(2)*a) - x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(S(2)*a*(n - q)*(p + S(1))))
    rubi.add(rule869)

    pattern870 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, m, q, p: Greater(m + p*q + S(1), S(2)*n - S(2)*q)))
    rule870 = ReplacementRule(pattern870, lambda n, r, c, x, m, p, q, b, a : x**(m - S(2)*n + q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(c*(m + p*q + S(2)*p*(n - q) + S(1))) - Int(x**(m - S(2)*n + S(2)*q)*(a*(m - S(2)*n + p*q + S(2)*q + S(1)) + b*x**(n - q)*(m + p*q + (n - q)*(p + S(-1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(c*(m + p*q + S(2)*p*(n - q) + S(1))))
    rubi.add(rule870)

    pattern871 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda m, q, p: Less(m + p*q + S(1), S(0))))
    rule871 = ReplacementRule(pattern871, lambda n, r, c, x, m, p, q, b, a : x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(m + p*q + S(1))) - Int(x**(m + n - q)*(b*(m + p*q + (n - q)*(p + S(1)) + S(1)) + c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(a*(m + p*q + S(1))))
    rubi.add(rule871)

    pattern872 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule872 = ReplacementRule(pattern872, lambda n, r, c, x, m, p, q, b, a : x**(-p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**(-p)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Int(x**(m + p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule872)

    pattern873 = Pattern(Integral(u_**WC('m', S(1))*(u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule873 = ReplacementRule(pattern873, lambda n, r, u, c, x, m, p, q, b, a : Subst(Int(x**m*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule873)

    pattern874 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule874 = ReplacementRule(pattern874, lambda n, r, B, A, c, x, p, j, q, b, a : Int(x**(p*q)*(A + B*x**(n - q))*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule874)

    pattern875 = Pattern(Integral((A_ + x_**WC('j', S(1))*WC('B', S(1)))/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda n: ZeroQ(n + S(-3))), CustomConstraint(lambda q: ZeroQ(q + S(-2))))
    rule875 = ReplacementRule(pattern875, lambda n, r, B, A, c, x, j, q, b, a : x**(q/S(2))*sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))*Int(x**(-q/S(2))*(A + B*x**(n - q))/sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)/sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule875)

    pattern876 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, q, p: NonzeroQ(p*(S(2)*n - q) + S(1))), CustomConstraint(lambda n, q, p: NonzeroQ(p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rule876 = ReplacementRule(pattern876, lambda n, r, B, A, c, x, p, j, q, b, a : p*(n - q)*Int(x**q*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*(S(2)*A*a*c*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) - B*a*b*(p*q + S(1)) + x**(n - q)*(A*b*c*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*c*(p*(S(2)*n - q) + S(1)) - B*b**S(2)*(p*q + p*(n - q) + S(1)))), x)/(c*(p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*(A*c*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*p*(n - q) + B*c*x**(n - q)*(p*(S(2)*n - q) + S(1)))/(c*(p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule876)

    pattern877 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda c, n, p, q, B, j, x, A, a: ZeroQ(j - S(2)*n + q) & NonzeroQ(p*(S(2)*n - q) + S(1)) & NonzeroQ(p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    def With877(r, B, A, c, x, p, q, j, a):
        n = q + r
        return p*(n - q)*Int(x**q*(a*x**q + c*x**(S(2)*n - q))**(p + S(-1))*(S(2)*A*a*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*x**(n - q)*(p*(S(2)*n - q) + S(1))), x)/((p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x*(A*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(p*(S(2)*n - q) + S(1)))*(a*x**q + c*x**(S(2)*n - q))**p/((p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)))
    rule877 = ReplacementRule(pattern877, lambda r, B, A, c, x, p, q, j, a : With877(r, B, A, c, x, p, q, j, a))
    rubi.add(rule877)

    pattern878 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule878 = ReplacementRule(pattern878, lambda n, r, B, A, c, x, p, j, q, b, a : -x**(-q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*A*a*c + A*b**S(2) - B*a*b + c*x**(n - q)*(A*b - S(2)*B*a))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(-q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*A*a*c*(p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + A*b**S(2)*(p*q + (n - q)*(p + S(1)) + S(1)) - B*a*b*(p*q + S(1)) + c*x**(n - q)*(A*b - S(2)*B*a)*(p*q + (n - q)*(S(2)*p + S(3)) + S(1))), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule878)

    pattern879 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda c, n, p, q, B, j, x, A, a: ZeroQ(j - S(2)*n + q)))
    def With879(r, B, A, c, x, p, q, j, a):
        n = q + r
        return -x**(-q + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*(A*a*c + B*a*c*x**(n - q))/(S(2)*a**S(2)*c*(n - q)*(p + S(1))) + Int(x**(-q)*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*(A*a*c*(p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*c*x**(n - q)*(p*q + (n - q)*(S(2)*p + S(3)) + S(1))), x)/(S(2)*a**S(2)*c*(n - q)*(p + S(1)))
    rule879 = ReplacementRule(pattern879, lambda r, B, A, c, x, p, q, j, a : With879(r, B, A, c, x, p, q, j, a))
    rubi.add(rule879)

    pattern880 = Pattern(Integral((A_ + x_**WC('j', S(1))*WC('B', S(1)))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)))
    rule880 = ReplacementRule(pattern880, lambda n, r, B, A, c, x, p, j, q, b, a : Int((A + B*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x))
    rubi.add(rule880)

    pattern881 = Pattern(Integral((A_ + u_**WC('j', S(1))*WC('B', S(1)))*(u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule881 = ReplacementRule(pattern881, lambda n, r, B, A, u, c, x, p, j, q, b, a : Subst(Int((A + B*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule881)

    pattern882 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule882 = ReplacementRule(pattern882, lambda n, r, B, A, c, x, m, p, b, q, j, a : Int(x**(m + p*q)*(A + B*x**(n - q))*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule882)

    pattern883 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, q, p: LessEqual(m + p*q, -n + q)), CustomConstraint(lambda m, q, p: Unequal(m + p*q + S(1), S(0))), CustomConstraint(lambda n, m, q, p: Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    rule883 = ReplacementRule(pattern883, lambda n, r, B, A, c, x, m, p, b, q, j, a : p*(n - q)*Int(x**(m + n)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*Simp(-A*b*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*(m + p*q + S(1)) + x**(n - q)*(-S(2)*A*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*(m + p*q + S(1))), x), x)/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(A*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(m + p*q + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule883)

    pattern884 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda c, n, p, q, m, B, j, x, A, a: PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Unequal(m + p*q + S(1), S(0)) & LessEqual(m + p*q, -n + q) & Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    def With884(r, B, A, c, x, m, p, q, j, a):
        n = q + r
        return S(2)*p*(n - q)*Int(x**(m + n)*(a*x**q + c*x**(S(2)*n - q))**(p + S(-1))*Simp(-A*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*a*(m + p*q + S(1)), x), x)/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(A*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(m + p*q + S(1)))*(a*x**q + c*x**(S(2)*n - q))**p/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)))
    rule884 = ReplacementRule(pattern884, lambda r, B, A, c, x, m, p, q, j, a : With884(r, B, A, c, x, m, p, q, j, a))
    rubi.add(rule884)

    pattern885 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, q, p: Greater(m + p*q, n - q + S(-1))))
    rule885 = ReplacementRule(pattern885, lambda n, r, B, A, c, x, m, p, b, q, j, a : x**(m - n + S(1))*(A*b - S(2)*B*a - x**(n - q)*(-S(2)*A*c + B*b))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - n)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*Simp(x**(n - q)*(-S(2)*A*c + B*b)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + (-A*b + S(2)*B*a)*(m - n + p*q + q + S(1)), x), x)/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule885)

    pattern886 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda c, n, p, q, m, B, j, x, A, a: PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Greater(m + p*q, n - q + S(-1))))
    def With886(r, B, A, c, x, m, p, q, j, a):
        n = q + r
        return x**(m - n + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*(-A*c*x**(n - q) + B*a)/(S(2)*a*c*(n - q)*(p + S(1))) - Int(x**(m - n)*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*Simp(-A*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*(m - n + p*q + q + S(1)), x), x)/(S(2)*a*c*(n - q)*(p + S(1)))
    rule886 = ReplacementRule(pattern886, lambda r, B, A, c, x, m, p, q, j, a : With886(r, B, A, c, x, m, p, q, j, a))
    rubi.add(rule886)

    pattern887 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, q, p: Greater(m + p*q, -n + q + S(-1))), CustomConstraint(lambda n, m, q, p: Unequal(m + p*(S(2)*n - q) + S(1), S(0))), CustomConstraint(lambda n, m, q, p: Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    rule887 = ReplacementRule(pattern887, lambda n, r, B, A, c, x, m, p, b, q, j, a : p*(n - q)*Int(x**(m + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*Simp(S(2)*A*a*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) - B*a*b*(m + p*q + S(1)) + x**(n - q)*(A*b*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*c*(m + p*q + S(2)*p*(n - q) + S(1)) - B*b**S(2)*(m + p*q + p*(n - q) + S(1))), x), x)/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*(A*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*p*(n - q) + B*c*x**(n - q)*(m + p*q + S(2)*p*(n - q) + S(1)))/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule887)

    pattern888 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda c, n, p, q, m, B, j, x, A, a: PositiveIntegerQ(n) & Unequal(m + S(1), n) & ZeroQ(j - S(2)*n + q) & Greater(m + p*q, -n + q) & Unequal(m + p*q + S(2)*p*(n - q) + S(1), S(0)) & Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    def With888(r, B, A, c, x, m, p, q, j, a):
        n = q + r
        return p*(n - q)*Int(x**(m + q)*(a*x**q + c*x**(S(2)*n - q))**(p + S(-1))*Simp(S(2)*A*a*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*x**(n - q)*(m + p*q + S(2)*p*(n - q) + S(1)), x), x)/((m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(A*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(m + p*q + S(2)*p*(n - q) + S(1)))*(a*x**q + c*x**(S(2)*n - q))**p/((m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)))
    rule888 = ReplacementRule(pattern888, lambda r, B, A, c, x, m, p, q, j, a : With888(r, B, A, c, x, m, p, q, j, a))
    rubi.add(rule888)

    pattern889 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, q, p: Less(m + p*q, n - q + S(-1))))
    rule889 = ReplacementRule(pattern889, lambda n, r, B, A, c, x, m, p, b, q, j, a : -x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*A*a*c + A*b**S(2) - B*a*b + c*x**(n - q)*(A*b - S(2)*B*a))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*Simp(-S(2)*A*a*c*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + A*b**S(2)*(m + p*q + (n - q)*(p + S(1)) + S(1)) - B*a*b*(m + p*q + S(1)) + c*x**(n - q)*(A*b - S(2)*B*a)*(m + p*q + (n - q)*(S(2)*p + S(3)) + S(1)), x), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule889)

    pattern890 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda c, n, p, q, m, B, j, x, A, a: PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Less(m + p*q, n - q + S(-1))))
    def With890(r, B, A, c, x, m, p, q, j, a):
        n = q + r
        return -x**(m - q + S(1))*(A*c + B*c*x**(n - q))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))/(S(2)*a*c*(n - q)*(p + S(1))) + Int(x**(m - q)*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*Simp(A*c*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(3)) + S(1)), x), x)/(S(2)*a*c*(n - q)*(p + S(1)))
    rule890 = ReplacementRule(pattern890, lambda r, B, A, c, x, m, p, q, j, a : With890(r, B, A, c, x, m, p, q, j, a))
    rubi.add(rule890)

    pattern891 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, m, q, p: GreaterEqual(m + p*q, n - q + S(-1))), CustomConstraint(lambda n, m, q, p: Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    rule891 = ReplacementRule(pattern891, lambda n, r, B, A, c, x, m, p, b, q, j, a : B*x**(m - n + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) - Int(x**(m - n + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Simp(B*a*(m - n + p*q + q + S(1)) + x**(n - q)*(-A*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*(m + p*q + p*(n - q) + S(1))), x), x)/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule891)

    pattern892 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda c, n, p, q, m, B, j, x, A, a: PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & GreaterEqual(m + p*q, n - q + S(-1)) & Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    def With892(r, B, A, c, x, m, p, q, j, a):
        n = q + r
        return B*x**(m - n + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) - Int(x**(m - n + q)*(a*x**q + c*x**(S(2)*n - q))**p*Simp(-A*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*a*(m - n + p*q + q + S(1)), x), x)/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)))
    rule892 = ReplacementRule(pattern892, lambda r, B, A, c, x, m, p, q, j, a : With892(r, B, A, c, x, m, p, q, j, a))
    rubi.add(rule892)

    pattern893 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, r, q: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda c, b, a: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda n, m, q, p: Inequality(S(-1), LessEqual, p, Less, S(0)) | Equal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))), CustomConstraint(lambda n, m, q, p: LessEqual(m + p*q, -n + q)), CustomConstraint(lambda m, q, p: Unequal(m + p*q + S(1), S(0))))
    rule893 = ReplacementRule(pattern893, lambda n, r, B, A, c, x, m, p, b, q, j, a : A*x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(m + p*q + S(1))) + Int(x**(m + n - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Simp(-A*b*(m + p*q + (n - q)*(p + S(1)) + S(1)) - A*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*(m + p*q + S(1)), x), x)/(a*(m + p*q + S(1))))
    rubi.add(rule893)

    pattern894 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda m, q, p: RationalQ(m, p, q)), CustomConstraint(lambda c, n, p, q, m, B, j, LessEqual, x, A, a, Less: PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Unequal(m + p*q + S(1), S(0)) & LessEqual(m + p*q, -n + q) & (Inequality(S(-1), LessEqual, p, Less, S(0)) | Equal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0)))))
    def With894(r, B, A, c, x, m, p, q, j, a):
        n = q + r
        return A*x**(m - q + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))/(a*(m + p*q + S(1))) + Int(x**(m + n - q)*(a*x**q + c*x**(S(2)*n - q))**p*Simp(-A*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*(m + p*q + S(1)), x), x)/(a*(m + p*q + S(1)))
    rule894 = ReplacementRule(pattern894, lambda r, B, A, c, x, m, p, q, j, a : With894(r, B, A, c, x, m, p, q, j, a))
    rubi.add(rule894)

    pattern895 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('j', S(1))*WC('B', S(1)))/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda m: ZeroQ(m + S(-1)/2) | ZeroQ(m + S(1)/2)), CustomConstraint(lambda n: ZeroQ(n + S(-3))), CustomConstraint(lambda q: ZeroQ(q + S(-1))))
    rule895 = ReplacementRule(pattern895, lambda n, r, B, A, c, x, m, j, q, b, a : x**(q/S(2))*sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))*Int(x**(m - q/S(2))*(A + B*x**(n - q))/sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)/sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule895)

    pattern896 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**q_*WC('B', S(1)))*(x_**WC('j', S(1))*WC('a', S(1)) + x_**WC('k', S(1))*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda j, x: FreeQ(j, x)), CustomConstraint(lambda k, x: FreeQ(k, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda k, j, q: ZeroQ(j - k + q)), CustomConstraint(lambda n, k, j: ZeroQ(j - S(2)*k + n)), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda k, j: PosQ(-j + k)))
    rule896 = ReplacementRule(pattern896, lambda n, B, A, c, x, m, p, j, q, k, b, a : x**(-j*p)*(a + b*x**(-j + k) + c*x**(-S(2)*j + S(2)*k))**(-p)*(a*x**j + b*x**k + c*x**n)**p*Int(x**(j*p + m)*(A + B*x**(-j + k))*(a + b*x**(-j + k) + c*x**(-S(2)*j + S(2)*k))**p, x))
    rubi.add(rule896)

    pattern897 = Pattern(Integral(u_**WC('m', S(1))*(A_ + u_**WC('j', S(1))*WC('B', S(1)))*(u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, r, q: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule897 = ReplacementRule(pattern897, lambda n, r, B, u, A, c, x, m, p, j, q, b, a : Subst(Int(x**m*(A + B*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule897)

    return rubi
